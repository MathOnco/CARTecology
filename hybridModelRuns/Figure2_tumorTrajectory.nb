(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    304765,       5797]
NotebookOptionsPosition[    302233,       5748]
NotebookOutlinePosition[    302572,       5763]
CellTagsIndexPosition[    302529,       5760]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Figure 2a: Tumor trajectories", "Subsection",
 CellChangeTimes->{{3.770732474036524*^9, 3.770732481863142*^9}, {
  3.783353389442473*^9, 
  3.783353392959772*^9}},ExpressionUUID->"cdd230be-83a0-4628-96c3-\
2736b3d72280"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dir", "=", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<trajectoryData/\>\""}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tumorTrajectory", "[", 
    RowBox[{"filename_", ",", "xRangeMax_", ",", "style_", ",", "o_"}], "]"}],
    ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", ",", "lengthData", ",", "stratifiedData", ",", "xTix"}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"data", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Import", "[", 
          RowBox[{
           RowBox[{"dir", "<>", "filename"}], ",", "\"\<Data\>\""}], "]"}], 
         ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"lengthData", " ", "=", 
       RowBox[{
        RowBox[{"Length", "[", "data", "]"}], "/", "5"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"stratifiedData", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"5", 
               RowBox[{"(", 
                RowBox[{"#", "-", "1"}], ")"}]}], "+", "1"}], "]"}], "]"}], 
           ",", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"5", 
               RowBox[{"(", 
                RowBox[{"#", "-", "1"}], ")"}]}], "+", "2"}], "]"}], "]"}], 
           ",", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"5", 
               RowBox[{"(", 
                RowBox[{"#", "-", "1"}], ")"}]}], "+", "3"}], "]"}], "]"}], 
           ",", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"5", 
               RowBox[{"(", 
                RowBox[{"#", "-", "1"}], ")"}]}], "+", "4"}], "]"}], "]"}], 
           ",", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"5", 
               RowBox[{"(", 
                RowBox[{"#", "-", "1"}], ")"}]}], "+", "5"}], "]"}], "]"}]}], 
          "}"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", "lengthData"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xTix", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "\"\<0\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"30", ",", "\"\<30\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"60", ",", "\"\<60\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"90", ",", "\"\<90\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"120", ",", "\"\<120\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"150", ",", "\"\<150\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"180", ",", "\"\<180\>\""}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ListLogPlot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"stratifiedData", "[", 
             RowBox[{"[", 
              RowBox[{"#", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"stratifiedData", "[", 
             RowBox[{"[", 
              RowBox[{"#", ",", "5"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", "lengthData"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotStyle", "\[Rule]", "style"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Filling", "\[Rule]", "Bottom"}], ","}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2.5"}], ",", 
              RowBox[{"xRangeMax", "-", "5"}]}], "}"}], "1.05"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.25", ",", 
             RowBox[{"0.3", "*", 
              RowBox[{"10", "^", "13"}]}]}], "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"GridLines", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "100", "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"GridLinesStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Dashed", ",", " ", "Black", ",", 
           RowBox[{"Thickness", "[", "0.002", "]"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Days post CAR infusion\>\"", ",", 
           "\"\<\!\(\*SuperscriptBox[\(CD19\), \(+\)]\) tumor cells\>\""}], 
          "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.0025", "]"}], ",", "Black"}], "]"}]}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"AspectRatio", "\[Rule]", "0.45"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", "500"}], ",", "\[IndentingNewLine]", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 SuperscriptBox["10", "12"], ",", 
                 "\"\<\!\(\*SuperscriptBox[\(10\), \(12\)]\)\>\""}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                 SuperscriptBox["10", "10"], ",", 
                 "\"\<\!\(\*SuperscriptBox[\(10\), \(10\)]\)\>\""}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                 SuperscriptBox["10", "8"], ",", 
                 "\"\<\!\(\*SuperscriptBox[\(10\), \(8\)]\)\>\""}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                 SuperscriptBox["10", "6"], ",", 
                 "\"\<\!\(\*SuperscriptBox[\(10\), \(6\)]\)\>\""}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                 SuperscriptBox["10", "4"], ",", 
                 "\"\<\!\(\*SuperscriptBox[\(10\), \(4\)]\)\>\""}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                 SuperscriptBox["10", "2"], ",", 
                 "\"\<\!\(\*SuperscriptBox[\(10\), \(2\)]\)\>\""}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                 SuperscriptBox["10", "0"], ",", "\"\<1\>\""}], "}"}]}], 
              "}"}], ",", "None"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"xTix", ",", "None"}], "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", 
           RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "}"}]}], ",",
         "\[IndentingNewLine]", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", "\"\<\>\"", "}"}], ",", "o"}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotTrajectory", "=", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tumorTrajectory", "[", 
      RowBox[{"\"\<trajectory_10_2019-11-21.dat\>\"", ",", "200", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.007", "]"}], ",", "Red"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.65", ",", "0.9"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"tumorTrajectory", "[", 
      RowBox[{"\"\<trajectory_18_2019-11-21.dat\>\"", ",", "200", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
         RowBox[{"Darker", "[", "Red", "]"}], ",", "Dotted"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.65", ",", "0.75"}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<Tumor01.pdf\>\""}], 
   ",", "plotTrajectory", ",", "\"\<PDF\>\""}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQ/eb0rB+SEm8c/25k+gWidW51MEgB6X//o1nBtMxt
PhA9nU9BEER/ufpRFEQLiH/RANFSZnv1QPQs41W2IDqJQ8cXRH+4uzoMRHNF
rtbVMXjj6GEWZAiii+fn24Do908j7ED0qumfUkH0E76kDBCtcmlOmzmQvpb3
BUz3z96v8xtIn+qdqAuine4/j19m9MZxQdfmBBD9QGF7DoiOUPdqA9E+uSHa
dcZvHJUcuw1B9Lfos6YgemZxvx2IjpKc5QSi/7Z9BdPrvCQ8QbTV0gx/EG2n
UhkMokWa2SNAdHZhaQKI9nA8nQqiz1X4FIJoe9fNNSC62s6vBUS77EvuANGG
nL96QbTFLb/5IPrQ/LrTIPqH0vJzILqo7t9lEF3n7HkNRAMA7M2vdQ==
  "],
 CellLabel->"In[97]:=",ExpressionUUID->"83073cb3-8c2c-450d-8f01-acb0cbdec9d1"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {{{}, {}, 
        {RGBColor[1, 0, 0], PointSize[0.004583333333333334], Thickness[0.007],
          LineBox[CompressedData["
1:eJyM/Xc01///OP7bhCh7770f9gg3ySibQmSkrMhKNikjiiTSoFBGSbJnyKqQ
iCR7pZRk7/XzeZ/zfV3v5+mfX/90LudxH9fb9Xa9XW835zgP3A6epo4EeHh4
gZR4eP/v///vX4fA0aBoYmX0+c0wnrBnsLoYcXdhxr59HCSvB9xOUT/6mXp7
cN9beWkFNjHZ6mHtQ4JCJMpIYuTZtn1okXp1xYeE2H0X82UfyU2vUpeKLXi9
tW+3/Chlv4wG9fRX426hpMpIykI6Rovtg3r369WFQ2TKKC9xYpRKpUN9ydDY
58m+CW5pjLqvfFG3aR3ckz6kjDRseIjYE3rVp1kSyN7vW/gSXfGkQ796lwTp
BxNyZYS06qT0Lg2rT/g8fvFl37VPZ9BY55h6ivhjWQ0KZdS47JQ7uzuhzl7H
s5S67/Hg0LOSaEo9/s9S2PC+8+zPj7ck/lKfkiF0xqdURoThQt6HFn+rL0TW
8xPu+3tuncFTu7/qfH8qGEb2rw/auSyt3v9PfbGVyiN+369KVhp+FsyrP/Un
lqXct3oj95LY6oI61fcbKmf244kO28bb1FhSFzulLHJhP/65gajUX4nL6p62
Op5S++OdtRWPiJtaUde4o3amYj9flkPuTMnH1tQDhO78WyBSRgkO3qxZKevq
kd7v5AcI9q9PDB0LWtpQz3rv+NcVTxnZGwX1dptuqXtonq57vKOETOzvn/Mp
3VYnW5pVcNpUQqR++WdkmHbVu1w/5rWsKiFUIcG8ErqnHviXWa94UQnNuDGn
f/HBQ0+vfGbn/6eE0jOIjDME8VFZ0NWPDL+V0GPF1Xa3YXzUQHKn7NqkEnr7
PY5FJ5kAkY1KlFsMKyHnymXbU/qEiG34tGjKNyW02Jx94ykxEVLq/huM61RC
CQSxhgHviJBeUiQF5wcl9PlM9E/2UGI08uJtk2mdEvKgaTo5q0KC+iwsLteV
KiFRjX+dtjsk6KmjOYNJnhKiuzefT9NIimT0KSpWniohymTao+O3yNBt01aD
xHtKSAGnqbdgeQh1/ThMghe1/7xrae+WxclRZJI7FbWfEvrKY/jFg5ICXXN9
kXbFUQkV+0Y/Zl+nQJdFikvfmiqhgacMk9FLlMi73jsoXFUJndFQspmaO4zG
PX4cGhVQQl2T1n2af6kQDWVXxByVEtKLDjN5Nk2NGBSKzMpXFNGF5C7HcJ8j
yL448YjSoCLKmBp/9mb+CBquJtEJq1dEw/JLoyMeR5F86bJ6/DNFxBJDxE41
exQtq59/fzlSES0GW6V+OkeDFE3dmttcFFGbZyHz7U806MzctyRtfUX07ALJ
w5PHaNGvsLGunxKKKMjiHANZPi2KMjm5UHhEEZnqFSe/Z6VDKRMMUnkLCkhE
nYw26jYdwplShfZ9UUCUtXbkpXN0iILFnCCnVAH9U67AnzSjR6ZO7Wf7UhRQ
VyXVxtFKenRXztnII0ABFcs7zSM2BtTue9n98lkFlFxa+8sznAHtbWysfVNS
QH7S9KNPfzCgsV3mjXxmBWRZ6P6tQ5cR5WZqKi+syyNlieaO7XxGJDi1YZDd
J4/Y8llbRI8yoT63S8ltZfIIlTpyb11iQiu8X/rXU+TRxbdvQtuamdA5PGvm
cn95FNO80f+IgxmJLGwQElrKo/xPmvKuAcyITvKSypiCPOr6Gn9PsZsZCT3P
MTdklEfLQ33/SMVYUHiD1U+DVTnENMWt1xfFgsg4jgeOfpVDx2bdcnNGWRBb
jEsGYYkcsl8pI/RTYkVqOWpL1XflUOTOnp1WEiuySwukJfGQQ8kaVlp9k6xo
8HZq501DOZQVVSriKsuGbpTRJpRIyKHSVqojW5FsSCLj/O9YKjnUfNh1Ja6X
DfF8yo2k+CeLvpo0DXAIsKMkAiFGpQ5Z9OM++7tCP3Z0Zu++C22+LFru988+
/oEdDT1DZqm3ZBERR/etr4wcSN3yaMsXF1lE5yDm5eTCgRgHHd5VaMsivpzo
M+uVHKiUq/CcIZ8skv0zpnzrECeys2T7kIIvi05IqHCxWXGiL896j98bkUGn
fe4TF+Rxoh7V08LHa2TQzsfCw3xLnEh6+nUkSpVBPdQ/yTvYuZBJ4Q98omAZ
JFSzREV2nAvppmS0xVvJoFAnfFpNJy6k6LDNMKokg7qPUjOG3eLaj9NcfINJ
BgnWsrFWFXChm3doHIbXpFGIiwjncvf+8xpPM8Z/k0ZfaBV5Jde4EKVG3ttD
ZdJIoF5L8BIrN5JNeP35dJI0Cr5kJpqtzo1+iaV/8/SWRl305yXHLnAjdYdV
13NG0oi/wUOGNYYb5T37I8wmLo2C3EMUzPO50c6x1cZCcmnUyXhLJbGLG31x
M/vLOo1DfE0P1D8tc6Pn6r7Odi04FOiRrUnKzIPUZPz2Qp7h0GfmEp3jqjxo
2eJejN81HOJteacXep4HbdHcGjU4h0MBXp+NKqN40C4lzW8iJRzqYB0yW3rJ
g9InlROf0OMQz4ffFhKfeVBOxfc25kUp5O+zZu26yINw8n/uBH+WQp/Yie2z
GHiR+6fdweY8KcTdSnNxVJkXeRY8KVuLlkJ+vlwuLHa8iLc3n5fhghRq55Rw
PxPBi0Qp+nE86lKIq13F624uLyJ32fvHziqFrvqd9G1v50WlfFL9DP8kURu3
RQDJPC+ywGmH9GdLIs6OiyEadHzok5fEwk0bSeQb4BMeosiHLOeyLwjQS6JW
3vDIinN86DUFN17VJwnE0RkfsxjOhxZOVi5qRkqgK0GpceLZfIiPhdWpXUUC
feR/edellQ+tcMXeMFsSR+xfypOfz/IhPKcv7mN54sgnpPnhyFF+ZPHbUsvP
QRx9EOxOY5bnRxs2goLMLOKIrWc047QVPzrLvS3Q8UUMeYfNZiWE8aNhWVfT
lFgx9F5460XbM37kVbtaEKAhhlh7yV4Tf+BHxe8MlAI2RJFXOEMRmuFHo7yX
fjwsEkUtonxlwdQCqFe19+GIqyhi6cNVlcsIIG+HXzIGPKLI84Z67YKFABKS
oLk5PSCCmsUNGsRCBJD/F5xFaZIIYu63anHOEECFPT+tS/VFkEekS+uzZgGk
2L+m9pdYBDVJ+nUMTwug2KTqVLt6YcQ0GPGF6bAgSg2I2j0aKIwuRyf2muEE
kdFjoR8kMsKoEZfef+eMIOqw9qjSmBVCjMP5w62BgogpIGugJVcIucdUjxM9
FURRQaJJKQ5CqEHm45R6oyB6OULFXsEuhBhGe38H/RREHxizMkT6BZHbrcnZ
MnIhpNovJbucLIjeyS0szEsIoczCh4MMJoKIfnx3RdRMCG1w0MTc34/rUhzl
ppO/EFpYHWe80iaA6hVYdjNThdAiH4d58U0BRDcpSDBcL4QqyPw3z2gJINc7
ciRMP4TQXS7Sl/aEAqhOSZPcjEwYnb8pvPi1gR/RThlT3RETRtJ3zU3LwvmR
y11bmlZjYUR8lkSaCPGjWhV3BqKrwuhe3qOppj0+RPMrkEX9kTDacdN9vVrP
h5zv3eQIqhVG3Xn0ZU/36+qt6n2esvH9PN1upavT4ENHfz8TmN/Ps93SXKc5
IR9ySi4UERURQR9qh3ovtfCiGvU6CSdDEaR7qAx/+yYvOjLTLp3pI4JO/Qth
odTjRY4p/fJDKSJoilSkJ42KF1Vr/FJmrBFBC9eq29508yDq2WU101ERFPvK
OE77AQ+6+JBAM55QFEXtmSQ4nONBVZpHdD4KiiKChVsKxDw86HGotD2FvijK
JOrc4ZnmRq9jHeytvETRGR7RgIoCblQwIvCjJFkUqQvWRr6/yo248drP0lSJ
IgPzx0ZWqtwomduz02tYFI2n+L4IJuZGpJq0Wp34Ymho8l2E6GcuFHSxolpc
QAyVp7s3XXrAhWajrKXiTokhzsNsCsrnuZB97l72Hw8xtHHELe2xKBfq+fic
9WSSGBJ6Z6/GPMuJtP/oJOZWiCFDmegS7khOVEXxl4RkSAzZ2EXmGbFxIjHx
uyEX8cSRWHQNbVYZB0o3lF1s5BNHZhpadZzGHIjG67sz90lxFBMeb9k0w46i
EkOGr10WR77/5rwSYtjRejGX2UiiOJosNPeL3N+X3L42fzxWLo427w5VPmth
QyMrLmqpA+KIZN3r0h9HNmTCeLh0Y1cc6ZaGpluTsqFmxSJhS14JFHH3jtHq
S1akYHUmvVxHAomEbp6pNmBFecEbdPTuEmgzK94nd5EFsT95cuvKXQn08oHs
qdqHLOhunQZed6kEwjv5wnlLnQURjk1dleqXQCnnWI6dn2ZGEgYmD59sSKBs
2aij6qnM6Gz122pyFklUGUz6j8SIGUUKCg37K0si6uE8lUpCZnTU/UVguIUk
4ib6KnKkgQk9LRRiiPWVRHMWr4/xXGNCoisvihMTJVGuXvb0rCoTqlQSNnpc
IIk8jCOe+OwwomItz8mwj5JIoGgyPa6ZEeWblPlfmJBE5pnBY4pxjCjHZotC
d1sSEXYU//I7zYi6SrmMGSikkLHdlqI2OyO6nBN89wWDFArzZOhy/8uAyB9+
61LmkUKrcpmFJG8ZUG4s7miHuBTyek4XQBvHgE4Ex5nYKUmhF/iHGu6dY0B3
9To/tGhKIZXHy+zHpRnQECuNmpihFApnzjlrQMaAhP6eLr1nKYU0Tn7iKx2h
R75vH4hsOEihJHE7Cb8yevQubiDD7rIUsn7xkjcpjh5dkO75W+EnhURVK0J4
XegRyfd2xSPhUsiBmL1mW5MevQxtjnSJlUJF27fSObjokT5vbde7e1KoV6ro
d8w2HZr7WMbGnLa/76hoWar006F7HgUu3tlSqKqJ9KVcOR0qt+do6XothRhY
RhqOPqBDA6Z3uKXKpdC7B9GCggF0aPfEbmhCnRS6bh/y4upZOsSj4DHw770U
ejT1kmZHmQ5pC4/IG3ZKodllN5laNjp0idUw6XWfFHKsSe4r26VFdcWO7dKj
UgjnmTv+d5IW0ZwKJaz8KYUInt2XNWmlRU7jySqq/6RQpqx83kQBLaoOyL/S
uCKFtHkOs2Um0yKqI82vdHakULOkwYW4IFrkkDs4+YkIh0Ke91tm2dOicrUl
VlNKHBL4q9M7rU2LRLQ83tHS4tBA2bDNvCQteqr3+2IvMw5ZTq09YmXef7/p
xUMPuHCIhc7Z/RIBLYq2HH1tKYhD4sodFUMzNGjT1sqURQKHglOf2vr00iAP
x97VQVkcKq7n0RStp0ETbsapT1RwKPTsVR3SlzTI3Kdd3e44DnUp3DQgSaJB
35tkLb10ccgz9DyJwzUaZEX/1Ou6IQ5JJUa09bvRoLywL3/i981wpqym6P8P
txMhieMmOCTGzsDsfP6giTp+2lWdxqFLvuvl+BYHbUSmkVpjjkMbelNk1/UP
evjiu4zbVuBdKTz64f/nLNKwHxoHXfWJNPa6NQ79eLsTLqpw0Fy4ct87++eu
x/W5/mfEDrryvdBey769vi01nuc+aGU16bf37cHPyJrj+87j0FWX3DojhoM+
9yufKtcRfNSDTaHdCYfqz/E3cFAc9HHLSR5CFxw6KoZj/bx39IALrj2YFN73
2q0CRpvlgx5vkLT9tG97b5uttumDJuyupJi8hEM96veIGIcPusOlpHrLDYd0
an9fQl8OeqhVtKXNEzz4o8jJxRuc9v4eU8QVcOzdRZaxfVM8X7fVbjno5LpA
m7yrONTruHpIqOqga+wsl5X9cOjGD4f4H/kHPShZHHsoCPwjtpQzKxgcYyXl
ERKCQ05PcgiCMw46h8qk9lQ4eHTr2G2R6/vxEb4O+pN00G+sA3LWI8F818qJ
7kaDQyO7VzJjwLFbhC/mYnFIKzxgB3fzoKNEwy7UxoO/NFrJmCaAva/rJtkn
gkUzK5PH9+1b9CbWOOigDejGd5Tv4ZCIIS+d1uWDvtX92J4sBRx74l3b4wdg
q3P/mN88xCFVaf2bVPYHLfcraap237TT7xpfmR50oJIQWdcjHLIhffaYVeug
v/bgYuKf4BD7q+1v5xQOuuZ9tq9VJvh9uVrm72fg44Olpo7PceiXJI+Mh/BB
N77bJXXNwSFksXzOkPWgGVQI1YNycajtG9/yFuVBN+s0su3lwfX/taODSrLc
K7j+vz7+LXYV/w1Yk3nI1GvfPBrOsVd3jxwwa2G16uq+37IkP6maO+hCq5D5
pBIcUv5ck/F+7KBliJ/i2VeAtXvJtqYrwaLcA/++VuOQxFGhhcdfDjrCRzlu
tQaHcnlPDcg2HnRVUqGqah0O+QknJ90rPui4yj+/yBrBR+OL5u40gc/5LZTH
tIBz7XBhNz6ABWc8dhNawRlSbWWdbfv1/EpFvfjZQW+q5u29a8chNqbJ6cR7
B72UpCse1wl2mXx8o2Tff4cEIyVvHPT56BCNgS4conKnmYnxPmi329oKdl9w
KE7acSjV/qDzGo1VUrtxKEj4w4aj0UGfTaXjEezBIUPt9y0/VA+64hc7DVUv
Dlk9fp1JL3bQV2XPRLjv28RdpH2F+aCZI67e+96HQ8u71WdvkB60wk+CM88H
wbe/y7vxDIPxBGTXLfdNRdvo7/Wb+oC1cBvnaMdwaP906yLUdNDeNrjhkQkc
0ntZkMefdtCCIoMaL3+C8bU6XPmnwTpq9l5H/4DjFZb8dmbATX+kXDZmwadN
ZAr35sCZ34q/US+CpRdPmQstg8uunD6iuwoe5RrCTa9B/P+1wdsTct5bcP1/
XY7nWDKyA9f/1+mGGRov8KX/58L86+fZCcE6WQrZe0TgkdTZ6XES8PCjK15f
yMCKvwIjWsnBkc/UilspwfdM+v6ZUkn/b77+68HZ+8RsNOC+hRcrcbRgxecx
U0p0mPf9x/IG8T0ETOA3X5/r+DCDf5rNF+izgtl7jjEIsoNj6hpyKTnBt7Jt
ZpL3/f/l87+Ouqd9x4YX7N2lINHGB5a/Q/sqQwBMb1VuULtvAnyTPXvfg45Y
vNEUJQKeLrqROS8KHh2687pZHPyNNLXqoSS4Vk3+nL+UNCpmza/o1jto3+5g
GXecNLKyki7w4TnoupilvPp9+9cYH1NcpzpgAcHOkZty4DdPrlHPy4O9VfBN
hRSkUdX8XUmWjoNWPu/JbKckjTyP362lyjxo+WpOHkFV8MxJXGi8Gvh87Ssd
awRmff3dvUJDGuW2Pvej8D3o2IgXute0wP06ujmT2uDxNqE3Bbrg3waHKgNP
gY1Ddqf19MFM5/aSeQzBSlvirjtG4AiJiYxBE7BZFd2Lt2bg55Guy+lnwJZq
xymjLMA+SS4RbmfBVwlFN02twV3fSdhUbMCtRZFPee3AOGZuRHke/Mzk1M8v
DtJI+/S2PLH2QbcIRgo/cgLPeKUsljlLI7q/dAzzDAdtadbLE+oGJsPXKvzu
Dj6BdyXmgQc4fC/D3twLvEZqZtHmLY2kVCVO1/88fMCUmidfiF8Fz/CWmXv6
gU+odtFSBYCfmM905QeC32voL5sGgxc6ZNp2QjD3n50mfR0Gzj/Lkk4QLo1M
8u9oOZYdtNSMAIltBPjCq2u/H0eCc5yp9GWiwb95nxS03wRzvjhUdSkW7Hkp
av3wbTCNArdgWRzYJ+/KEaZ4aXTER1ql58ZB6+l/N3a/C/4l0jSZlQgmeUKe
oJAE5qc2VW5LBh8Z4v/hkAKusq8z23sArs1P0kl/BK6OecdxPBXzfrLyNJE0
aTRwOMZlw/Cgx+XFM8mfSqN8jaaW98wHfWWmoeNMJridtudvzDNwVpBa85t9
N3xQ/ic0SXnAzeflQtezwfxXg/hEcsGX+JuyS16A3/RSCKrmgW8ZOqS2vwLP
2+kL2LwGj7i5xy8UgEdVdHRjCsFMe4HzXMVgIsWnAjUl4NR3tA/My8CDzx6t
LZaDX9a+IrlbCRZ67X9LvBosOcNk3F4Dfr3ZK+JaCxYlTyImrcc8j9l4LOsd
WFD4cM3xRnC2Ytv9sSYwr+5Nr7AWcKbFCT22D2DpCfezLh+lEQmXyCbFq4O+
TRV+zL9NGrUuUZtZeR90sWlFsmUHOLXV1PvSZ3A35Z2a9k7wIeNWYvEv4It1
A5PJ3eBFFoENvK/gD/E3yL17wZ8dS31+fANLBhBXWH0H42d+vNDTDw6cZqI1
HATXT266tg2BmWmKGXVHwAVZRV/fj4Ij2eIvko1Jo43DVde35Q76UGoXw8AE
GF9ZL+/HJLiC44jHsSnwZcJeXPJP8Jqz4sjCL/B5xSwTs99g3pznZyr/gKdy
205z/QUHiUqM3ZoF32T1Tlj7B75w/T2J0zx4lUNvuXcBzHrMhVpnCdzD3M9Y
tQwOzqX8KrgijXore5e/r1McMCVzz6eRNbDo60cj0uv7+/XHyrqeqoNGNnid
05vgpzWPtNW2pJGtaKLu54CDLqQ/wbyzA7aZOzy7uwsuW2vV0MOT+Z8P40Wn
PMAHqxjxkf8mADO+XHqnSgQu0+e6dZ8YXEG8ODFHAn5Z53RJnwycOubdkncI
zFzNkkVOAcYfFap3owQbZib0dRwG71VElUlRg7tLPgkmHwEvvlkjWD8K7tD/
zHWOFvz0d4ndOzpMPNuiz/gYwA+ps37EMILv87AJzjKB78klu5qwgBN0KfPL
WMFx1pH/mNnB5O+IV5f2nf6NYiNH7qDx1WzjMrhkEO9uR7viPPkBL797vKDN
C9bcyYhS5QOr93YLBfODVV4TfaoUAEefHk/cFATTMmSsqgmD7+3M3JISkUFC
p1K+Wb04aFGvyrUuMfCs49HOZnGwy3G70V0J8CTH6zlFKbAZQehPPxyYJJH+
TIU0uCmxhHZTBkzGV/dWTQ58xr2NKEoerK/s8ElAQQbdjySsHLU56EQJS6N6
JXDRjbGbb5TBi6PSIz9UwDKqUbIsqmBtzUgeMzVw3C73mTvq4LDNxZx2BL5c
31BFfhy8R/NYR08TbG0vSR1/Aly6bdHXqQX+jX/6Mq0OOM3WNMtCF2yv1Xk6
7ST4/NkF6/FT4B/OtKkC+uDib5prbgZgnm9DlkWG4Hu9V6tXjcAEvVRsx0zA
Pl9zQ6+bgtt8g6NS993NMv8n+chBTzuML/KeAYfSaH6jNAcno/uPFS3Arzx+
2V60BLMNfGFPOgvmKHtQ02QFdsx5yLhqDb5z+fyEsA3YSuTHmK0tuKpIYCjZ
Dkwpw5TVbg82k9qezjwvg5TiZ9c03h064JHrl/THL4CFYw0pKi6C3Uwer7Q5
gl8z/xwdcQIf8ZFhWHcGs+qz1tC5gvN+d2TLXgIX+760sHADl927eyXEHWx4
3z3z+WXwfe9XSZ88wFfx14nWPMHBb5oqeLzB07OXrxr5gD9VPjgcegV86GnI
mVe+YB5ua8GBq2DZ5B/nD/mDpSXbfikGgB+Eqaa7BIIRW4r3wyDwGdF/pz4G
gy8pa/Oth4CvnXy6IxgGTrZc/WZxDfzS2bDwZji4zi8ntuI6uCdq1+HXDcx4
k82PMUaCd54X0OtEgWlKSOb8osGCjbYfc26Cj30pz/wWAzYZowomuQV2mnM6
LX8bk+/dOnGnOPDdw4ykKfHgbDbPsZY74GrRD1UrCeBOZc4k/kTwj5P+7mfu
gTcsO7WiksBULoKcZclgXv9r6z/ugxWj+77QPQAb3Jd8deIh2CHrZqTvI7B/
yahN1mNwXKOCwtdUcOaXhCNET8DlY79+yzwFt8+pN11IB4/tPkhLygCvHJ6/
2pQJJmfXNVp6BuYUyxDizcLUm8o6vlk2+OQp48EbOWDbsy9Ki3PBV1zw7ky8
AMf4WzrT5IGfRBei468w6+0+GYtPPvhDlv1S5mvwUEnlpy8F4IXGIzn4hWCS
bpdruCLM+h5/Z3m+GCw1zySdWALW2vOiaCgFW1G1/pgvA3uyc9dxVYAjxQIf
GFeCH6l88QqvAhecEj5VWA1uOnudd6wG/N2lf5u6Fjzrj/umXgcmuBn7xrMe
zJgyHpP+DiyWreTQ2QDWKE1U2WsEmzf9ppNsxvTDbo1/ti2Y/B+lv9a9712x
eyG57gc9bUInNfABzLGgEvXwI3jxvTjBnVbw+zTOaxFt4Ja3n7tC2sEZ4+Fp
AZ/AKsvqzX4dYP/xsL9+n8EVZ+W7AzrB5jXH5EO6wIfM+cfDv4C1kmIyo7vB
3OvZevE94DqShsrkr+BfXx68T+sFUz1aNM/+Bk6b5DUq6APbtRQ9qPgONt2d
Y23oBxNuFbe2DYAVlIkSvw6C3XYnLowMgdMbG+Snh8E90RmHFkfApHrXhrZG
Mfmitn1DPA727Dl2g3oC/PwB6xnmSXCf9aYg7w8wBVf/ptgUWP1HRYf8T/CV
FykZ6Bc41/3qlVPT4EGp09qnf4OpV6SZbf+ANauO/nWewcxn6Hyd91/wK43O
xOBZ8ChxwcWof+DE39Ef2Odk0GrJl51Q+oOe7Yu6T7MA1laOJmnFOCw8UbN0
EVz+Pi08fQkcalHFdGcZXO/fPxi2Aib7nP/GexV89THzCac18A/fFNtz62CC
sUMfzTbAj9gljPU3wdLUpJ+0tsDyDPH0aBt8VpGZQmUHrFv67478Lub99N+i
pffAm2tvBiXwZP/n785cgaL4YEFuZCBEAK6bMtTlJwTPmoWc4yECs6Znh3IS
Y+73Es5kIwHLaLxuZiYFq9PgphnIwHqTpRR0h8AWpYqSR8nBF6LemlJRgD3N
kR8FJThYsPkR2WHwzXWdWmIqcFJr+xgBNTj9sRER3hHwK7cewR2MK45Z6G0e
BTcdHvRYowF3jtjeW6YFD76ZKFugA/8Kd+r/Rw9eMvmzPcMA3uPx4PrNCKZY
XtD8yQRmbLnqPMkM5k3ZuDXGApZ0Di0YZgWrKOJ3D7CBdQ5FrfSxg80GyJh7
OcB2r+KOdXOC3UKO2Hdygf0NkiM+cYMjOJhyW3nACXOpbe95wanvOP818YEr
I9/wHuOXRR0tqv6+1WQHbNBll8UqCD5Eni3bivF3jbI/L4TAuYEtGTHC4FPB
5aJuImCb0123jETBJ4OncuXEwFrkCers4uCyf/lcJBLguue07PMYH1uzpRyU
BCu9yGp7LwU2PZKyo4CTRRUFnskS1gfdrUOnTysDlpg8zF6PcRZz0J00WTCL
8c+9QDlwfclRMSt58JvkSNZjCmCZoz8rORXBr87qNxEpgTVPXKaYwVi4dPhi
tzKYPrrhRbUK+GbvndLnx8AndOtd41XBd6OsX/urgW9vJDs7qINlL3pGGCCw
MYvXP0UN8Lk2s4d8x8Evwz77HNEEPxc39N7G+G9AW8z0CfDYs5Q3X7XAp9fl
h99pgz8a9JG/1gEfe+6v+EgXXLjO6BR1EsxnWJnkfQr88Lllg40emHJj/d9J
fXC44SM2eQPw8nOlUzyGYJeNfn8qI/CQYVD2JsbGWSw9P43BzRvVeD0mYEUj
a4l6U3B+1pb1KzMw12Zq7IPT4GSjYxURZ8Bk2UM/PM3BIZshNOcswPNG7EjX
Enwxu/ay7Fnw902bVC4rsL7x7kdKa/C77Ker6xjLbqnxTZ0DvzAeNfliA2bL
uXat1hZTP1ucr1/agYlM3g3ctwcH5NiT3TiPmf8tPHkPB7C9SeYFqwvgrzka
idoXwbrb43XSjuC3Jjf+cjiBpXJ5WCicMetvu1FnDWMm0wtXJ13AcbmEzztd
wXg7z7tqLoF9TU/s5rqBp3N/iCa7Y+p9J/Js+GVwlyn/TXcPzPp60VJq6Qmu
3HGcOOEFFjMjOYLzBme8yFFl9wHT7Wq7HbqCWY+fB2P7rkB/+q8jheqnnl4F
f91bcDruBz5eMUtF7w8u9Phd/gtjUartJ28DMP1ysWL9XiB4+3Z72aUgcKyb
ZIZmMJhmxiGRPQSc9vak4zrGsmFnt3tCwTv0ycqFYeB4Z03S+Gvge8MP9C+F
gzfGzNd0roNnyhJW+W+A1e1uED+5gTl//MenGQKr7CPB9wirSwiiMOeZb6H2
PRi/faFxOCsas1/r2E343QRbNiey6cWAkYv+K65Y8HB/vfUaxnz9VIc6b4Hp
UnPv5t4G25ic+xoeB57id6yyigffluYQkrsDLil6TXEkAfw5p8hkBmPbb2u/
39/FjG9S7f2zRDCJ5m5/2D1wSBaOxToJ/OCreKhCMjhlzHeT9j5YQST51jzG
dyaIBTtSMOcnNrq2lw8wn0fUeUQ/BBv8caG98AhMaUJbqf4Y3F5Re44tFXyL
wwV/A+OTUTQ5vWlgsr9vTxU/AX8wdZ678xQcXXU02S0drMX1VlE3A0x002mY
LxNzHpw9cgP/GfjG6RqBEYw1ahzbq5+D8XiOeD3IAtfHVNP5ZoPD5i5WGeeA
Vc2pbcVzwdtvqwjIX4BreC/m/sQ46BaVftNLsNJC5Xx6Hnjd4sL9kFeY823d
YeWz+WB750LxoXxYL/+1mkZCpmsBWLHUlWcH4/iBn6U1b8ATeBd1ggrBUf0+
r9iLoF/91xfvturnFYNJijr8VUvArXq0qVsYx/20rKsqxex/oa8ygsvAQZc6
NtTLwRardSUkFeA+e//gToyv/lyke1wJVnjPr+NUBV569WNUphrceMysmKAG
zLP+OKUbY801G9fnb8E6vCcortaCb0zfs9epAxMXtBiz1IML4uXez2I8bNf2
uuEdGL/4zer9BnDHYdp7lxrBud6/fdSbMM+/XRNP14zZH719v//GmCRF+VR9
Czh2Rncw+T3mfDbVGXnpA2a/5O5F6CO4tI6TnKEVPKvKOjSD8RujluKGNvA3
lH7rQTt4BxfocPkT5nzGa6as2QHWoxOnYf4M9iEm/fMP40erYw3NnZjzyq/q
R4+7wL++J3t7fQFTtXmc1O4Gy9XocrP1YPbvfJ6NBYwjnmx3ffgKzrvz7cWT
XvCXa4XhV76B171uWZ7sA3M6XJTi/A7WNlMjW8H48gmmsbZ+zPlObrEiYwBc
I/ApwW8QPMGY46w/BD50KFydZxhz3tk8y7iOscWMzFzHCDhs6PCH56Pg7I5f
TwPHwJ/qGvyMxjH1/ybVkH8CzJJ5VWALY417Rrtdk5jzcITwt5wf4ARfwoKQ
KXC543CU6U9MfZtX2Aj9wpwPdRPldjEWVXI7/HUabCqiNfXyNziQlbP22h/M
eYlyI/nMDPjDTre76F/wv3/5J/BnwfRj0Wx9GJvR4RJWZqF//deZUmf+BsyB
6VRWTpHNg3clt240YDzNh18TtAA2sngeprAIduVnfLiKsR3HsaWKJXD2uMLx
4GXwkMuiPloBa0QxjpCsgjsnPr//jLGMk8LwgzXwWgP/9vl1sKf3iXd96zD+
//rWh2cLZzcx50/OtZ5pjIltpdwyt8Craa4EVtuY8/rRMA6GHUz/kWCJ+4px
RImzwv1dTP/6rNljsQd+FccjxIYn9z/fqZTFn8C4yZpB6iU+mKnc5LY3Abj6
M+s/ZUIw5XCbAjEReCn6il4Xxok216jTiMEvK00vu5CAu4+tGsuRgt2JO18Q
kIGHv1k5dmGMrz4X8PQQmJ4yus+dHPO8p3f8VCjA0iq1+uSUYJkXv036Mb5q
PxP24jBYuyGww58K/ICCVlGHGvywc6qK4QiYO6rc8CfGHrjexbKj4OtGJM+j
aMBmagHnztCCtVhL2fjpwDNrSePLGI/+VXrZTA+moCTzSWYAK4h+U77ICL5w
KotQlgmc4OrziZAZXBOD7vdg/CuXyvY5C5j2w5DAFVaw+s+8ueNsYDfiwEoa
dkx++HSuT2DcpEl/qpgDPOcwSXODE8x6o2jQhAusk3kti5sbfOWdweUFjNNH
WeUbeMDtu7937/KC19grP9jzgXlVo+9K8YONzp0+iycADg7m4enCOPfx/J90
QXBPVV2JpxB473tciLowWHTdSotaBGzBKEw1inGE/Nq3AlHwmzMt6WFi4EHf
JBdDcTBp8nkchwSmPkskN2cxtuveaayVBN9eaL8dLwWuOPL4tA0OPCnpwi4u
DbYeKlKT2ffDySvBx9dID/g6ifvrIhmwnPP0ipos2LaTKmQF45sKcgT5cuA7
kQErjvIYeySK8iiAke5M4hjGS0vCIxmK4MjVyQEHJbCHg9kZAWXw9NgE1wzG
xJdq6YtUwJsKt48EHAP3/ppfUFcF+/8QfUqmBn45/Wr7C8YjfvVrqergFny1
ECcEVsCdCMRpgEMq5ke3MSaOEXr+8Tj4ydiFimRNcDZ/OM35E5j4FJJfiWuB
Ofo+BW1iTP1NP/CDNrjkD0Vmsg446Hjz3/O6YM4xebXFfcuUEJHI3znoTgZm
A69T4GZHl4s7GFf+/fuqRA+cf8V7yVUf7OXLmMVrAGavsb4/ivHrR9RlTwzB
W5oBVTZG4MWnZZc5jcFx/4LTJzBek8nhyTUBT1E0d7qbgr9KfouQMQMX3O/m
3MI4hF8tpuk0+GzHx6y4M2AVxXU7c3PwPP/3HC4LMG/FG5cZjM/YtqSUW4Lb
9Xn4bpwFK02fIza0Ag89dpNisQa/TAhL+4mxyPvHzafOyaE7iW7KwZwHnVrb
jddqA3aYf8hlbgvO4Rf2pbQD/7Gq+tCI8YlJ34gQe3B8+a1riufBKlV0easY
K94orip3AGugzsCAC+A+FcdKlYvgBIqEk3iOYNZd+S6vfV+/ttnglkdywN8l
Lp6acwLL9aiEhTiD54it/0q7gF8qBln9xviWKhPuuSsY77qvrt0l8Oz8xzvs
buBYzo7qYYyDrIgfpruDq29dX3a4DG7w8soS9AArB1HNTux7TWlz97jEQXOx
Bzae9wJ34b7Tz2Gs33f5dbY3+GMIodY5H/CLrkUthivgoj/2Md0Y053N3bzr
C54QjTMzuQqW2HluS+sHXmqh/vMNY4WdQ22p/uD49cC+8wHgr+8K54QCwXnU
f5bmMb6tMP2xKgjMp5dsHhEMpuXMvmkQArZkND3JFAo+PkhxexLjiY8qam/C
wCYnSc2Dr4Hvu3F90AkHv/+VcpPuOjh/ofDOOMYXjBu/FtwAX9ShNguJAOOS
iwlPRYK17oaNM0aBv0f9+TWF8YupXZrSaHAmo6bdjZvgwpqCVuMYzPgepRlx
xoINPlT/m8X4lAJZ9ttb4Jffm7xu3waPWzkbW8VhxkOQeVw4HryVp6e9jvHm
cTerD3fAhHn8YSkJ4Ba++kLHu5jrHz9ckE3E5N9MGBHdAzcz7Kb2YMzxoIzo
eRI4In830CcZkz+vB1sa98HG/TqxR1Mw15+d4hnHWDfA4GPhA0x+apwCwx+C
+wY45I0fgQOGXHc5H2NMd7x7DmO5szlF9angXbmHaQlp4JOeXEl2TzDvf3Ty
vuRTTD3vcT3fw3jDU+7pzXQ5JKRroMSQR3zADwQm9w5lgr/Txj5/iLHYxYxF
42fg8NIKjUPPwbEkR0lbMCaY8WOMyAL7/qk5r5kNPhWjnUacAx6jibjXivHn
FEeahFxwkxfh/JkXYM8lPiKOl+C9iG3RXxg3hb7WLcoDpyRPqYW8As9dCVrV
yQePBNJZ0b0Gi5wfNh/HOCFMYaigALygGT4Y8gaTv4d9OnqFYFO+X/QsReBr
XNUqvzFeaYovrCwGK1SWuMeUgMs+uLlaloKpfNszhMrA/wSyD29gfEHQ41Vr
OVjnipjf4wrwSwWnS26VYGpymqhjVWDLmtimw9Vgn81Q3lGM75XOPCusAd9R
oEU33mLmS8dzw6wWUy+7rzv468BXvF7VrGF8XvVyY2s9OOMyy3jqOzBe2iaD
RwP4R8flC6gR/OHYXAtNE2a+1CnVpjD+aHyxvaIZfJ8o7/KtFvBydSqfzXvw
z7tE85IfMM8Pqukk+Agm8s1s6sW4/vuT9het4AmaZ7+C28DaZNmMRu3g92zP
rXk+gSNs00pWMNbSfcDZ2gFOZnySnvYZzJZVI+PVCc5OJxjS7AKHXY56yPgF
/Oi8pesMxtcjkgzru8FLn4x0k3rAa/QvzJ2/gjPpqwJVesFHbqcXUX8Du+IH
705inCnral/ZB259dLsv7js46Q3hxfP9YJvdRWL5AXAlUUgt+SC4V6Hx1ijG
JSLTl0uHwLWI1jl2GDxK5exnOwLOkyVNkxkFX5Vn/k42Bl5/3igygrEDk3By
yTj4reAVutgJzPqPfP/KdhJT/3s6VrI/wI6iXFzkU+DH81d2RjH+Sum2WPYT
k79zYnu3f4GZPo7wOkyDWbVe2iv+Bqtw82Zd/A39/L8e9un9tfAHfPMER1Xk
DPiJ+7Gg43/BJclWKnizmPMNreyzBoyVBvWuRv0D1/m1PNebw5wXFpTGaefB
ydXuUl/nMfX7H29Qqsw4LIJZyMYMVjH2kTvzqXQJ3ObQdurKMqYffC64KrcC
jnPwPbqJ8QIeOtywink/9zG2W2uY/tNTTXpmHcxTlJbKvQE+lCOSN4exTNdN
8vpNTH994/cwYQv8bqFL5vw2WC+M653MDpj0qCIf6S44a3jo5CDGLE5e7IV7
4LTRrPgoPPn/2e2Uym1rfPDXALm5yX0X1fQxtLEdtGx7qK4fIVgxZoGGggic
RXLIqR3jI1FcVbeJwQTfnVuNSMA2PpzmDKTgqfHLhqMYv+S8cDGPDHwoLMXe
/xC4f1iCSpsczGzSrcZAAT5lfLT1F8asK+Ix1ZRgyph46zuHwe7vzAQuUIHt
GjY/K1KDx/NX1KiPgGufnnP4ibECXa5g3VFwu47ttRQacCzHtLUnLfg9t1GR
Lh04OpTqKg89uIVq+sk2xpd2G3j7GMB6rdf2ihjBapQ/ReKZwGFfQzNcmMHl
dNetT7Bg4t1ptOBiBXP1pyVuY5wYN0LczwZ2bm8oKmMHz0sN37vHAaa1psv1
5MTkx+7+X30ucP7z9vMi3OCPJlbEZDyY+fxB+20K40X/1e4mXsznsnxbmXzg
Z5HjBuH84Aq7hDZbATBPQo6XqiC44EO5OpsQeKjngsIWxn3VDhYDwuCOIf/0
KhHwHJ0v9SNRTHytMrkBYuCMnSdOluLgWw7PDBQlwOeslc8xSYJXhS/cW8f4
+hee+e9SYBr5yKtVOEw9C6TwPJYGM1m6rwXJYOrTn33ZWhZ8grOFSVUOc/3v
cEcOeUw9XvYe2MPasNJ/XAGcKRGk2qQI/lsxLJqtBG7NOaR5UxnTDyqFIlxV
MPX5/sJfvWOY+i6fCpNQBYf7DykfVcNcT+XHtYzx3ZQxyT518Ivjp1yrEdjl
zOSnJxqYz4WHrK4fBztKO9I6aoKHNwtWdU+A3ThnicS1wPo2xmpHtcHa0RTP
VzAWjDSVGdABb56znKvTxdSHlHHf85NgOSWPmZhT4I3Wn6IeeuAY038PzfTB
3jZV0koGYJG7oRschuCH+Z6zREaYfnb3PdUMxj9kK2y+GGM+L/IbqDABEyoe
i3pqiomXSdU2ygx8saHQ0f00+E5NR6rZGcx4CtvxVMzBUk4TyTwWYKdabUty
S/BKFU5vEePBoIHLA2fBQeqB7xqtwORO2pqvrMEnvUNWk86BfddNBkJswCm1
+HOOtuC8tGZZIzvMeknseaVoDx4odz7Ncx5cr18jQemAia+AVGUVY/Oz0YFj
F8Ahs95/2i5i6kmc+E6ZIya+3aCLGU7gbxepPG47Y+YzdD3PzwUckOrH6uAK
5hVtrje4hKn/EtaHSm6Y/WmhOovfHfynYnjq6GUw3Wqd9S7GXd1pJDMe4LJb
JT/7PDHji0LbzV6Y+TC8rlPsjYn3TvHHdB/MfsxEEx5/Bbz1c/hysC+mXzGe
vud6FUy/UjJr4QeOH1MO1/YHT3sJnZILAG9feKvHF4jpJ0/lo2iDwMcZelcJ
gjH9jrQ/YxFj+YbrERMh4MON1OndoeDQnMalxjCwmOrg9ZJrmP0x5PHJrHDw
bMJxvfvXwRLFtDejb2Dq091kxz8CvHzqWIFrJCZ+dsbH1lGY/XGIr8EgGsz8
JJcX3cTsVzWTDdIxYJkM1jT+WMx++gIvSmnf1nE4UaIoogMuvyt2WeA22GWt
X6QP4/Y5SYGaOLDEdBR3ejy42+9tedQd8Hyn7iGPBPC4YAK15V3w9BJPimYi
eNdGKVDqHpj0yVgKRxLYNfr+l8PJYC87YepdjJ2EoxXn7mPuTzNRGk8Bx1Wm
7/U8AFP5vQr+8BCcbP8wveYR2NBP0a7wMRiPbOhNdiqYOog3JjUN/K58cDTx
CVhGr/tNzFPwxdP1C9fSwbHH+TP8M8B/d1TKPTPBMcbfJF2egQNWzQ6dfw6+
vRWnbpUFxg9o7jTLBnuaPakwyAHT/KZa0ckFk+ibRx9/ATZ9tOKq+hLcNfns
qWIe+NP9k7yyr8AChburkvng/sodJrHXmPzdyooRKgBP4Xto8b/BeGHOkKcQ
LNvYm8VZBBa8PabNXgxWej8hy1qCqQfdeg/mUnA6kdMyYxl4Z6+7haEcfNae
apK+AvM8ciF9+krw4oQSPn0VJn+uFwjoqzGf97cZ0deAM5jSftO/BbcukXcx
1IKzA/QJmerASR6pEcz1YDsueRPWd5h6trd1Z28AP5cw7+VsBJ/wd4rjaQJ7
K/cl8jeDJyiXp4RawE8GDsWKvcfU3wfHYKkPYGIfi1rZj2BVZmkjpVZMPTDq
4tTawHm6/y5otmPyF+H/S/cTJv/OKm8NO8DWiQkTpz+Dpd0/W1l3YvKlYsTv
0AWOzLt03PUL2Go+uNirGyx3e+RqQA/4OvNsXPhXsEM24XpML+Z5OdcqEr9h
6rW8tv1xH6afEbLLZX3H5Ht8a+l1P9hnppKscgBcZVF2pXEQTGhpLNcxBB6r
njH4Pgwu85munRwB36zLjZobBb86HZe9NYZZj8ob7GQTmPU/azpHN4np17+2
mHl+gCN0zj6VnAIzhnaFqP4EXzv1oUzvF/hfyrOTVtPgwI8fFV1/Y+rrYUZE
wB/M+vJMEomZAV++Tirx8C+YY8LpzotZTH/pYNGv+gc2/xrn3DaHuV9DeHxw
HpzFf7ZqdgG8xnxzfm8RXOLDdZNmGZO/4Luh/CuYevbS/qq4ChaKenNbfw0T
30mlLPt1MMOgKcfVDfCtCrfN2E0wa9WSYvoWWPTH2YHSbfAz4iOjbTvgc3ox
OuO7mPk8IUe3vgeWz4/RosZX+J9/fV0ZFCBQwHy+0KdGCA6MXFCyIAITDLsS
eBGD6x514mJJwBf9Hn98RgrWstH48JYMfEKJ4VjTvv/389x/jLtxeuEvOXhl
iP9wOQV4bc2ss4oSvEFzI7H2MPhvjeOJFipwpYjtk05q8HaE0d2hI2C/bfYv
M0fBbSWUojs04KnKT25H6MALXHHO/PTgYSbjNRUGMBfpm3UzRvC6ipbBZSZw
WI32wE1mcEYYa8xzFnCEDN7xd6zg9uvlK8NsYEMBxaRtdky85EGUbJzgPw2S
Z45xgdnIUxxsuMGUVzVFr/GAu+OJcjN5wYK0xZ+b+cBK9LRp0/yY8Rg1Hjos
CC4OO0IrLQQewFsqsRDGzB/D7HSoCFjmOt6bLFFM/Pih4R5iUB//tXddw6HX
EmCVbfsHYZLgG3X0dvFS4NbwNoE0HNg/esz2jTRYceBfUosMOFyFuGpEFuz3
dDJgUw5MMRX9kEkBrEkQN6qoCCZ61MFmrQT+W3+L75oyWJ+FoytLBfydwG6n
/Rj4epDUnWVVcOcrEhcOdfDi+5grJxH4k7VU2lUNcL3LRuez42AyfMa9Lk1w
rk8xK54WmD2hiFlKGxymdO2fvQ44umvy7j1dcIhS33rzSUw/eHaOc/0UeD3B
cVdUH3zsTdldewPwc6H3X+4bgp/MFtW2G4EdyrhNCEww+ahTiVUyBW9TpFzw
NgNHVPOPvDwNfvtSYW3iDPhjyoXXbBbgDyIRe+aW4AyDvL+JZ8Grk5PC1lYK
KOZpz1uGccIDXmigpq84B4799ftpsg044aTe4RJb8P1X+cFf7MCsJ1IZVuzB
Kw4fJdgcwK7T0uXaF8DaTuqnfC+CM4oqc7IcwcOnTW71OYHj0qnfUrqAr8xL
HDrhCp7EtZ0IvQSe95TVqXQDu3g4zy67g3vuRDLJeIBfLtu89vEEd7rRJpd4
gZvUCipWvMHtt1qJla6AS0ZPeYT6gs20OScbr4JPnt60OOQPDvrD32gcAA6r
MGB6FAg2+GxhOhEErnyKXMVCwCQP18z9Q8EX32syNIWBif7mPqMOB+d/NVw/
dx08aLpG++oGeNR/ZHEjApyYUX7vZBR45FIeU/m+LRSuVUxKHLT0o5zrUjFg
PaGfCSyxYDcS7bMnb4Fv/8jmCbgNZr63+CM/DlxEz1s4FQ9O9VK/ypMArrh+
qsnhLth+RFI/JxHsN0Ta8vceuCbvwl+5ZHAg4/TN6/fBoQtLFzpTwLZ9faac
D8EsdKpi3o/A/hfuf2p+DN4+f5eOJQ1sXZw77fUETPm3QKr1KVg3w7+PJwP8
KftqW2gmOD76ykb/MzA6dspcIQucaJ719X42+NpJy2XTHAXE839/T4PggMUf
TnD8fAHuIGB0HHgJtlG4eovhFXjWreeNaT7YtmYy6P5r8Kn20uahAnAO3nyo
UCH4jm+UcEAR+PYMt3d7Mdh7+ws+TykYj54mKbgMXCcu+qOvHOwb2lEjXwke
ykW/HlSBT+BVKG1VgycDC27bvwUTdFtVf6gFn70tkCtVjzG+gkLqO7BlJb4Z
aSN4u//PlG8TuJRpYXiyGRPvctAFkhYFxPx/f68B/4BvrNfvbH8AbyRQax9u
BRN3q466t4GP0rkHfGoHt2cXhUh1gPs2SqIffAb/nda7h98FDnJOjarfd8T/
fd893gE3q/PT1PeAv3buaPV8BUv0xxIpfgPHTNA3pfWBe7mL1En6wSsbxzZ9
BsCxF37OTgyC7QoHPp4ZBr/T8j3dPgJevad/TnMMLJ1DW1I7Ds4UeCWlPAlW
1u8pqvwBVm94xKj0Ezxzrl+75hf4smmPoPpv8MBqc3bzH/A0c0qB3l+wdchN
6a+zmPf7/OG1nQMvjv/x+z2PGZ+QAbffItjkvQ4L0TK49L2RVdIKeIj0u+3L
VQUU8n/f772n/l+bXrh56MMGOGXsccT0JtjP3KDIdhts/mlv5OsOOD/IZ8Z4
D3xDv3+jC08R3sfgRniGAHx4PDFziBCspuWZ4EwMnn8yeWuFBBy9kW4VTQb+
Hva5nZkcvHmmrOgNBdiNbuuHzmEw3QS95gQVOFS+4XXYEfB9/ChydhpwIoPW
8VpacKM5H/kjOkUk/n/ff7t9wOoMhm2djGDjsEOu20zg5FrKY9dZwN+3qalJ
2MCTh6neJrKDXy3wMvBwgtvTBegruMClFUXImAd8bblQZ5YXnPlXciieHxyW
fKMaJwg+tX4r57sQWMf8tNsNEfAbajQgIQbW/mrcNiwOph95xJggCXYQzHp2
HAdu+bFqtC6NGb9qOmmhLPimft/MRXlF5Px/36+1ccDyzIlOVUpgr985ZkvK
4JcTMzmxx8ATg1KbnGpgg6mnNnXqYHZBoeMOGmCRNvOnFJpgp5jDP6pOgBcl
bUvctcErHwfe8OqCpwQEY0dOgnkz6tbS9MB7gfFvbQ3Aukk76bxG4CgTAe8Z
Y7A4OytxuSm4x/S4fMRpcIVx7aSpOXj63/g8nyX4DEf9iY2zYCrl0tZOa/Dj
HxSXX9iA76XkckTYgS3VC7rszoN72Yz81S6AN2NukHE6gsvceoLxncHP7ku2
TbmA9dwbZtsvgZNTPo6XuIPX2AOePfEAW1kMicV6gW0tG8P8fMAx5Jkpjr6Y
+mCIvmLuh8lXEhH9yQDw4UT+YNUgsKK/VY5MCDhry/2BaBhm/u/fMOIPBxsW
kHZx3QB/3HjJwhEJHvh9GsceDc63FWTgiMHkg92nnesWOOFdkRl/HDg0JqZI
9A74Q+rbXzJ3Mfm/rriheg+zPhTwfp9MBpMWKFdbpIBVxHi8nB+CAwIpqAIf
g11/XngQlwau2cinfvYUHFkcElSVAb7qGzzY/QzM+ue8/L8scJceXgJFLuZ9
/dK/RV6C6a/N6Oq/AjsnCRV7vgYPn18Tuv8G3CIYWPS2CKzFMmT0swRTP/HW
ZDTlmHpx1hlVrwQHZm5+96wGVxmNbWS+Bdv0XNH+VoeZ/wdqTZQN4E+Nvb5a
TeD0z+N24S2Yemxjjq39AGYm117ZbgWLmau8VPsEnk0ZfnnjM7g/nmf7Yxf4
9BGa7KM9mPfxN7w814upPxML6rw+cGEX1eBGP9iFTpxGfwhTP1qHqzNGwClv
mb6vjYEbSTu9TSbBscU1ca+nMP3teLQE5TSYiXzs3OU/4Gt3E9m//MWML+6q
n8IcJn5Pv8sZC5j76dLIKJfBhNNbBkGr4KXIOs2ZdXBcPs+87RZ4qzfobO8O
pn+vSEcb4inB/afaQ9oIwAR53zVPEoPnzcgn2kjBkjV8tkbkYC4v0vpvlJj7
CbMpzlOD65bI9P4dBQf+sooMowMPSg3VHWUEo5NT+C+YMc/j/nlagw0cLOlZ
P8wBfkEndjKUG7xHPr7ByQcWnYjVdNq3pPL/+33G1QPeIQ1UYBAG21PReA6L
gOVdi5+KiYMpm00/B0uCGQNKeIZw4JNO507oyoJrhSoU38mDF2XmJo4rYXxD
P7ZTBZzXHnPFUQ3Mp9WFT6QBpp90ys7TBJN+cRyz1MbcnzigSXUS7Dru5dGm
B868/f7Ia30lZP9/P28sHLBOSKqgownY/qhpoLIZWDl0nOPJGTDdb6/mPQsw
qdOaaIAVOAd/6+7eOfCqnPDOfTvwP0oDQmUHTDzGg2/+XASPq/v+/9q673is
3v9x4BRFSlbIyMxK9ryRl5kUsveMzKxsbhVKVoNKGWWGREYlRGZEgxQKacis
JClK+vb7/HG/3o/7/v35fJzr9brOOddx7nOdc7kuthJP9HdHKzd/H/SV16lj
mkfQMRuXxrkC0Vu5ggbXgtFZp30050LRyqOsZeMR6JD837dGotHWD58dNY5V
hfn/nb9JCtdpFA0xxaOJfR77lhP+s31EdlNIInph8k/PfBI6YJ1jSGIq+qvZ
cXe5s+i4Zp3bX8+jFd3bzrdcQNs4ru/My0Tv0hnjOJeFPubkH5GWi17n/OJr
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
eX/PXknOp/T/Abqa7l0=
          "]]}}, 
       {RGBColor[1, 0, 0], PointSize[0.004583333333333334], Thickness[
        0.007]}, {
        {RGBColor[1, 0, 0], PointSize[0.004583333333333334], Thickness[
         0.007]}, {}}, {
        {RGBColor[1, 0, 0], PointSize[0.004583333333333334], Thickness[
         0.007]}, {}}}, {{}, {}}}, {{}, {{{}, {}, 
        {RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
         0.0055000000000000005`], Thickness[0.005], Dashing[{0, Small}], 
         LineBox[CompressedData["
1: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
/qz+P/9cAz8=
          "]]}}, 
       {RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
        0.0055000000000000005`], Thickness[0.005], Dashing[{0, Small}]}, {
        {RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
         0.0055000000000000005`], Thickness[0.005], 
         Dashing[{0, Small}]}, {}}, {
        {RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
         0.0055000000000000005`], Thickness[0.005], 
         Dashing[{0, Small}]}, {}}}, {{}, {}}}}, {InsetBox[
      TemplateBox[{"\"\""},
       "PointLegend",
       DisplayFunction->(StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.126], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.126], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.148] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False]& ),
       Editable->True,
       InterpretationFunction:>(RowBox[{"PointLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"Directive", "[", 
                RowBox[{
                  RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                  ",", 
                  RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                  RowBox[{"Thickness", "[", "0.007`", "]"}], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                   False]}], "]"}], "}"}], ",", 
            RowBox[{"{", #, "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"{", 
                  RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
            RowBox[{"Joined", "\[Rule]", 
              RowBox[{"{", "True", "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                  RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                  RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
            ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
      Scaled[{0.65, 0.9}], ImageScaled[{0.5, 0.5}],
      BaseStyle->{FontSize -> Larger},
      FormatType->StandardForm], InsetBox[
      TemplateBox[{"\"\""},
       "PointLegend",
       DisplayFunction->(StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.148] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False]& ),
       Editable->True,
       InterpretationFunction:>(RowBox[{"PointLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"Directive", "[", 
                RowBox[{
                  RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                  ",", 
                  RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                  RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["2", "3"], ",", "0", ",", "0"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                   False], ",", 
                  RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}], "}"}],
             ",", 
            RowBox[{"{", #, "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"{", 
                  RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
            RowBox[{"Joined", "\[Rule]", 
              RowBox[{"{", "True", "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                  RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                  RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
            ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
      Scaled[{0.65, 0.75}], ImageScaled[{0.5, 0.5}],
      BaseStyle->{FontSize -> Larger},
      FormatType->StandardForm]}},
   AspectRatio->0.45,
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, -1.3862943611198906`},
   DisplayFunction->Identity,
   Frame->{{True, False}, {True, False}},
   FrameLabel->{{
      FormBox[
      "\"\\!\\(\\*SuperscriptBox[\\(CD19\\), \\(+\\)]\\) tumor cells\"", 
       TraditionalForm], None}, {
      FormBox["\"Days post CAR infusion\"", TraditionalForm], None}},
   FrameStyle->Directive[
     Thickness[0.0025], 
     GrayLevel[0]],
   FrameTicks->{{{{
        NCache[
         Log[1000000000000], 27.631021115928547`], 
        FormBox[
        "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(12\\)]\\)\"", 
         TraditionalForm]}, {
        NCache[
         Log[10000000000], 23.025850929940457`], 
        FormBox[
        "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(10\\)]\\)\"", 
         TraditionalForm]}, {
        NCache[
         Log[100000000], 18.420680743952367`], 
        FormBox[
        "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(8\\)]\\)\"", 
         TraditionalForm]}, {
        NCache[
         Log[1000000], 13.815510557964274`], 
        FormBox[
        "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(6\\)]\\)\"", 
         TraditionalForm]}, {
        NCache[
         Log[10000], 9.210340371976184], 
        FormBox[
        "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(4\\)]\\)\"", 
         TraditionalForm]}, {
        NCache[
         Log[100], 4.605170185988092], 
        FormBox[
        "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(2\\)]\\)\"", 
         TraditionalForm]}, {0, 
        FormBox["\"1\"", TraditionalForm]}}, {}}, {{{0, 
        FormBox["\"0\"", TraditionalForm]}, {30, 
        FormBox["\"30\"", TraditionalForm]}, {60, 
        FormBox["\"60\"", TraditionalForm]}, {90, 
        FormBox["\"90\"", TraditionalForm]}, {120, 
        FormBox["\"120\"", TraditionalForm]}, {150, 
        FormBox["\"150\"", TraditionalForm]}, {180, 
        FormBox["\"180\"", TraditionalForm]}}, None}},
   GridLines->NCache[{{}, {
       Log[100]}}, {{}, {4.605170185988092}}],
   GridLinesStyle->Directive[
     Dashing[{Small, Small}], 
     GrayLevel[0], 
     Thickness[0.002]],
   ImageSize->500,
   LabelStyle->{
     GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"},
   Method->{
    "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Exp[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Exp[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{-2.625, 204.75}, {-1.3862943611198906`, 28.729633404596658`}},
   
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, 
     Charting`ScaledTicks[{Log, Exp}]}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], 
           AbsoluteThickness[1.6], 
           Thickness[0.007], 
           RGBColor[1, 0, 0]], 
          Line[CompressedData["
1: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
9A74Q+rbXzJ3Mfm/rriheg+zPhTwfp9MBpMWKFdbpIBVxHi8nB+CAwIpqAIf
g11/XngQlwau2cinfvYUHFkcElSVAb7qGzzY/QzM+ue8/L8scJceXgJFLuZ9
/dK/RV6C6a/N6Oq/AjsnCRV7vgYPn18Tuv8G3CIYWPS2CKzFMmT0swRTP/HW
ZDTlmHpx1hlVrwQHZm5+96wGVxmNbWS+Bdv0XNH+VoeZ/wdqTZQN4E+Nvb5a
TeD0z+N24S2Yemxjjq39AGYm117ZbgWLmau8VPsEnk0ZfnnjM7g/nmf7Yxf4
9BGa7KM9mPfxN7w814upPxML6rw+cGEX1eBGP9iFTpxGfwhTP1qHqzNGwClv
mb6vjYEbSTu9TSbBscU1ca+nMP3teLQE5TSYiXzs3OU/4Gt3E9m//MWML+6q
n8IcJn5Pv8sZC5j76dLIKJfBhNNbBkGr4KXIOs2ZdXBcPs+87RZ4qzfobO8O
pn+vSEcb4inB/afaQ9oIwAR53zVPEoPnzcgn2kjBkjV8tkbkYC4v0vpvlJj7
CbMpzlOD65bI9P4dBQf+sooMowMPSg3VHWUEo5NT+C+YMc/j/nlagw0cLOlZ
P8wBfkEndjKUG7xHPr7ByQcWnYjVdNq3pPL/+33G1QPeIQ1UYBAG21PReA6L
gOVdi5+KiYMpm00/B0uCGQNKeIZw4JNO507oyoJrhSoU38mDF2XmJo4rYXxD
P7ZTBZzXHnPFUQ3Mp9WFT6QBpp90ys7TBJN+cRyz1MbcnzigSXUS7Dru5dGm
B868/f7Ia30lZP9/P28sHLBOSKqgownY/qhpoLIZWDl0nOPJGTDdb6/mPQsw
qdOaaIAVOAd/6+7eOfCqnPDOfTvwP0oDQmUHTDzGg2/+XASPq/v+/9q673is
3v9x4BRFSlbIyMxK9ryRl5kUsveMzKxsbhVKVoNKGWWGREYlRGZEgxQKacis
JClK+vb7/HG/3o/7/v35fJzr9brOOddx7nOdc7kuthJP9HdHKzd/H/SV16lj
mkfQMRuXxrkC0Vu5ggbXgtFZp30050LRyqOsZeMR6JD837dGotHWD58dNY5V
hfn/nb9JCtdpFA0xxaOJfR77lhP+s31EdlNIInph8k/PfBI6YJ1jSGIq+qvZ
cXe5s+i4Zp3bX8+jFd3bzrdcQNs4ru/My0Tv0hnjOJeFPubkH5GWi17n/OJr
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
eX/PXknOp/T/Abqa7l0=
           "]]}}, {{
          Directive[
           PointSize[0.004583333333333334], 
           AbsoluteThickness[1.6], 
           Thickness[0.007], 
           RGBColor[1, 0, 0]]}}, {{
          Directive[
           PointSize[0.004583333333333334], 
           AbsoluteThickness[1.6], 
           Thickness[0.007], 
           RGBColor[1, 0, 0]]}, {}}, {{
          Directive[
           PointSize[0.004583333333333334], 
           AbsoluteThickness[1.6], 
           Thickness[0.007], 
           RGBColor[1, 0, 0]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           Thickness[0.005], 
           RGBColor[
            Rational[2, 3], 0, 0], 
           Dashing[{0, Small}]], 
          Line[CompressedData["
1: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
/qz+P/9cAz8=
           "]]}}, {{
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           Thickness[0.005], 
           RGBColor[
            Rational[2, 3], 0, 0], 
           Dashing[{0, Small}]]}}, {{
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           Thickness[0.005], 
           RGBColor[
            Rational[2, 3], 0, 0], 
           Dashing[{0, Small}]]}, {}}, {{
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           Thickness[0.005], 
           RGBColor[
            Rational[2, 3], 0, 0], 
           Dashing[{0, Small}]]}, {}}}, {{}, {}}}}, {
     DisplayFunction -> Identity, GridLines -> {{}, {
         Log[100]}}, DisplayFunction -> Identity, DisplayFunction -> Identity,
       DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      0.45, Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, -1.3862943611198906`}, DisplayFunction :> Identity, 
      Frame -> {{True, False}, {True, False}}, 
      FrameLabel -> {{
        "\!\(\*SuperscriptBox[\(CD19\), \(+\)]\) tumor cells", None}, {
        "Days post CAR infusion", None}}, FrameStyle -> Directive[
        Thickness[0.0025], 
        GrayLevel[0]], FrameTicks -> {{{{
           Log[1000000000000], "\!\(\*SuperscriptBox[\(10\), \(12\)]\)"}, {
           Log[10000000000], "\!\(\*SuperscriptBox[\(10\), \(10\)]\)"}, {
           Log[100000000], "\!\(\*SuperscriptBox[\(10\), \(8\)]\)"}, {
           Log[1000000], "\!\(\*SuperscriptBox[\(10\), \(6\)]\)"}, {
           Log[10000], "\!\(\*SuperscriptBox[\(10\), \(4\)]\)"}, {
           Log[100], "\!\(\*SuperscriptBox[\(10\), \(2\)]\)"}, {
          0, "1"}}, {}}, {{{0, "0"}, {30, "30"}, {60, "60"}, {90, "90"}, {
          120, "120"}, {150, "150"}, {180, "180"}}, None}}, GridLines -> {{}, {
         Log[100]}}, GridLinesStyle -> Directive[
        Dashing[{Small, Small}], 
        GrayLevel[0], 
        Thickness[0.002]], ImageSize -> 500, LabelStyle -> {
        GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"}, 
      Method -> {
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Exp[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Exp[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{-2.625, 204.75}, {-1.3862943611198906`, 
       28.729633404596658`}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, 
        Charting`ScaledTicks[{Log, Exp}]}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       PointLegend[{
         Directive[
          PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], 
          Thickness[0.005], 
          RGBColor[
           Rational[2, 3], 0, 0], 
          Dashing[{0, Small}]]}, {""}, LegendMarkers -> {{False, Automatic}}, 
        Joined -> {True}, LabelStyle -> {
          GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"}, LegendLayout -> 
        "Column"]]], {0.65, 0.75}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7846516285963163`*^9, 3.78465171402264*^9}, 
   3.784651749251747*^9, {3.784651786246234*^9, 3.7846518268611*^9}, {
   3.78509348032797*^9, 3.7850935172068987`*^9}, 3.785093554986166*^9, 
   3.785093642466354*^9, {3.78509371400965*^9, 3.785093756129712*^9}, {
   3.7850937909923*^9, 3.785093825147148*^9}, 3.7850939357903223`*^9, {
   3.7850940448657722`*^9, 3.78509411805732*^9}, {3.785094178856522*^9, 
   3.785094187048686*^9}, {3.785094260494157*^9, 3.78509436504746*^9}, 
   3.785094396105328*^9, 3.785094774574554*^9, {3.785094818321308*^9, 
   3.7850948350986423`*^9}},
 CellLabel->"Out[99]=",ExpressionUUID->"20443ff7-4eb7-4f2d-9594-8ea159d9bb90"],

Cell[BoxData["\<\"/Users/altrock/Dropbox/Projects_Dropbox/CART/code/\
hybridModelRuns/Tumor01.pdf\"\>"], "Output",
 CellChangeTimes->{{3.7846516285963163`*^9, 3.78465171402264*^9}, 
   3.784651749251747*^9, {3.784651786246234*^9, 3.7846518268611*^9}, {
   3.78509348032797*^9, 3.7850935172068987`*^9}, 3.785093554986166*^9, 
   3.785093642466354*^9, {3.78509371400965*^9, 3.785093756129712*^9}, {
   3.7850937909923*^9, 3.785093825147148*^9}, 3.7850939357903223`*^9, {
   3.7850940448657722`*^9, 3.78509411805732*^9}, {3.785094178856522*^9, 
   3.785094187048686*^9}, {3.785094260494157*^9, 3.78509436504746*^9}, 
   3.785094396105328*^9, 3.785094774574554*^9, {3.785094818321308*^9, 
   3.785094835354499*^9}},
 CellLabel->
  "Out[100]=",ExpressionUUID->"1d32e15a-ff79-4a5f-ae6a-ee359de874e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "\[IndentingNewLine]", 
   RowBox[{
   "\"\<trajectory_41_2019-06-25.dat\>\"", " ", "has", " ", "stochastic", " ",
     "region", " ", "to", " ", "eventual", " ", "relapse", " ", "and", " ", 
    "growth", "\[IndentingNewLine]", "\"\<trajectory_21_2019-06-25.dat\>\"", 
    " ", "has", " ", "stochastic", " ", "region", " ", "to", " ", "eventual", 
    " ", 
    RowBox[{"cure", ".", "\[IndentingNewLine]", "You"}], " ", "can", " ", 
    "check", " ", "from", " ", "1", " ", "to", " ", "100", " ", "to", " ", 
    "see", " ", "if", " ", "you", " ", "find", " ", "one", " ", "you", " ", 
    "like", " ", "better"}], "\[IndentingNewLine]", " ", "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7707328747704887`*^9, 3.770732909932353*^9}, {
   3.770733048897592*^9, 3.770733190407092*^9}, {3.770733240326041*^9, 
   3.770733246490193*^9}, {3.783352633314204*^9, 3.783352647761829*^9}, {
   3.783352828650344*^9, 3.78335289187575*^9}, {3.783352923930839*^9, 
   3.783352993531146*^9}, {3.784651535927726*^9, 3.7846515924363117`*^9}, 
   3.784651626570919*^9},ExpressionUUID->"686bd98b-5249-429b-a073-\
707edcfab6a6"],

Cell[BoxData[
 GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1: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
L9vIgk9wtjKpymHu/xXuxCGPycdL3oN7WBtV+U8ogLMkglSbFcF/KkdEc5TA
bbmHNG8qY+pBlVCEmwomP9+d/6N/DJPfFdNhEqrgcP9h5aNqmPup/LiWMb6b
Mi7Zrw5+fvykWw0Cu56e+vhEA3NdeNj6+nGwk7QTrZMmeGSzcFX3BNidc45I
XAtsYGuidlQbrB1N8WwFY8FIM5lBHfDmWav5el1MfkiZ9D/TA8spec7GnARv
tP0Q9dQHx5j9fWhuAPa2rZZWMgSL3A3d4DACPyy4PEdkjKlnd99RzWL8XbbS
9rMJ5nqx32ClKZhQ8VhUuhmmv0yqdlHm4AuNRU4ep8B3ajtTzU9jxlPUgadi
AZZynkzmsQQ712lbkVuBV6px+ksYDwUNXho8Aw5SD3zbZA0md9bWfGkD1vMO
WU06C/ZdNx0MsQWn1OHPO9mB89NaZI3tMeslsfelogN4sMLlFM85cINBrQSl
I6Z/haQqqxhbnIkOHD8PDpnz/t1+AZNP4sR3yp0w/dsNupDpDP56gcrztgtm
PkPX8/1cwQGpfqyObmBe0ZYGw4uY/C9lfajkjtmfFmuy+T3AvytHpo9eAtOt
1tvsYtzdk0Yy6wkuv1X6o/8yZnxRaLvFCzMfRtd1Srwx/b1T8iHDB7MfM9GE
x18Bb/0YuRTsi6lXjKfuuV0F06+Uzln6gePHlcO1/cEzXkIn5QLA2+ff6PMF
YupJunwUbRD4OEPfKkEwpt6RDmQuYSzfeD1iMgR8uIk6oycUHJrb9K8pDCym
OnS99Bpmfwx5rJcdDp5LOK5//zpYooT2ZvQNTH56mO74R4CXTx4rdIvE9J+d
8bFNFGZ/HOZrNIwGMz/J40U3MftV7VSjdAxYJpM1jT8Ws58+x4tS2rdNHE6U
KIrogCvuil0SuA12XRsQ6ce4Y15SoDYOLDETxZ0RD+7xe1MRdQe80KV7yDMB
PCGYQG11FzzzjydFMxG8a6sUKHUPTPpkPIUjCewWff/z4WSwl70w9S7GzsLR
ivP3Mc+nmSpNpIDjqjL2eh+AqfxeBr9/CE52eJhR+whs5KdoX/QYjEc2/Don
FUwdxBuTmgZ+WzE0lvgELKPf8zomHXzhVMPitQxw7HH+TP9M8J8dlYrLWeAY
k6+Srk/BAavmh849A9/eilO3zgbjB7R0meeAL5s/qTTMBdP8olrRyQOTGFhE
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
oB1M4JXV/Bnj14PpXYUd4CnK7LnATrAScR6dVhf4LVOOCds7cJh5WsUaxooq
91k63oOT6dIfp30AM+XWibh1g/MeHxiV7wGHOIc/oPsIfnjF0GER45thSRdf
fwKvvtNSSeoFr9MU6tv1gbNoavylP4Mpoh+XkfeDHfADd6cxzhJ1sKweAHc8
jB6IGQQnPT9oc2UIbLb7i1B8GFxNEFRPMgL+LNEUNY5xBe+884tRcD2isosc
A4+T2fmYfwE/ESVKExkHe4sfHySeAG/kNPF+wdiKnie5YhL8isuTOnIKc//f
eltsPo3J/3/KxqJfwbZ8rKwkM+BHPz13xjHuO+L46+Uspv9M+f9Fz4Hp27+w
W82DGRWLLCW/gaVPsufafIP5HNdjHp/nVhbAdxRO1NxaBKc7nQuQ+w6uSDaW
xlvCrG+oRLMbMZYaUfcO/wFu8GnNUV/GrBdWpCapfoKTa50E+35i8hfHm0ek
F61+gRmIJzT/YOwhdvndi1Vwp1WnmudvzHzwocRbbA0cY+V17C/GK3joaOMf
zPVPnmOKWsfMP721RJc3wGxlaaknN8GH83mfLGMs0nOH5PVfzPz63OdB3Bb4
zUqPyJVtsHoI6xuRHTDRMUkOol1w7tio6gjGDFfdmEv/gdPGc2PD8cT37Kgm
HW2CD+7zE1ue/s//tz88rkW7glV8DoIlI1YoSQnAuYcOX+3CmCKctSaaEHxg
0K5D6xDYzINFn5YIPDPpfHEc4yIWa5snxODDISmWvofBQ2NnyJRIwMe1P52n
JQWrXTrWMYcx49rpiNoj4CMRsSZ3j4Kd3uiesiYDWzT+/SBJDp58unaenAJc
n2FqNYuxBHUBV8MxcJey+fUUSnDkiXkTVyrw25NaZSrU4NvBZN5sNOBWsvn0
bYyv7TayD9CC1Tuu/yujA58/MssbSw8O6QvOtD8OrqS+aaLAgKnvTpMBKyOY
dSgtYRvjhJgvhENMYLuuxrKXzOCfgmOJiSfAVCbUBa4smP6xuPddgxX8NKfr
Cu9JcLu2MSExG2Y8v1L1z2D8y/fPp2Z2zHFRjq0sDnD2rUnNG5zgKou4TvNT
YLa4fDcZLnBJW6UsEzd4tNdaYgvjgVorg2Ee8PtR38c1vOBlai/yh3yY+nWI
FPjxgzN30q8angZHWWVrSp4Bm5qcNaUXAP/hsU7cwPjmR7afg4JgSvFb3jVC
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
h2uWazp6RLEoHEzPTS76P/8HrG4/cQ==
     "], {{{}, 
       {RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0, 0], Opacity[0.2], EdgeForm[
        None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl2kMMIMq2QNG2bdu2bdu2bdu2bdu2bdu2+/dfL3ewclKjSqWyZydho/aV
2gUKECBAQOKH+W/+7xyYns69yURGMpCedKQlDalJRUpSkJxkJCUJiUlEQhKE
+e+OeMQlDrGJRUxiEJ1oRCUKkYlERCIQnnCEJQyhCUVIQhCcYAQlCIEJ9L93
EYB/oQME+D/+8off/OInP/jON77yhc984iMfeM873vKG17ziJS94zjOe8oTH
POIhD7jPPe5yh9vc4iY3uM41rnKFy1ziIhc4zznOcobTnOIkJzjOMY5yhMMc
4iAH2M8+9rKH3exiJzvYzja2soXNbGIjG1jPOtayhtWsYiUrWM4ylrKExSxi
IQuYzzzmMofZzGImM5jONKYyhclMYiITGM84xjKG0YxiJCMYzjCGMoTBDGIg
A+hPP/rSh970oic96E43utKFznSiIx1oTzva0obWtKIlLWhOM5rShMY0oiEN
qE896lKH2tSiJjWoTjWqUoXKVKIiFShPOcpShtKUoiQlKE4xilKEwhSiIAXI
Tz7ykofc5CInOchONrKShcxkIiMZSE860pKG1KQiJSlITjKSkoTEJCIhCYhP
POISh9jEIiYxiE40ohKFyEQiIhEITzjCEobQhCIkIQhOMIIShMAEIiAB+BdK
//zlD7/5xU9+8J1vfOULn/nERz7wnne85Q2vecVLXvCcZzzlCY95xEMecJ97
3OUOt7nFTW5wnWtc5QqXucRFLnCec5zlDKc5xUlOcJxjHOUIhznEQQ6wn33s
ZQ+72cVOdrCdbWxlC5vZxEY2sJ51rGUNq1nFSlawnGUsZQmLWcRCFjCfecxl
DrOZxUxmMJ1pTGUKk5nERCYwnnGMZQyjGcVIRjCcYQxlCIMZxEAG0J9+9KUP
velFT3rQnW50pQud6URHOtCedrSlDa1pRUta0JxmNKUJjWlEQxpQn3rUpQ61
qUVNalCdalSlCpWpREUqUJ5ylKUMpSlFSUpQnGIUpQiFKURBCpCffOQlD7nJ
RU5ykJ1sZCULmclERjKQnnSkJQ2pSUVKUpCcZCQlCYlJREISEJ94xCUOsYlF
TGIQnWhEJQqRiUREIhCecIQlDKEJRUhCEJxgBCUIgQlEQALwL6T++csffvOL
n/zgO9/4yhc+84mPfOA973jLG17zipe84DnPeMoTHvOIhzzgPve4yx1uc4ub
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

          "]]]}, {}, {}}, {{}, {}, 
       {RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
        0.003666666666666667], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwl28MSIIqSQMF+bdu2bdu2bdu2bdu2bdu2bffkjVlkRP3AqVVVgobtKrb9
X4AAAWKFDhCgJzH/m4lNHOISj/gkICGJSEwSkpKM5KQgJalITRrSko70ZCAj
mchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGKUozilKAkpShNGcpSjvJUoCKV
qEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b2tKO9nSgI53o
TBe60o3u9KAnvehNH/rSj/4MYCCDGMwQhjKM4YxgJKMYzRjGMo7xTGAik5jM
FKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwW
trKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc4CSnOM0ZznKO81zgIpe4zBWu
co3r3OAmt7jNHe5yj/s84CGPeMwTnvKM57zgJa94zRve8o73fOAjn/jMF77y
je/84Ce/+M0f/vKPACL9HwEJRGCCEJRgBCcEIQlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOa0JRmNKcFLWlFa9rw33JtR3s60JFOdKYLXelG
d3rQk170pg996Ud/BjCQQQxmCEMZxnBGMJJRjGYMYxnHeCYwkUlMZgpTmcZ0
ZjCTWcxmDnOZx3wWsJBFLGYJS1nGclawklWsZg1rWcd6NrCRTWxmC1vZxnZ2
sJNd7GYPe9nHfg5wkEMc5ghHOcZxTnCSU5zmDGc5x3kucJFLXOYKV7nGdW5w
k1vc5g53ucd9HvCQRzzmCU95xnNe8JJXvOYNb3nHez7wkU985gtf+cZ3fvCT
X/zmD3/5R4CA+icggQhMEIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAm
sYhNHOISj/gkICGJSEwSkpKM5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5
yE0e8pKP/BSgIIUoTBGKUozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWo
TR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b2tKO9nSgI53oTBe60o3u9KAnvehN
H/rSj/4MYCCDGMwQhjKM4YxgJKMYzRjGMo7xTGAik5jMFKYyjenMYCazmM0c
5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN7exgJ7vYzR72
so/9HOAghzjMEY5yjOOc4CSnOM0ZznKO81zgIpe4zBWuco3r3OAmt7jNHe5y
j/s84CGPeMwTnvKM57zgJa94zRve8o73fOAjn/jMF77yje/84Ce/+M0f/vKP
AIH0T0ACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4xCUe
8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzkJR/5
KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSlHvVp
QEMa0ZgmNKUZzWlBS1rRmja0pR3t6UBHOtGZLnSlG93pQU960Zs+9KUf/RnA
QAYxmCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBC
FrGYJSxlGctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEO
cZgjHOUYxznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7x
mCc85RnPecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/85R8BAuufgAQi
MEEISjCCE4KQhCI0YQhLOMITgYhEIjJRiEo0ohODmMQiNnGISzzik4CEJCIx
SUhKMpKTgpSkIjVpSEs60pOBjGQiM1nISjayk4Oc5CI3echLPvJTgIIUojBF
KEoxilOCkpSiNGUoSznKU4GKVKIyVahKNapTg5rUojZ1qEs96tOAhjSiMU1o
SjOa04KWtKI1bWhLO9rTgY50ojNd6Eo3utODnvSiN33oSz/6M4CBDGIwQxjK
MIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFLWMoy
lrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+9nOAgxziMEc4yjGO
c4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u84CHPOIxT3jKM57z
gpe84jVveMs73vOBj3ziM1/4yje+84Of/OI3f/jLPwIE0T8BCURgghCUYAQn
BCEJRWjCEJZwhCcCEYlEZKIQlWhEJwYxiUVs4hCXeMQnAQlJRGKSkJRkJCcF
KUlFatKQlnSkJwMZyURmspCVbGQnBznJRW7ykJd85KcABSlEYYpQlGIUpwQl
KUVpylCWcpSnAhWpRGWqUJVqVKcGNalFbepQl3rUpwENaURjmtCUZjSnBS1p
RWva0JZ2tKcDHelEZ7rQlW50pwc96UVv+tCXfvRnAAMZxGCGMJRhDGcEIxnF
aMYwlnGMZwITmcRkpjCVaUxnBjOZxWzmMJd5zGcBC1nEYpawlGUsZwUrWcVq
1rCWdaxnAxvZxGa2sJVtbGcHO9nFbvawl33s5wAHOcRhjnCUYxznBCc5xWnO
cJZznOcCF7nEZa5wlWtc5wY3ucVt7nCXe9znAQ95xGOe8JRnPOcFL3nFa97w
lne85wMf+cRnvvCVb3znBz/5xW/+8Jd/BAiqfwISiMAEISjBCE4IQhKK0IQh
LOEITwQiEonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt
6UhPBjKSicxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzl
KE8FKlKJylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1o
Twc60onOdKEr3ehOD3rSi970oS/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjP
BCYyiclMYSrTmM4MZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8G
NrKJzWxhK9vYzg52sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUu
conLXOEq17jODW5yi9vc4S73uM8DHvKIxzzhKc94zgte8orXvOEt73jPBz7y
ic984Svf+M4PfvKL3/zhL/8IEEz/BCQQgQlCUIIRnBCEJBShCUNYwhGeCEQk
EpGJQlSiEZ0YxCQWsYlDXOIRnwQkJBGJSUJSkpGcFKQkFalJQ1rSkZ4MZCQT
mclCVrKRnRzkJBe5yUNe8pGfAhSkEIUpQlGKUZwSlKQUpSlDWcpRngpUpBKV
qUJVqlGdGtSkFrWpQ13qUZ8GNKQRjWlCU5rRnBa0pBWtaUNb2tGeDnSkE53p
Qle60Z0e9KQXvelDX/rRnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nC
VKYxnRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJW
trGdHexkF7vZw172sZ8DHOQQhznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wlWu
cZ0b3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nCV77x
nR/85Be/+cNf/hEguP4JSCACE4SgBCM4IQhJKEIThrCEIzwRiEgkIhOFqEQj
OjGISSxiE4e4xCM+CUhIIhKThKQkIzkpSEkqUpOGtKQjPRnISCYyk4WsZCM7
OchJLnKTh7zkIz8FKEghClOEohSjOCUoSSlKU4aylKM8FahIJSpThapUozo1
qEktalOHutSjPg1oSCMa04SmNKM5LWhJK1rThra0oz0d6EgnOtOFrnSjOz3o
SS9604e+9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxjPBOYyCQmM4WpTGM6M5jJ
LGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjazha1sYzs72Mku
drOHvexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFq1zjOje4yS1u
c4e73OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJL37z
h7/8I0AI/ROQQAQmCEEJRnBCEJJQhCYMYQlHeCIQkUhEJgpRiUZ0YhCTWMQm
DnGJR3wSkJBEJCYJSUlGclKQklSkJg1pSUd6MpCRTGQmC1nJRnZykJNc5CYP
eclHfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kqUJFKVKYKValGdWpQk1rUpg51
qUd9GtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCTXvSmD33p
R38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZzGYOc5nH
fBawkEUsZglLWcZyVrCSVaxmDWtZx3o2sJFNbGYLW9nGdnawk13sZg972cd+
DnCQQxzmCEc5xnFOcJJTnOYMZznHeS5wkUtc5gpXucZ1bnCTW9zmDne5x30e
8JBHPOYJT3nGc17wkle85g1vecd7PvCRT3zmC1/5xnd+8JNf/OYPf/lHgJD6
JyCBCEwQghKM4IQgJKEITRjCEo7wRCAikYhMFKISjejEICaxiE0c4hKP+CQg
IYlITBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN7OQgJ7nITR7yko/8FKAg
hShMEYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q1KAmtahNHepSj/o0oCGN
aEwTmtKM5rSgJa1oTRva0o72dKAjnehMF7rSje70oCe96E0f+tKP/gxgIIMY
zBCGMozhjGAkoxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jM
EpayjOWsYCWrWM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvayj/0c4CCHOMwR
jnKM45zgJKc4zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94zBOe
8oznvOAlr3jNG97yjvd84COf+MwXvvKN7/zgJ7/4zR/+8o8AofRPQAIRmCAE
JRjBCUFIQhGaMIQlHOGJQEQiEZkoRCUa0YlBTGIRmzjEJR7xSUBCEpGYJCQl
GclJQUpSkZo0pCUd6clARjKRmSxkJRvZyUFOcpGbPOQlH/kpQEEKUZgiFKUY
xSlBSUpRmjKUpRzlqUBFKlGZKlSlGtWpQU1qUZs61KUe9WlAQxrRmCY0pRnN
aUFLWtGaNrSlHe3pQEc60ZkudKUb3elBT3rRmz70pR/9GcBABjGYIQxlGMMZ
wUhGMZoxjGUc45nARCYxmSlMZRrTmcFMZjGbOcxlHvNZwEIWsZglLGUZy1nB
SlaxmjWsZR3r2cBGNrGZLWxlG9vZwU52sZs97GUf+znAQQ5xmCMc5RjHOcFJ
TnGaM5zlHOe5wEUucZkrXOUa17nBTW5xmzvc5R73ecBDHvGYJzzlGc95wUte
8Zo3vOUd7/nARz7xmS985Rvf+cFPfvGbP/zlHwFC65+ABCIwQQhKMIITgpCE
IjRhCEs4whOBiEQiMlGISjSiE+O/+//Q//8LEJs4xCUe8UlAQhKRmCQkJRnJ
SUFKUpGaNKQlHenJQEZ68X/CTEVc
         "]]}}, 
      {RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
       0.003666666666666667], AbsoluteThickness[1.6]}, {
       {RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
        0.003666666666666667], AbsoluteThickness[1.6]}, {}}, {
       {RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
        0.003666666666666667], AbsoluteThickness[1.6]}, {}}}], {{}, {}}}, {{},
     GraphicsComplexBox[CompressedData["
1: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
AURavps=
     "], {{{}, 
       {RGBColor[1, 0, 0], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1FOUHgYQBtD906ZKUzPe2LZtbuxkY+3Gtm3btm3btp0iaNMGd88+3PPN
PM3TN8Gh4SFhUYKCggKcD0RmxP6f4QmPecRDHnCfe9zlDre5xU1ucJ1rXOUK
l7nERS4EIm+c4yxnOM0pTnKC4xzjKEc4zCEOcoD97GMve9jNLnayg+1sYytb
2MwmNrKB9axjLWtYzSpWsoLlLGMpS1jMIhaygPnMYy5zmM0sZjKD6UxjKlOY
zCQmMoHxjGMsYxjNKEYyguEMYyhDGMwgBjKA/vSjL33oTS960oPudKMrXehM
JzrSgfa0oy1taE0rWhJOGC1oTjOa0oTGNKIhDahPPUKpSx1qU4ua1KA61ahK
FSpTiYpUoDwhlKMsZShNKUpSguIUoyhFKEwhClKA/OQjL3nITS5ykoPsZCMr
WchMJjKSgfSkIy1pSE0qUpKC5CQjKUlITCISkoD4BBOPuMQhNrGISQx+5zd+
5Rd+5id+5Ae+5zu+5Rui8zXR+Iov+YLP+YyofMonRCEQiCzwB/Ged/wf0WHe
8i//8IbXvOIlf/MXf/IHL3jOM57yhMc84iEPuM897nKH29ziJje4zjWucoXL
XOIiFyJ+DOc4yxlOc4qTnOA4xzjKEQ5ziIMcYD/72MsedrOLnexgO9vYyhY2
s4mNbGA961jLGlazipWsYDnLWMoSFrOIhSxgPvOYyxxmM4uZzGA605jKFCYz
iYlMYDzjGMsYRjOKkYxgOMMYyhAGM4iBDKA//ehLH3rTi570oDvd6EoXOtOJ
jnSgPe1oSxta04qWhBNGC5rTjKY0oTGNaEgD6lOPUOpSh9rUoiY1qE41qlKF
ylSiIhUoTwjlKEsZSlOKkpSgOMUoShEKU4iCFCA/+chLHnKTi5zkIDvZyEoW
MpOJjGQgPelISxpSk4qUpCA5yUhKEhKTiIQkID7BxCMucYhNLGISg7e6+RFx
3fAA
          "]]]}, {}, {}}, {{}, {}, 
       {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], 
        AbsoluteThickness[1.6], Dashing[{0, Small}], LineBox[CompressedData["
1:eJwl1WV7EAQUBeANERBUQinJ0d3d3Tm6YXSObhjd3d3d3d3d3THaACUUVHx5
/PCe5/6Bc25QSGhwh8CAgIAr4iM/uROQkEQkJglJCSIZyUlBSlKRmjSkJR3p
yUBGMpGZLGQlG9nJQU5ykZs85CUf+SlAQQpRmCIUpRjFKUFJSlGaMpSlHOWp
QEUqUZkqVCWYalSnBjWpRW3qUJd61KcBDWlEY5oQQlOa0ZwWtKQVrWlDW9rR
ng6E0pFOdKYLXelGd3rQk170pg996Ud/whjAQAYxmCEMZRjDGcFIRjGaMYxl
HOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGYJSxlGctZwUpWsZo1rGUd
69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgjHOUYxznBSU5xmjOc5Rzn
ucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7xmHCe8JRnPOcFL3nFz/zCr/zG
a97wO3/wlne85wN/8hcf+cTf/MO/fCZANwOJwFdE5GsiEZkofENUovEt3/E9
0YlBTGLxAz8SmzjEJR7xv/SfBCQkEYlJQlKCSEZyUpCSVKQmDWlJR3oykJFM
ZCYLWclGdnKQk1zkJg95yUd+ClCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQkUpU
pgpVCaYa1alBTWpRmzrUpR71aUBDGtGYJoTQlGY0pwUtaUVr2tCWdrTny7iG
0pFOdKYLXelGd3rQk170pg996Ud/whjAQAYxmCEMZRjDGcFIRjGaMYxlHOOZ
wEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGYJSxlGctZwUpWsZo1rGUd69nA
RjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgjHOUYxznBSU5xmjOc5RznucBF
LnE58P9/d5VrXOcGN7nFbe5wl3vc5wEPecRjwnnCU57xnBe85BWf+A96Yu/5

         "]]}}, 
      {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], 
       AbsoluteThickness[1.6], Dashing[{0, Small}]}, {
       {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], 
        AbsoluteThickness[1.6], Dashing[{0, Small}]}, {}}, {
       {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], 
        AbsoluteThickness[1.6], Dashing[{0, Small}]}, {}}}], {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*SuperscriptBox[\\(CD19\\), \\(+\\)]\\) tumor cells\"", 
      TraditionalForm], None}, {
     FormBox["\"Days post CAR infusion\"", TraditionalForm], None}},
  FrameStyle->Directive[
    Thickness[0.0025], 
    GrayLevel[0]],
  FrameTicks->{{{{0., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {9.210340371976184, 
       FormBox[
        TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {13.815510557964274`, 
       FormBox[
        TemplateBox[{"10", "6"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {18.420680743952367`, 
       FormBox[
        TemplateBox[{"10", "8"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {23.025850929940457`, 
       FormBox[
        TemplateBox[{"10", "10"}, "Superscript", SyntaxForm -> 
         SuperscriptBox], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.907755278982137, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.512925464970229`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {16.11809565095832, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {20.72326583694641, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {25.328436022934504`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {27.631021115928547`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {28.03648622403671, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {28.324168296488494`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, {}}, {All, None}},
  GridLines->NCache[{{}, {
      Log[100]}}, {{}, {4.605170185988092}}],
  GridLinesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0], 
    Thickness[0.002]],
  ImageSize->500,
  LabelStyle->{
    GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"},
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{0., 210.}, {0, 
      Log[200000000000]}}, {{0., 210.}, {0, 26.021583203494448`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, 
    Charting`ScaledTicks[{Log, Exp}]}]], "Output",
 CellChangeTimes->{{3.770732890029153*^9, 3.770732940699375*^9}, {
   3.770732989344425*^9, 3.770733054083425*^9}, {3.770733099429995*^9, 
   3.770733104753635*^9}, {3.770733147599535*^9, 3.770733201597439*^9}, {
   3.770733250242275*^9, 3.7707332570781517`*^9}, {3.783352649837665*^9, 
   3.78335266286065*^9}, {3.783352806698365*^9, 3.783352892572549*^9}, {
   3.7833529267177877`*^9, 3.783352996766053*^9}, {3.7833531419035177`*^9, 
   3.783353161466607*^9}, 3.783375931421639*^9, 3.7837766240236464`*^9, 
   3.784651505607307*^9, {3.784651559654745*^9, 3.784651592884575*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"1bab1646-280f-4bb5-9ab6-6f3f6254cf66"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<tumorTrajectories.pdf\>\""}], ",", "plotTrajectory", ",", 
   "\"\<PDF\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.78335299729189*^9, 
  3.783353016544037*^9}},ExpressionUUID->"7e4131c8-4ac2-45f9-a45c-\
5bc095c90713"],

Cell[BoxData["\<\"/Users/gregorykimmel/Dropbox/_Projects/01_CART/code/\
hybridModelRuns/tumorTrajectories.pdf\"\>"], "Output",
 CellChangeTimes->{3.7833530174249763`*^9, 3.783353163928441*^9, 
  3.783375934886076*^9, 
  3.783776628799993*^9},ExpressionUUID->"f9936122-6a9f-447d-a0cd-\
18b9fbfc8a56"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"4", ",", " ", "10", ",", "16", ",", "18"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.783352878988761*^9, 3.783352886080991*^9}, {
  3.783352979884116*^9, 
  3.783352980630109*^9}},ExpressionUUID->"d6c0af66-5c9c-43f8-9494-\
bcfd4430f6f5"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Figure", " ", "2", 
   RowBox[{"b", ":", " ", 
    RowBox[{
    "Durable", " ", "response", " ", "800", " ", "days", " ", "from", " ", 
     "infusion", " ", "as", " ", "a", " ", "function", " ", "of", " ", "CAR", 
     " ", "memory", " ", "frequency"}]}]}], "Subsection"]], "Input",
 CellChangeTimes->{{3.7833533981291313`*^9, 3.7833533981309357`*^9}, {
  3.783354676045148*^9, 
  3.783354705804831*^9}},ExpressionUUID->"b617615e-8655-49c0-8066-\
de9378156ca6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"This", " ", "module", " ", "creates", " ", "a", " ", "K"}], "-", 
    
    RowBox[{
    "M", " ", "curve", " ", "using", " ", "the", " ", "given", " ", 
     "filename"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dir", "=", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<runData/\>\""}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"makeSurvivalCurve", "[", "filename_", "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"data", ",", "patients", ",", "time", ",", "ci", ",", "S"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"Import", "[", 
         RowBox[{
          RowBox[{"dir", "<>", "filename"}], ",", "\"\<Data\>\""}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"patients", " ", "=", " ", 
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"4", ";;"}], "]"}], "]"}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "The", " ", "first", " ", "3", " ", "lines", " ", "contain", " ", 
         "parameter", " ", "info"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"time", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "We", " ", "now", " ", "loop", " ", "over", " ", "all", " ", 
         "patients", " ", "and", " ", "look", " ", "to", " ", "see", " ", 
         "when", " ", "progression", " ", "occurs", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
            "we", " ", "add", " ", "large", " ", "number", " ", "to", " ", 
             "cure", " ", "so", " ", "it", " ", "will", " ", "never", " ", 
             "show", " ", "progression", " ", "in", " ", "the", " ", "K"}], 
            "-", 
            RowBox[{"M", " ", "curve"}]}], ")"}], "."}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"n", "=", "1"}], ",", 
         RowBox[{"n", "\[LessEqual]", " ", 
          RowBox[{"Length", "[", "patients", "]"}]}], ",", 
         RowBox[{"n", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"patients", "[", 
             RowBox[{"[", 
              RowBox[{"n", ",", "2"}], "]"}], "]"}], "\[Equal]", 
            "\"\<cure\>\""}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"time", ",", 
             RowBox[{
              RowBox[{"patients", "[", 
               RowBox[{"[", 
                RowBox[{"n", ",", "1"}], "]"}], "]"}], "+", "10000"}]}], 
            "]"}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"time", ",", 
             RowBox[{"patients", "[", 
              RowBox[{"[", 
               RowBox[{"n", ",", "1"}], "]"}], "]"}]}], "]"}]}], "]"}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"ci", "=", 
        RowBox[{
         RowBox[{"0", "&"}], "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "time", "]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"S", "=", 
        RowBox[{"SurvivalModelFit", "[", 
         RowBox[{"EventData", "[", 
          RowBox[{"time", ",", "ci"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"time", ",", "ci", ",", "patients", ",", "S"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nStart", "=", "21"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nEnd", "=", "31"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nFiles", " ", "=", " ", 
     RowBox[{"nEnd", "-", "nStart", "+", "1"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"date", "=", "\"\<2019-11-20\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"FileExistsQ", "[", 
         RowBox[{"dir", "<>", "\"\<outputData_\>\"", "<>", 
          RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<_\>\"", "<>", 
          "date", "<>", "\"\<.txt\>\""}], "]"}], ",", 
        RowBox[{"nFiles", "=", 
         RowBox[{"n", "-", "nStart", "+", "1"}]}], ",", 
        RowBox[{"Break", "[", "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "nStart", ",", "100"}], "}"}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"memFracSurvivalCurves", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"makeSurvivalCurve", "[", 
         RowBox[{"\"\<outputData_\>\"", "<>", 
          RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<_\>\"", "<>", 
          "date", "<>", "\"\<.txt\>\""}], "]"}], "\[LeftDoubleBracket]", "4", 
        "\[RightDoubleBracket]"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"nStart", ",", "nEnd"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"memFracPFSrB065", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "-", "1"}], ")"}], " ", "0.1"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"memFracSurvivalCurves", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "[", "800", "]"}], ")"}]}], "}"}],
        "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "nFiles"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"nStart", "=", "12"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nEnd", "=", "22"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nFiles", " ", "=", " ", 
     RowBox[{"nEnd", "-", "nStart", "+", "1"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"date", "=", "\"\<2019-11-21\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"FileExistsQ", "[", 
         RowBox[{"dir", "<>", "\"\<outputData_\>\"", "<>", 
          RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<_\>\"", "<>", 
          "date", "<>", "\"\<.txt\>\""}], "]"}], ",", 
        RowBox[{"nFiles", "=", 
         RowBox[{"n", "-", "nStart", "+", "1"}]}], ",", 
        RowBox[{"Break", "[", "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "nStart", ",", "100"}], "}"}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"memFracSurvivalCurves", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"makeSurvivalCurve", "[", 
         RowBox[{"\"\<outputData_\>\"", "<>", 
          RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<_\>\"", "<>", 
          "date", "<>", "\"\<.txt\>\""}], "]"}], "\[LeftDoubleBracket]", "4", 
        "\[RightDoubleBracket]"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"nStart", ",", "nEnd"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"memFracPFSrB165", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "-", "1"}], ")"}], " ", "0.1"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"memFracSurvivalCurves", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "[", "800", "]"}], ")"}]}], "}"}],
        "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "nFiles"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"rBlegend", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\"\<\!\(\*SubscriptBox[\(r\), \(B\)]\) = \>\"", "<>", 
        RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\</day\>\""}], ")"}], 
      "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"0.065", ",", "0.165"}], "}"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "This", " ", "function", " ", "makes", " ", "a", " ", "survival", " ", 
     "curve", " ", "as", " ", "a", " ", "function", " ", "of", " ", "the", 
     " ", "memory", " ", "fraction"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"L1", "[", 
      RowBox[{"SurvivalCurve_", ",", "c_", ",", "i_"}], "]"}], ":=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"SurvivalCurve", ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.035"}], ",", "1.035"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.075"}], ",", "1.075"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"GridLines", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "}"}], ",", 
            RowBox[{"{", "1.0", "}"}]}], "}"}]}], ","}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"c", ",", 
          RowBox[{"PointSize", "\[Rule]", "0.025"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"SwatchLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"rBlegend", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "}"}], ",", 
            RowBox[{"LegendMarkerSize", "\[Rule]", "10"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}]}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"0.2", ",", "0.75"}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "}"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"AspectRatio", "\[Rule]", "0.325"}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"ImageSize", "\[Rule]", "500"}], "\[IndentingNewLine]", ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.0035", "]"}], ",", "Black"}], "]"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FontSize", "\[Rule]", "18"}], ",", "Black", ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "}"}]}], 
       "\[IndentingNewLine]", ",", " ", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Fraction of CAR memory cells at infusion\>\"", ",", 
          "\"\<Probability of CR\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0.2", ",", "0.4", ",", "0.6", ",", "0.8", ",", "1.0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0.5", ",", "1.0", ",", 
            RowBox[{"{", 
             RowBox[{"0.25", ",", "\"\<\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.75", ",", "\"\<\>\""}], "}"}]}], "}"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.783353850787696*^9, 3.7833538674460297`*^9}, {
  3.7850948968940487`*^9, 3.785094972227029*^9}, {3.785095087441709*^9, 
  3.785095099432735*^9}, {3.785095147637389*^9, 3.785095174707906*^9}, {
  3.78509542158926*^9, 3.785095435481319*^9}, {3.785097339886797*^9, 
  3.785097492063142*^9}, {3.785098263191317*^9, 3.7850982964118147`*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"69cae7c3-bc73-4dcd-8611-98f9c1284a95"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(r\\), \\(B\\)]\\) = 0.065/day\"\>", 
   ",", "\<\"\\!\\(\\*SubscriptBox[\\(r\\), \\(B\\)]\\) = 0.165/day\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.785094978392378*^9, {3.785095088857418*^9, 3.785095101395503*^9}, {
   3.785095165748528*^9, 3.785095176246501*^9}, 3.785095438037696*^9, {
   3.7850973418484383`*^9, 3.78509736768745*^9}, 3.785097406735827*^9, {
   3.785097449058779*^9, 3.7850974942544117`*^9}, {3.785098265301694*^9, 
   3.785098298092239*^9}},
 CellLabel->
  "Out[194]=",ExpressionUUID->"3501ee1f-80e0-41ff-afc0-d17203c59c26"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CARMemPFS", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"L1", "[", 
      RowBox[{"memFracPFSrB065", ",", 
       RowBox[{
        RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", "0.6", "]"}],
        ",", "1"}], "]"}], ",", 
     RowBox[{"L1", "[", 
      RowBox[{"memFracPFSrB165", ",", 
       RowBox[{"Opacity", "[", 
        RowBox[{"0.85", ",", 
         RowBox[{
          RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", "0.3", 
          "]"}]}], "]"}], ",", "2"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fig2mem", "=", 
  RowBox[{"Show", "[", "CARMemPFS", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<CARmem_Prob01.pdf\>\""}], ",", "fig2mem", ",", "\"\<PDF\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.783353891546816*^9, 3.7833539014482937`*^9}, {
  3.783353939298684*^9, 3.7833539687281227`*^9}, {3.783354016133679*^9, 
  3.7833540500147057`*^9}, {3.783354599833543*^9, 3.7833546629068937`*^9}, {
  3.785094989020434*^9, 3.785094989337688*^9}, {3.7850950576614*^9, 
  3.7850950710139008`*^9}, {3.7850954648098087`*^9, 3.7850954649664707`*^9}},
 CellLabel->
  "In[196]:=",ExpressionUUID->"4dcbabbc-f426-4c51-b43c-f70ca55acaaa"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {
       {RGBColor[0.6660832, 0.7430418, 0.32293540000000004`], PointSize[
        0.025], AbsoluteThickness[1.6], 
        PointBox[{{0., 0.}, {0.1, 0.16599999999999948`}, {0.2, 
         0.2499999999999994}, {0.30000000000000004`, 0.33799999999999947`}, {
         0.4, 0.43199999999999955`}, {0.5, 0.49199999999999955`}, {
         0.6000000000000001, 0.5439999999999996}, {0.7000000000000001, 
         0.5639999999999996}, {0.8, 0.6279999999999997}, {0.9, 
         0.6379999999999997}, {1., 0.6689999999999997}}]}, {
        {RGBColor[0.6660832, 0.7430418, 0.32293540000000004`], PointSize[
         0.025], AbsoluteThickness[1.6]}, {}}, {
        {RGBColor[0.6660832, 0.7430418, 0.32293540000000004`], PointSize[
         0.025], AbsoluteThickness[1.6]}, {}}}, {{}, {}}}, {{}, {
       {RGBColor[0.2979596, 0.5657928, 0.7522386000000001], PointSize[0.025], 
        AbsoluteThickness[1.6], Opacity[0.85], 
        PointBox[{{0., 0.}, {0.1, 0.14399999999999946`}, {0.2, 
         0.2049999999999995}, {0.30000000000000004`, 0.2809999999999994}, {
         0.4, 0.3849999999999995}, {0.5, 0.45199999999999957`}, {
         0.6000000000000001, 0.49499999999999955`}, {0.7000000000000001, 
         0.49699999999999955`}, {0.8, 0.5609999999999996}, {0.9, 
         0.6259999999999997}, {1., 0.6649999999999997}}]}, {
        {RGBColor[0.2979596, 0.5657928, 0.7522386000000001], PointSize[0.025],
          AbsoluteThickness[1.6], Opacity[0.85]}, {}}, {
        {RGBColor[0.2979596, 0.5657928, 0.7522386000000001], PointSize[0.025],
          AbsoluteThickness[1.6], Opacity[0.85]}, {}}}, {{}, {}}}}, InsetBox[
     TagBox[GridBox[{
        {
         FormBox[
          
          TemplateBox[{
           "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(B\\)]\\) = 0.065/day\""},
           "SwatchLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6660832, 0.7430418, 0.32293540000000004`], 
                    PointSize -> 0.025], 
                    DiskBox[{5, 5}, {5, 5}]}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.148] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"}, 
             Background -> Automatic, StripOnInput -> False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"SwatchLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6660832, 0.7430418, 0.32293540000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4440554666666667, 0.4953612, 0.2152902666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.6660832`", ",", "0.7430418`", ",", 
                    "0.32293540000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6660832, 0.7430418, 0.32293540000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6660832, 0.7430418, 0.32293540000000004`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"PointSize", "\[Rule]", "0.025`"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "\"Bubble\""}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}],
                 ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", "10"}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          
          TemplateBox[{
           "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(B\\)]\\) = 0.165/day\""},
           "SwatchLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2979596, 0.5657928, 0.7522386000000001], 
                    Opacity[0.85], PointSize -> 0.025], 
                    DiskBox[{5, 5}, {5, 5}]}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.148] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"}, 
             Background -> Automatic, StripOnInput -> False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"SwatchLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2979596, 0.5657928, 0.7522386000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.19863973333333335`, 0.3771952, 0.5014924000000001], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2979596`", ",", "0.5657928`", ",", 
                    "0.7522386000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2979596, 0.5657928, 0.7522386000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2979596, 0.5657928, 0.7522386000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"Opacity", "[", "0.85`", "]"}], ",", 
                    RowBox[{"PointSize", "\[Rule]", "0.025`"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "\"Bubble\""}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}],
                 ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", "10"}]}], "]"}]& )],
          TraditionalForm]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], Scaled[{0.2, 0.75}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->0.325,
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, False}, {True, False}},
   FrameLabel->{{
      FormBox["\"Probability of CR\"", TraditionalForm], None}, {
      FormBox[
      "\"Fraction of CAR memory cells at infusion\"", TraditionalForm], None}},
   FrameStyle->Directive[
     Thickness[0.0035], 
     GrayLevel[0]],
   FrameTicks->{{{{0, 
        FormBox["0", TraditionalForm]}, {0.5, 
        FormBox["0.5`", TraditionalForm]}, {1., 
        FormBox["1.`", TraditionalForm]}, {0.25, 
        FormBox["\"\"", TraditionalForm]}, {0.75, 
        FormBox["\"\"", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {0.5, 
        FormBox["0.5`", TraditionalForm]}, {1., 
        FormBox["1.`", TraditionalForm]}, {0.25, 
        FormBox["\"\"", TraditionalForm]}, {0.75, 
        FormBox["\"\"", TraditionalForm]}}}, {{{0, 
        FormBox["0", TraditionalForm]}, {0.2, 
        FormBox["0.2`", TraditionalForm]}, {0.4, 
        FormBox["0.4`", TraditionalForm]}, {0.6, 
        FormBox["0.6`", TraditionalForm]}, {0.8, 
        FormBox["0.8`", TraditionalForm]}, {1., 
        FormBox["1.`", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {0.2, 
        FormBox["0.2`", TraditionalForm]}, {0.4, 
        FormBox["0.4`", TraditionalForm]}, {0.6, 
        FormBox["0.6`", TraditionalForm]}, {0.8, 
        FormBox["0.8`", TraditionalForm]}, {1., 
        FormBox["1.`", TraditionalForm]}}}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->500,
   LabelStyle->{
     GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"},
   Method->{
    "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{-0.035, 1.035}, {-0.075, 1.075}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {{{
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[0.6660832, 0.7430418, 0.32293540000000004`], PointSize -> 
           0.025], 
          
          Point[{{0., 0.}, {0.1, 0.16599999999999948`}, {0.2, 
           0.2499999999999994}, {0.30000000000000004`, 
           0.33799999999999947`}, {0.4, 0.43199999999999955`}, {0.5, 
           0.49199999999999955`}, {0.6000000000000001, 0.5439999999999996}, {
           0.7000000000000001, 0.5639999999999996}, {0.8, 
           0.6279999999999997}, {0.9, 0.6379999999999997}, {1., 
           0.6689999999999997}}]}}, {{
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[0.6660832, 0.7430418, 0.32293540000000004`], PointSize -> 
           0.025]}, {}}, {{
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[0.6660832, 0.7430418, 0.32293540000000004`], PointSize -> 
           0.025]}, {}}}, {{}, {}}}, {{}, {{{
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[0.2979596, 0.5657928, 0.7522386000000001], 
           Opacity[0.85], PointSize -> 0.025], 
          
          Point[{{0., 0.}, {0.1, 0.14399999999999946`}, {0.2, 
           0.2049999999999995}, {0.30000000000000004`, 0.2809999999999994}, {
           0.4, 0.3849999999999995}, {0.5, 0.45199999999999957`}, {
           0.6000000000000001, 0.49499999999999955`}, {0.7000000000000001, 
           0.49699999999999955`}, {0.8, 0.5609999999999996}, {0.9, 
           0.6259999999999997}, {1., 0.6649999999999997}}]}}, {{
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[0.2979596, 0.5657928, 0.7522386000000001], 
           Opacity[0.85], PointSize -> 0.025]}, {}}, {{
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[0.2979596, 0.5657928, 0.7522386000000001], 
           Opacity[0.85], PointSize -> 0.025]}, {}}}, {{}, {}}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      0.325, Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{True, False}, {True, False}}, 
      FrameLabel -> {{"Probability of CR", None}, {
        "Fraction of CAR memory cells at infusion", None}}, FrameStyle -> 
      Directive[
        Thickness[0.0035], 
        GrayLevel[0]], 
      FrameTicks -> {{{0, 0.5, 1., {0.25, ""}, {0.75, ""}}, {
         0, 0.5, 1., {0.25, ""}, {0.75, ""}}}, {{0, 0.2, 0.4, 0.6, 0.8, 1.}, {
         0, 0.2, 0.4, 0.6, 0.8, 1.}}}, GridLines -> {None, None}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 500, LabelStyle -> {
        GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"}, 
      Method -> {
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{-0.035, 1.035}, {-0.075, 1.075}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       SwatchLegend[{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0.2979596, 0.5657928, 0.7522386000000001], 
          Opacity[0.85], PointSize -> 0.025]}, {
        "\!\(\*SubscriptBox[\(r\), \(B\)]\) = 0.165/day"}, LegendMarkers -> 
        "Bubble", LabelStyle -> {
          GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"}, LegendLayout -> 
        "Column", LegendMarkerSize -> 10]]], {0.2, 0.75}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.7850949961270733`*^9, {3.78509505801297*^9, 3.7850950713016577`*^9}, 
   3.785095104553124*^9, {3.785095168061854*^9, 3.785095178500987*^9}, {
   3.785095442369179*^9, 3.785095465900949*^9}, {3.785097343656571*^9, 
   3.78509737098512*^9}, 3.785097408475173*^9, {3.785097451427286*^9, 
   3.7850974961768093`*^9}, 3.785098300863051*^9},
 CellLabel->
  "Out[197]=",ExpressionUUID->"4248321d-3d08-4536-98cf-0220b0196335"],

Cell[BoxData["\<\"/Users/altrock/Dropbox/Projects_Dropbox/CART/code/\
hybridModelRuns/CARmem_Prob01.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.7850949961270733`*^9, {3.78509505801297*^9, 3.7850950713016577`*^9}, 
   3.785095104553124*^9, {3.785095168061854*^9, 3.785095178500987*^9}, {
   3.785095442369179*^9, 3.785095465900949*^9}, {3.785097343656571*^9, 
   3.78509737098512*^9}, 3.785097408475173*^9, {3.785097451427286*^9, 
   3.7850974961768093`*^9}, 3.785098301110421*^9},
 CellLabel->
  "Out[198]=",ExpressionUUID->"c72a7867-940a-4420-97f0-f525961f637f"]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{"Figure", " ", "2", 
   RowBox[{"c", ":", " ", 
    RowBox[{
    "Durable", " ", "response", " ", "800", " ", "days", " ", "from", " ", 
     "infusion", " ", "as", " ", "a", " ", "function", " ", "of", " ", 
     "wildtype"}]}]}], "Subsection"]], "Input",
 CellChangeTimes->{{3.7833533981291313`*^9, 3.7833533981309357`*^9}, {
  3.783354676045148*^9, 3.783354705804831*^9}, {3.783374674729336*^9, 
  3.783374703172228*^9}},ExpressionUUID->"0e2a973a-9a9d-4f3d-92a9-\
b98ca135b75a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"This", " ", "module", " ", "creates", " ", "a", " ", "K"}], "-", 
    
    RowBox[{
    "M", " ", "curve", " ", "using", " ", "the", " ", "given", " ", 
     "filename"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dir", "=", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<runData/\>\""}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"makeSurvivalCurve", "[", "filename_", "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"data", ",", "patients", ",", "time", ",", "ci", ",", "S"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"Import", "[", 
         RowBox[{
          RowBox[{"dir", "<>", "filename"}], ",", "\"\<Data\>\""}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"patients", " ", "=", " ", 
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"4", ";;"}], "]"}], "]"}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "The", " ", "first", " ", "3", " ", "lines", " ", "contain", " ", 
         "parameter", " ", "info"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"time", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "We", " ", "now", " ", "loop", " ", "over", " ", "all", " ", 
         "patients", " ", "and", " ", "look", " ", "to", " ", "see", " ", 
         "when", " ", "progression", " ", "occurs", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
            "we", " ", "add", " ", "large", " ", "number", " ", "to", " ", 
             "cure", " ", "so", " ", "it", " ", "will", " ", "never", " ", 
             "show", " ", "progression", " ", "in", " ", "the", " ", "K"}], 
            "-", 
            RowBox[{"M", " ", "curve"}]}], ")"}], "."}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"n", "=", "1"}], ",", 
         RowBox[{"n", "\[LessEqual]", " ", 
          RowBox[{"Length", "[", "patients", "]"}]}], ",", 
         RowBox[{"n", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"patients", "[", 
             RowBox[{"[", 
              RowBox[{"n", ",", "2"}], "]"}], "]"}], "\[Equal]", 
            "\"\<cure\>\""}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"time", ",", 
             RowBox[{
              RowBox[{"patients", "[", 
               RowBox[{"[", 
                RowBox[{"n", ",", "1"}], "]"}], "]"}], "+", "10000"}]}], 
            "]"}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"time", ",", 
             RowBox[{"patients", "[", 
              RowBox[{"[", 
               RowBox[{"n", ",", "1"}], "]"}], "]"}]}], "]"}]}], "]"}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"ci", "=", 
        RowBox[{
         RowBox[{"0", "&"}], "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "time", "]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"S", "=", 
        RowBox[{"SurvivalModelFit", "[", 
         RowBox[{"EventData", "[", 
          RowBox[{"time", ",", "ci"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"time", ",", "ci", ",", "patients", ",", "S"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"rB", " ", "=", " ", "0.065"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nStart", "=", "13"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nEnd", "=", "20"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nFiles", " ", "=", " ", 
     RowBox[{"nEnd", "-", "nStart", "+", "1"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"date", "=", "\"\<2019-11-20\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"FileExistsQ", "[", 
         RowBox[{"dir", "<>", "\"\<outputData_\>\"", "<>", 
          RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<_\>\"", "<>", 
          "date", "<>", "\"\<.txt\>\""}], "]"}], ",", 
        RowBox[{"nFiles", "=", 
         RowBox[{"n", "-", "nStart", "+", "1"}]}], ",", 
        RowBox[{"Break", "[", "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "nStart", ",", "100"}], "}"}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WTsurvivalCurves", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"makeSurvivalCurve", "[", 
         RowBox[{"\"\<outputData_\>\"", "<>", 
          RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<_\>\"", "<>", 
          "date", "<>", "\"\<.txt\>\""}], "]"}], "\[LeftDoubleBracket]", "4", 
        "\[RightDoubleBracket]"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"nStart", ",", "nEnd"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WTPFSrB065", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"6", "#"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"WTsurvivalCurves", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "[", "800", "]"}], ")"}]}], "}"}],
        "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "nFiles"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{"(*", " ", 
    RowBox[{"rB", " ", "=", " ", "0.165"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nStart", "=", "34"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nEnd", "=", "38"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nFiles", " ", "=", " ", 
     RowBox[{"nEnd", "-", "nStart", "+", "1"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"date", "=", "\"\<2019-11-21\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"FileExistsQ", "[", 
         RowBox[{"dir", "<>", "\"\<outputData_\>\"", "<>", 
          RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<_\>\"", "<>", 
          "date", "<>", "\"\<.txt\>\""}], "]"}], ",", 
        RowBox[{"nFiles", "=", 
         RowBox[{"n", "-", "nStart", "+", "1"}]}], ",", 
        RowBox[{"Break", "[", "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "nStart", ",", "100"}], "}"}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WTsurvivalCurves", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"makeSurvivalCurve", "[", 
         RowBox[{"\"\<outputData_\>\"", "<>", 
          RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<_\>\"", "<>", 
          "date", "<>", "\"\<.txt\>\""}], "]"}], "\[LeftDoubleBracket]", "4", 
        "\[RightDoubleBracket]"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"nStart", ",", "nEnd"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WTPFSrB165", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"6", "#"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"WTsurvivalCurves", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "[", "800", "]"}], ")"}]}], "}"}],
        "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "nFiles"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{"rBlegend", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\"\<\!\(\*SubscriptBox[\(r\), \(B\)]\) = \>\"", "<>", 
        RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\</day\>\""}], ")"}], 
      "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"0.065", ",", "0.165"}], "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "This", " ", "function", " ", "makes", " ", "a", " ", "survival", " ", 
     "curve", " ", "as", " ", "a", " ", "function", " ", "of", " ", "the", 
     " ", "memory", " ", "fraction"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"L2", "[", 
      RowBox[{"SurvivalCurve_", ",", "c_", ",", "i_"}], "]"}], ":=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"SurvivalCurve", ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"4", ",", "32.0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.075"}], ",", "1.075"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"c", ",", 
          RowBox[{"PointSize", "\[Rule]", "0.025"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"SwatchLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"rBlegend", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "}"}], ",", 
            RowBox[{"LegendMarkerSize", "\[Rule]", "10"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}]}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"0.8", ",", "0.75"}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "}"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"AspectRatio", "\[Rule]", "0.325"}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"ImageSize", "\[Rule]", "500"}], "\[IndentingNewLine]", ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.0035", "]"}], ",", "Black"}], "]"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FontSize", "\[Rule]", "18"}], ",", "Black", ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "}"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Normal T cells/\[Micro]L at infusion\>\"", ",", 
          "\"\<Probability of CR\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"6", ",", "12", ",", "18", ",", "24", ",", "30"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0.5", ",", "1.0", ",", 
            RowBox[{"{", 
             RowBox[{"0.25", ",", "\"\<\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.75", ",", "\"\<\>\""}], "}"}]}], "}"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.783353698925889*^9, 3.7833536994142723`*^9}, {
   3.783354236018262*^9, 3.7833542362231627`*^9}, {3.783375163451123*^9, 
   3.7833751684099913`*^9}, {3.7833753169423656`*^9, 
   3.7833753337236567`*^9}, {3.7833755291304407`*^9, 3.783375529500412*^9}, {
   3.7850952882977657`*^9, 3.785095293470729*^9}, {3.785095324320757*^9, 
   3.7850953971294937`*^9}, 3.7850966173014717`*^9, {3.785097509501294*^9, 
   3.785097533631987*^9}, {3.7850975642679987`*^9, 3.785097593539274*^9}, {
   3.785098310676024*^9, 3.785098319653656*^9}},
 CellLabel->
  "In[218]:=",ExpressionUUID->"9bb11b80-4072-4ad4-b40c-5e2fcc1e5869"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(r\\), \\(B\\)]\\) = 0.065/day\"\>", 
   ",", "\<\"\\!\\(\\*SubscriptBox[\\(r\\), \\(B\\)]\\) = 0.165/day\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.785095300309393*^9, {3.78509533635395*^9, 3.785095398464003*^9}, 
   3.785096620374733*^9, {3.785097513935049*^9, 3.785097535423287*^9}, 
   3.785097565737879*^9, 3.785097595751938*^9, {3.78509831271974*^9, 
   3.7850983257264957`*^9}},
 CellLabel->
  "Out[232]=",ExpressionUUID->"29f2a05d-349d-4769-a9c0-4dd7854a11e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"WTPFS", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"L2", "[", 
      RowBox[{"WTPFSrB065", ",", 
       RowBox[{
        RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", "0.15", 
        "]"}], ",", "1"}], "]"}], ",", 
     RowBox[{"L2", "[", 
      RowBox[{"WTPFSrB165", ",", 
       RowBox[{"Opacity", "[", 
        RowBox[{"0.5", ",", 
         RowBox[{
          RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", "0.95", 
          "]"}]}], "]"}], ",", "2"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fig2WT", "=", 
  RowBox[{"Show", "[", "WTPFS", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<WTcell_Prob01.pdf\>\""}], ",", "fig2WT", ",", "\"\<PDF\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.783353891546816*^9, 3.7833539014482937`*^9}, {
   3.783353939298684*^9, 3.7833539687281227`*^9}, {3.783354016133679*^9, 
   3.7833540500147057`*^9}, {3.783354599833543*^9, 3.7833546629068937`*^9}, {
   3.783374792048052*^9, 3.7833748012359343`*^9}, {3.7833748322562647`*^9, 
   3.783374841968238*^9}, {3.783375367590562*^9, 3.783375384476379*^9}, 
   3.783375458537961*^9, {3.783375566135367*^9, 3.783375566289991*^9}, {
   3.783375673357445*^9, 3.783375689692556*^9}, {3.7850952570535793`*^9, 
   3.785095257357541*^9}, {3.785095478827669*^9, 3.785095479052074*^9}},
 CellLabel->
  "In[234]:=",ExpressionUUID->"e57fd82e-1646-4033-937f-7191efbbab85"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {
       {RGBColor[0.2480688, 0.2797284, 0.7879248], PointSize[0.025], 
        AbsoluteThickness[1.6], 
        PointBox[{{6., 0.48499999999999954`}, {12., 0.15899999999999948`}, {
         18., 0.046999999999999834`}, {24., 0.010999999999999966`}, {30., 
         0.007999999999999974}, {36., 0.}, {42., 0.}, {48., 0.}}]}, {
        {RGBColor[0.2480688, 0.2797284, 0.7879248], PointSize[0.025], 
         AbsoluteThickness[1.6]}, {}}, {
        {RGBColor[0.2480688, 0.2797284, 0.7879248], PointSize[0.025], 
         AbsoluteThickness[1.6]}, {}}}, {{}, {}}}, {{}, {
       {RGBColor[0.8739574, 0.2607876000000001, 0.15481040000000004`], 
        PointSize[0.025], AbsoluteThickness[1.6], Opacity[0.5], 
        PointBox[{{6., 0.40699999999999953`}, {12., 0.09799999999999963}, {
         18., 0.020999999999999935`}, {24., 0.011999999999999964`}, {30., 
         0.002999999999999991}}]}, {
        {RGBColor[0.8739574, 0.2607876000000001, 0.15481040000000004`], 
         PointSize[0.025], AbsoluteThickness[1.6], Opacity[0.5]}, {}}, {
        {RGBColor[0.8739574, 0.2607876000000001, 0.15481040000000004`], 
         PointSize[0.025], AbsoluteThickness[1.6], Opacity[
         0.5]}, {}}}, {{}, {}}}}, InsetBox[
     TagBox[GridBox[{
        {
         FormBox[
          
          TemplateBox[{
           "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(B\\)]\\) = 0.065/day\""},
           "SwatchLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2480688, 0.2797284, 0.7879248], PointSize -> 
                    0.025], 
                    DiskBox[{5, 5}, {5, 5}]}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.148] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"}, 
             Background -> Automatic, StripOnInput -> False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"SwatchLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2480688, 0.2797284, 0.7879248], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.1653792, 0.1864856, 0.5252832000000001], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2480688`", ",", "0.2797284`", ",", 
                    "0.7879248`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2480688, 0.2797284, 0.7879248]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2480688, 0.2797284, 0.7879248], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"PointSize", "\[Rule]", "0.025`"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "\"Bubble\""}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}],
                 ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", "10"}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          
          TemplateBox[{
           "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(B\\)]\\) = 0.165/day\""},
           "SwatchLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8739574, 0.2607876000000001, 0.15481040000000004`], 
                    Opacity[0.5], PointSize -> 0.025], 
                    DiskBox[{5, 5}, {5, 5}]}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.148] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"}, 
             Background -> Automatic, StripOnInput -> False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"SwatchLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8739574, 0.2607876000000001, 0.15481040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5826382666666667, 0.17385840000000008`, 
                    0.10320693333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.8739574`", ",", "0.2607876000000001`", ",", 
                    "0.15481040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8739574, 0.2607876000000001, 
                    0.15481040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8739574, 0.2607876000000001, 0.15481040000000004`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"PointSize", "\[Rule]", "0.025`"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "\"Bubble\""}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}],
                 ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", "10"}]}], "]"}]& )],
          TraditionalForm]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], Scaled[{0.8, 0.75}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->0.325,
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{4., 0},
   DisplayFunction->Identity,
   Frame->{{True, False}, {True, False}},
   FrameLabel->{{
      FormBox["\"Probability of CR\"", TraditionalForm], None}, {
      FormBox["\"Normal T cells/\[Micro]L at infusion\"", TraditionalForm], 
      None}},
   FrameStyle->Directive[
     Thickness[0.0035], 
     GrayLevel[0]],
   FrameTicks->{{{{0, 
        FormBox["0", TraditionalForm]}, {0.5, 
        FormBox["0.5`", TraditionalForm]}, {1., 
        FormBox["1.`", TraditionalForm]}, {0.25, 
        FormBox["\"\"", TraditionalForm]}, {0.75, 
        FormBox["\"\"", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {0.5, 
        FormBox["0.5`", TraditionalForm]}, {1., 
        FormBox["1.`", TraditionalForm]}, {0.25, 
        FormBox["\"\"", TraditionalForm]}, {0.75, 
        FormBox["\"\"", TraditionalForm]}}}, {{{6, 
        FormBox["6", TraditionalForm]}, {12, 
        FormBox["12", TraditionalForm]}, {18, 
        FormBox["18", TraditionalForm]}, {24, 
        FormBox["24", TraditionalForm]}, {30, 
        FormBox["30", TraditionalForm]}}, {{6, 
        FormBox["6", TraditionalForm]}, {12, 
        FormBox["12", TraditionalForm]}, {18, 
        FormBox["18", TraditionalForm]}, {24, 
        FormBox["24", TraditionalForm]}, {30, 
        FormBox["30", TraditionalForm]}}}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->500,
   LabelStyle->{
     GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"},
   Method->{
    "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{4, 32.}, {-0.075, 1.075}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {{{
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[0.2480688, 0.2797284, 0.7879248], PointSize -> 0.025], 
          
          Point[{{6., 0.48499999999999954`}, {12., 0.15899999999999948`}, {
           18., 0.046999999999999834`}, {24., 0.010999999999999966`}, {30., 
           0.007999999999999974}, {36., 0.}, {42., 0.}, {48., 0.}}]}}, {{
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[0.2480688, 0.2797284, 0.7879248], PointSize -> 
           0.025]}, {}}, {{
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[0.2480688, 0.2797284, 0.7879248], PointSize -> 
           0.025]}, {}}}, {{}, {}}}, {{}, {{{
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[0.8739574, 0.2607876000000001, 0.15481040000000004`], 
           Opacity[0.5], PointSize -> 0.025], 
          
          Point[{{6., 0.40699999999999953`}, {12., 0.09799999999999963}, {18.,
            0.020999999999999935`}, {24., 0.011999999999999964`}, {30., 
           0.002999999999999991}}]}}, {{
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[0.8739574, 0.2607876000000001, 0.15481040000000004`], 
           Opacity[0.5], PointSize -> 0.025]}, {}}, {{
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[0.8739574, 0.2607876000000001, 0.15481040000000004`], 
           Opacity[0.5], PointSize -> 0.025]}, {}}}, {{}, {}}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      0.325, Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {4., 0}, DisplayFunction :> Identity, 
      Frame -> {{True, False}, {True, False}}, 
      FrameLabel -> {{"Probability of CR", None}, {
        "Normal T cells/\[Micro]L at infusion", None}}, FrameStyle -> 
      Directive[
        Thickness[0.0035], 
        GrayLevel[0]], 
      FrameTicks -> {{{0, 0.5, 1., {0.25, ""}, {0.75, ""}}, {
         0, 0.5, 1., {0.25, ""}, {0.75, ""}}}, {{6, 12, 18, 24, 30}, {6, 12, 
        18, 24, 30}}}, GridLines -> {None, None}, GridLinesStyle -> 
      Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 500, LabelStyle -> {
        GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"}, 
      Method -> {
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{4, 32.}, {-0.075, 1.075}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       SwatchLegend[{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0.8739574, 0.2607876000000001, 0.15481040000000004`], 
          Opacity[0.5], PointSize -> 0.025]}, {
        "\!\(\*SubscriptBox[\(r\), \(B\)]\) = 0.165/day"}, LegendMarkers -> 
        "Bubble", LabelStyle -> {
          GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"}, LegendLayout -> 
        "Column", LegendMarkerSize -> 10]]], {0.8, 0.75}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.783353944769589*^9, 3.7833539709564323`*^9}, {
   3.7833540182969713`*^9, 3.783354052025071*^9}, {3.78335460759015*^9, 
   3.783354625072393*^9}, 3.783354665332943*^9, 3.7833748051100397`*^9, {
   3.783374838840711*^9, 3.783374844291888*^9}, 3.783375429483176*^9, {
   3.7833754605164003`*^9, 3.7833754730825157`*^9}, {3.783375517294829*^9, 
   3.783375536309256*^9}, 3.78337556815829*^9, {3.783375681275887*^9, 
   3.783375692228498*^9}, 3.783375759109743*^9, 3.785095304151293*^9, {
   3.785095340118754*^9, 3.78509540031973*^9}, 3.7850954795097218`*^9, 
   3.7850966233859663`*^9, {3.785097518907159*^9, 3.7850975379982243`*^9}, 
   3.785097568131793*^9, 3.785097598321533*^9, {3.785098314988162*^9, 
   3.7850983291578608`*^9}},
 CellLabel->
  "Out[235]=",ExpressionUUID->"01cdcc36-3192-4edd-9ae8-6cb215057a1e"],

Cell[BoxData["\<\"/Users/altrock/Dropbox/Projects_Dropbox/CART/code/\
hybridModelRuns/WTcell_Prob01.pdf\"\>"], "Output",
 CellChangeTimes->{{3.783353944769589*^9, 3.7833539709564323`*^9}, {
   3.7833540182969713`*^9, 3.783354052025071*^9}, {3.78335460759015*^9, 
   3.783354625072393*^9}, 3.783354665332943*^9, 3.7833748051100397`*^9, {
   3.783374838840711*^9, 3.783374844291888*^9}, 3.783375429483176*^9, {
   3.7833754605164003`*^9, 3.7833754730825157`*^9}, {3.783375517294829*^9, 
   3.783375536309256*^9}, 3.78337556815829*^9, {3.783375681275887*^9, 
   3.783375692228498*^9}, 3.783375759109743*^9, 3.785095304151293*^9, {
   3.785095340118754*^9, 3.78509540031973*^9}, 3.7850954795097218`*^9, 
   3.7850966233859663`*^9, {3.785097518907159*^9, 3.7850975379982243`*^9}, 
   3.785097568131793*^9, 3.785097598321533*^9, {3.785098314988162*^9, 
   3.7850983294230757`*^9}},
 CellLabel->
  "Out[236]=",ExpressionUUID->"9b3ffd87-65ad-419e-987a-e0703df38341"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1048, 1327},
WindowMargins->{{Automatic, 134}, {Automatic, 0}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 226, 4, 54, "Subsection",ExpressionUUID->"cdd230be-83a0-4628-96c3-2736b3d72280"],
Cell[CellGroupData[{
Cell[831, 30, 9586, 247, 757, "Input",ExpressionUUID->"83073cb3-8c2c-450d-8f01-acb0cbdec9d1"],
Cell[10420, 279, 112611, 1993, 269, "Output",ExpressionUUID->"20443ff7-4eb7-4f2d-9594-8ea159d9bb90"],
Cell[123034, 2274, 794, 12, 34, "Output",ExpressionUUID->"1d32e15a-ff79-4a5f-ae6a-ee359de874e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123865, 2291, 1178, 20, 136, "Input",ExpressionUUID->"686bd98b-5249-429b-a073-707edcfab6a6"],
Cell[125046, 2313, 97901, 1646, 338, "Output",ExpressionUUID->"1bab1646-280f-4bb5-9ab6-6f3f6254cf66"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222984, 3964, 343, 9, 30, "Input",ExpressionUUID->"7e4131c8-4ac2-45f9-a45c-5bc095c90713"],
Cell[223330, 3975, 299, 5, 34, "Output",ExpressionUUID->"f9936122-6a9f-447d-a0cd-18b9fbfc8a56"]
}, Open  ]],
Cell[223644, 3983, 287, 6, 30, "Input",ExpressionUUID->"d6c0af66-5c9c-43f8-9494-bcfd4430f6f5"],
Cell[223934, 3991, 498, 11, 39, "Input",ExpressionUUID->"b617615e-8655-49c0-8066-de9378156ca6"],
Cell[CellGroupData[{
Cell[224457, 4006, 12276, 315, 1018, "Input",ExpressionUUID->"69cae7c3-bc73-4dcd-8611-98f9c1284a95"],
Cell[236736, 4323, 623, 12, 34, "Output",ExpressionUUID->"3501ee1f-80e0-41ff-afc0-d17203c59c26"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237396, 4340, 1322, 32, 94, "Input",ExpressionUUID->"4dcbabbc-f426-4c51-b43c-f70ca55acaaa"],
Cell[238721, 4374, 23845, 484, 215, "Output",ExpressionUUID->"4248321d-3d08-4536-98cf-0220b0196335"],
Cell[262569, 4860, 564, 9, 34, "Output",ExpressionUUID->"c72a7867-940a-4420-97f0-f525961f637f"]
}, Open  ]],
Cell[263148, 4872, 516, 11, 39, "Input",ExpressionUUID->"0e2a973a-9a9d-4f3d-92a9-b98ca135b75a"],
Cell[CellGroupData[{
Cell[263689, 4887, 12109, 309, 976, "Input",ExpressionUUID->"9bb11b80-4072-4ad4-b40c-5e2fcc1e5869"],
Cell[275801, 5198, 546, 11, 34, "Output",ExpressionUUID->"29f2a05d-349d-4769-a9c0-4dd7854a11e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276384, 5214, 1528, 35, 73, "Input",ExpressionUUID->"e57fd82e-1646-4033-937f-7191efbbab85"],
Cell[277915, 5251, 23329, 477, 215, "Output",ExpressionUUID->"01cdcc36-3192-4edd-9ae8-6cb215057a1e"],
Cell[301247, 5730, 958, 14, 92, "Output",ExpressionUUID->"9b3ffd87-65ad-419e-987a-e0703df38341"]
}, Open  ]]
}, Open  ]]
}
]
*)

