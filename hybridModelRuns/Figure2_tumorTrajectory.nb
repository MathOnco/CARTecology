(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    302017,       5757]
NotebookOptionsPosition[    299043,       5680]
NotebookOutlinePosition[    299399,       5696]
CellTagsIndexPosition[    299356,       5693]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Figure 2a: Tumor trajectories", "Subsection",
 CellChangeTimes->{{3.770732474036524*^9, 3.770732481863142*^9}, {
  3.783353389442473*^9, 
  3.783353392959772*^9}},ExpressionUUID->"cdd230be-83a0-4628-96c3-\
2736b3d72280"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dir", "=", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<trajectoryData/\>\""}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tumorTrajectory", "[", 
   RowBox[{"filename_", ",", "xRangeMax_", ",", "style_", ",", "o_"}], "]"}], 
  ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"data", ",", "lengthData", ",", "stratifiedData", ",", "xTix"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"data", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Import", "[", 
         RowBox[{
          RowBox[{"dir", "<>", "filename"}], ",", "\"\<Data\>\""}], "]"}], 
        ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"lengthData", " ", "=", 
      RowBox[{
       RowBox[{"Length", "[", "data", "]"}], "/", "4"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"stratifiedData", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"4", 
              RowBox[{"(", 
               RowBox[{"#", "-", "1"}], ")"}]}], "+", "1"}], "]"}], "]"}], 
          ",", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"4", 
              RowBox[{"(", 
               RowBox[{"#", "-", "1"}], ")"}]}], "+", "2"}], "]"}], "]"}], 
          ",", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"4", 
              RowBox[{"(", 
               RowBox[{"#", "-", "1"}], ")"}]}], "+", "3"}], "]"}], "]"}], 
          ",", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"4", 
              RowBox[{"(", 
               RowBox[{"#", "-", "1"}], ")"}]}], "+", "4"}], "]"}], "]"}]}], 
         "}"}], "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", "lengthData"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xTix", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "\"\<0\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"30", ",", "\"\<30\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"60", ",", "\"\<60\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"90", ",", "\"\<90\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"120", ",", "\"\<120\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"150", ",", "\"\<150\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"180", ",", "\"\<180\>\""}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ListLogPlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"stratifiedData", "[", 
            RowBox[{"[", 
             RowBox[{"#", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"stratifiedData", "[", 
            RowBox[{"[", 
             RowBox[{"#", ",", 
              RowBox[{"-", "1"}]}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", "lengthData"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", "style"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Filling", "\[Rule]", "Bottom"}], ","}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "2.5"}], ",", 
             RowBox[{"xRangeMax", "-", "5"}]}], "}"}], "1.05"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.25", ",", 
            RowBox[{"0.3", "*", 
             RowBox[{"10", "^", "13"}]}]}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"GridLines", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{"{", "100", "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"GridLinesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Dashed", ",", " ", "Black", ",", 
          RowBox[{"Thickness", "[", "0.002", "]"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Days post CAR infusion\>\"", ",", 
          "\"\<\!\(\*SuperscriptBox[\(CD19\), \(+\)]\) tumor cells\>\""}], 
         "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.0025", "]"}], ",", "Black"}], "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"AspectRatio", "\[Rule]", "0.45"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", "500"}], ",", "\[IndentingNewLine]", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                SuperscriptBox["10", "12"], ",", 
                "\"\<\!\(\*SuperscriptBox[\(10\), \(12\)]\)\>\""}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                SuperscriptBox["10", "10"], ",", 
                "\"\<\!\(\*SuperscriptBox[\(10\), \(10\)]\)\>\""}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{
                SuperscriptBox["10", "8"], ",", 
                "\"\<\!\(\*SuperscriptBox[\(10\), \(8\)]\)\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                SuperscriptBox["10", "6"], ",", 
                "\"\<\!\(\*SuperscriptBox[\(10\), \(6\)]\)\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                SuperscriptBox["10", "4"], ",", 
                "\"\<\!\(\*SuperscriptBox[\(10\), \(4\)]\)\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                SuperscriptBox["10", "2"], ",", 
                "\"\<\!\(\*SuperscriptBox[\(10\), \(2\)]\)\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                SuperscriptBox["10", "0"], ",", "\"\<1\>\""}], "}"}]}], "}"}],
             ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"xTix", ",", "None"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", "\"\<\>\"", "}"}], ",", "o"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdxTtIAgEABuBDiKxBCnqoNJhIDzojkyyijDMFFTOwKNMhMwSjh6gVRXFL
IVKINUkW2FKBQhQOTRU0JjkUORhRQ9Fy0AMLMbTud/j46u0uk4NDEISQhZlE
OCvgM1T+lJPDZNpPCNkLf9aS4nUPPBziiSpx5v6zGlfUZpqwUHHeisPyaC+2
c8kB/PEYG8HlYzEp2cZQWoVJhr0RVw9+fzUrcTT05cAvPLsTS273fJ3sqblM
8eDuJfnLfh3YlmLV09v4YTtD7W/EbfhZdDaDzY16HzbMDrfQcoYSU5sy/GO9
6cA73qASWwRhFc77vosf6/k63H3gHMRKyfIQrlorNeNp94INa6mEAyeXDG7c
p4mv4hWlcR2rLyb9WFaWC+CutDGCryJ0AmfFR0nsoQt3mO7XpfC8xziqmWCo
rRq1BacXT8ZxM7dhCv8DvFW8sQ==
  
  "],ExpressionUUID->"83073cb3-8c2c-450d-8f01-acb0cbdec9d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotTrajectory", "=", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tumorTrajectory", "[", 
     RowBox[{"\"\<trajectory_6_2020-09-14.dat\>\"", ",", "200", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.007", "]"}], ",", "Red"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.65", ",", "0.9"}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"tumorTrajectory", "[", 
     RowBox[{"\"\<trajectory_8_2020-09-14.dat\>\"", ",", "200", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
        RowBox[{"Darker", "[", "Red", "]"}], ",", "Dotted"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.65", ",", "0.75"}], "}"}]}], "]"}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.8090944786659317`*^9, 3.8090944853688173`*^9}, {
  3.809096196573146*^9, 3.8090963135358*^9}, {3.8090978519085712`*^9, 
  3.809097884193961*^9}, {3.809280129627042*^9, 3.809280130670424*^9}, {
  3.809280296366867*^9, 
  3.809280297657538*^9}},ExpressionUUID->"1947d655-e9af-4670-88e0-\
e5285acf4423"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {{}, {}, 
       {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], Thickness[
        0.007], LineBox[CompressedData["
1:eJyF2Xc41f//P/DslRnHTPaeh0PmediVGZWRylYJWamQiJCRjChpiuzIViEZ
SXoTpayKlpVQmfmez/u6fj3f1+v1x+/8wXW7rvv9+Xi+nl5eOETd/G09qTdt
2lRD+fC/z//vlZHoH+aaQoLBS88CxiuiyY6shDPWFJ9aF/NN48kma2xNilal
WOreDZKL7F2yEGv6NSaKh25Lm/w5ep/c1BX/vTeZBFT+DUYPTWvJw19omxMo
fqa3YWap10RunFIKV6D4T9T0RifXU/Il0tO62iQSzB2yaVhe7iR7fDznI00x
feTbzkCTHrKvMJfNyUQSdAin7Vn/2UvO2PAPyr9AAhu6G8P7f/STC/flC5Ul
kECzu6n5Bccg2cytZHtiPAlo+16mR9kMkQXsuKq04kggInd25XzpKNmwql+r
OpYE18NGBh9wfSBnmiVYLZ8jwdvVqkn+oY9kyQA5A6poEhysv6iqUz5BtuEa
EuuMJEFWq3VvespnMltOTNOOCBL03//+tv3kV/LFi5/zIk6ToP18SXOO7yR5
WPqBkGsoCTgeTjty+06TXXcFrEwHkYCHmprdMnSWbLE58aHAcRLcEfiRZmk6
R/ZxMzIe9yEB9YG3ebX7fpC3p778pe9NArPjBsXavvNkr94id0k3yn4defrM
LyyQqbf3bUl2JgExsSE3qmyR3PbQ1MZnHwlc+NdCM9/9JJOO/Z54YE2CNrbs
ZRf23+T4RY1lhx0kKLhtEvHeconczSLVtQso5x8ZJLt+eZmszxU8e1KTst70
t5ntUyvkT8N8a/2KlHnBR9V/7lwj5/qsCjqKk0Cxkel59/11cuVoUgc7HwnY
dDNY1gU3yGdP245s2UyCL5/lzjAYbwIR8TtKMRvq0FGeeIJjZROcOCTC7juv
DgUnp/3471OBZAF936sJdYgzsPQW86KGVBW+lUev1cGbueyQvBANNHzokFTt
VAezV2wO6n00sG2mbp1Yrw7S1/xt9OJpwfXAHclnherA4PnPDlN9OtjqnaG8
fEUdviiqGlgv0kGksN+lzgTK/F+XtByK6CHwWfg13VOU+U3zqq4uDBCb+P2E
02HK/Hg7uaMERrgyvU6QtqfM310lFtTNCAMfoskFJpT5AjyC4dFMMMn4JmJM
jTJ/PGRL7HZmCDKqlekXpcwvec2SMssMxkOMLgnslPnBmrRZeSxw/JcNK826
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

         "]]}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{}, {}, 
       {RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
        0.004583333333333334], Thickness[0.005], Dashing[{0, Small}], 
        LineBox[CompressedData["
1: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
R2g=
         "]]}}, {}, {}, {{}, {}}, {{}, {}}}}, {InsetBox[
      TemplateBox[{"\"\""},
       "PointLegend",
       DisplayFunction->(StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.126], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.126], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.148] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontSize -> 18, FontFamily -> "Arial", FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False]& ),
       Editable->True,
       InterpretationFunction:>(RowBox[{"PointLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"Directive", "[", 
                RowBox[{
                  RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                  ",", 
                  RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                  RowBox[{"Thickness", "[", "0.007`", "]"}], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                   False]}], "]"}], "}"}], ",", 
            RowBox[{"{", #, "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"{", 
                  RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
            RowBox[{"Joined", "\[Rule]", 
              RowBox[{"{", "True", "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                  RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                  RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
            ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
      Scaled[{0.65, 0.9}], ImageScaled[{0.5, 0.5}],
      BaseStyle->{FontSize -> Larger},
      FormatType->StandardForm], InsetBox[
      TemplateBox[{"\"\""},
       "PointLegend",
       DisplayFunction->(StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.04125000000000001], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.04125000000000001], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.148] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontSize -> 18, FontFamily -> "Arial", FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False]& ),
       Editable->True,
       InterpretationFunction:>(RowBox[{"PointLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"Directive", "[", 
                RowBox[{
                  RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                  ",", 
                  RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                  RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[2/3, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                   False], ",", 
                  RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}], "}"}],
             ",", 
            RowBox[{"{", #, "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"{", 
                  RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
            RowBox[{"Joined", "\[Rule]", 
              RowBox[{"{", "True", "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                  RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                  RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
            ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
      Scaled[{0.65, 0.75}], ImageScaled[{0.5, 0.5}],
      BaseStyle->{FontSize -> Larger},
      FormatType->StandardForm]}},
   AspectRatio->0.45,
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, -1.2357147222913079`},
   DisplayFunction->Identity,
   Frame->{{True, False}, {True, False}},
   FrameLabel->{{
      FormBox[
      "\"\\!\\(\\*SuperscriptBox[\\(CD19\\), \\(+\\)]\\) tumor cells\"", 
       TraditionalForm], None}, {
      FormBox["\"Days post CAR infusion\"", TraditionalForm], None}},
   FrameStyle->Directive[
     Thickness[0.0025], 
     GrayLevel[0]],
   FrameTicks->{{{{
        NCache[
         Log[1000000000000], 27.631021115928547`], 
        FormBox[
        "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(12\\)]\\)\"", 
         TraditionalForm]}, {
        NCache[
         Log[10000000000], 23.025850929940457`], 
        FormBox[
        "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(10\\)]\\)\"", 
         TraditionalForm]}, {
        NCache[
         Log[100000000], 18.420680743952367`], 
        FormBox[
        "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(8\\)]\\)\"", 
         TraditionalForm]}, {
        NCache[
         Log[1000000], 13.815510557964274`], 
        FormBox[
        "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(6\\)]\\)\"", 
         TraditionalForm]}, {
        NCache[
         Log[10000], 9.210340371976184], 
        FormBox[
        "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(4\\)]\\)\"", 
         TraditionalForm]}, {
        NCache[
         Log[100], 4.605170185988092], 
        FormBox[
        "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(2\\)]\\)\"", 
         TraditionalForm]}, {0, 
        FormBox["\"1\"", TraditionalForm]}}, {}}, {{{0, 
        FormBox["\"0\"", TraditionalForm]}, {30, 
        FormBox["\"30\"", TraditionalForm]}, {60, 
        FormBox["\"60\"", TraditionalForm]}, {90, 
        FormBox["\"90\"", TraditionalForm]}, {120, 
        FormBox["\"120\"", TraditionalForm]}, {150, 
        FormBox["\"150\"", TraditionalForm]}, {180, 
        FormBox["\"180\"", TraditionalForm]}}, None}},
   GridLines->NCache[{{}, {
       Log[100]}}, {{}, {4.605170185988092}}],
   GridLinesStyle->Directive[
     Dashing[{Small, Small}], 
     GrayLevel[0], 
     Thickness[0.002]],
   ImagePadding->All,
   ImageSize->500,
   LabelStyle->{
     GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"},
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Exp[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Exp[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{-2.625, 204.75}, {-1.3862943611198906`, 28.729633404596658`}},
   
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, 
     Charting`ScaledTicks[{Log, Exp}]}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           Thickness[0.007], 
           RGBColor[1, 0, 0]], 
          Line[CompressedData["
1:eJyF2Xc41f//P/DslRnHTPaeh0PmediVGZWRylYJWamQiJCRjChpiuzIViEZ
SXoTpayKlpVQmfmez/u6fj3f1+v1x+/8wXW7rvv9+Xi+nl5eOETd/G09qTdt
2lRD+fC/z//vlZHoH+aaQoLBS88CxiuiyY6shDPWFJ9aF/NN48kma2xNilal
WOreDZKL7F2yEGv6NSaKh25Lm/w5ep/c1BX/vTeZBFT+DUYPTWvJw19omxMo
fqa3YWap10RunFIKV6D4T9T0RifXU/Il0tO62iQSzB2yaVhe7iR7fDznI00x
feTbzkCTHrKvMJfNyUQSdAin7Vn/2UvO2PAPyr9AAhu6G8P7f/STC/flC5Ul
kECzu6n5Bccg2cytZHtiPAlo+16mR9kMkQXsuKq04kggInd25XzpKNmwql+r
OpYE18NGBh9wfSBnmiVYLZ8jwdvVqkn+oY9kyQA5A6poEhysv6iqUz5BtuEa
EuuMJEFWq3VvespnMltOTNOOCBL03//+tv3kV/LFi5/zIk6ToP18SXOO7yR5
WPqBkGsoCTgeTjty+06TXXcFrEwHkYCHmprdMnSWbLE58aHAcRLcEfiRZmk6
R/ZxMzIe9yEB9YG3ebX7fpC3p778pe9NArPjBsXavvNkr94id0k3yn4defrM
LyyQqbf3bUl2JgExsSE3qmyR3PbQ1MZnHwlc+NdCM9/9JJOO/Z54YE2CNrbs
ZRf23+T4RY1lhx0kKLhtEvHeconczSLVtQso5x8ZJLt+eZmszxU8e1KTst70
t5ntUyvkT8N8a/2KlHnBR9V/7lwj5/qsCjqKk0Cxkel59/11cuVoUgc7HwnY
dDNY1gU3yGdP245s2UyCL5/lzjAYbwIR8TtKMRvq0FGeeIJjZROcOCTC7juv
DgUnp/3471OBZAF936sJdYgzsPQW86KGVBW+lUev1cGbueyQvBANNHzokFTt
VAezV2wO6n00sG2mbp1Yrw7S1/xt9OJpwfXAHclnherA4PnPDlN9OtjqnaG8
fEUdviiqGlgv0kGksN+lzgTK/F+XtByK6CHwWfg13VOU+U3zqq4uDBCb+P2E
02HK/Hg7uaMERrgyvU6QtqfM310lFtTNCAMfoskFJpT5AjyC4dFMMMn4JmJM
jTJ/PGRL7HZmCDKqlekXpcwvec2SMssMxkOMLgnslPnBmrRZeSxw/JcNK826
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

           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], 
           AbsoluteThickness[1.6], 
           Thickness[0.005], 
           RGBColor[
            Rational[2, 3], 0, 0], 
           Dashing[{0, Small}]], 
          Line[CompressedData["
1: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
R2g=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}}, {
     DisplayFunction -> Identity, GridLines -> {{}, {
         Log[100]}}, DisplayFunction -> Identity, DisplayFunction -> Identity,
       DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      AxesOrigin -> {0, -1.2357147222913079`}, 
      PlotRange -> {{-2.625, 204.75}, {-1.3862943611198906`, 
       28.729633404596658`}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> 0.45, Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, -1.2357147222913079`}, 
      DisplayFunction :> Identity, Frame -> {{True, False}, {True, False}}, 
      FrameLabel -> {{
        "\!\(\*SuperscriptBox[\(CD19\), \(+\)]\) tumor cells", None}, {
        "Days post CAR infusion", None}}, FrameStyle -> Directive[
        Thickness[0.0025], 
        GrayLevel[0]], FrameTicks -> {{{{
           Log[1000000000000], "\!\(\*SuperscriptBox[\(10\), \(12\)]\)"}, {
           Log[10000000000], "\!\(\*SuperscriptBox[\(10\), \(10\)]\)"}, {
           Log[100000000], "\!\(\*SuperscriptBox[\(10\), \(8\)]\)"}, {
           Log[1000000], "\!\(\*SuperscriptBox[\(10\), \(6\)]\)"}, {
           Log[10000], "\!\(\*SuperscriptBox[\(10\), \(4\)]\)"}, {
           Log[100], "\!\(\*SuperscriptBox[\(10\), \(2\)]\)"}, {
          0, "1"}}, {}}, {{{0, "0"}, {30, "30"}, {60, "60"}, {90, "90"}, {
          120, "120"}, {150, "150"}, {180, "180"}}, None}}, GridLines -> {{}, {
         Log[100]}}, GridLinesStyle -> Directive[
        Dashing[{Small, Small}], 
        GrayLevel[0], 
        Thickness[0.002]], ImageSize -> 500, LabelStyle -> {
        GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"}, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Exp[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Exp[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{-2.625, 204.75}, {-1.3862943611198906`, 
       28.729633404596658`}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, 
        Charting`ScaledTicks[{Log, Exp}]}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       PointLegend[{
         Directive[
          PointSize[0.004583333333333334], 
          AbsoluteThickness[1.6], 
          Thickness[0.005], 
          RGBColor[
           Rational[2, 3], 0, 0], 
          Dashing[{0, Small}]]}, {""}, LegendMarkers -> {{False, Automatic}}, 
        Joined -> {True}, LabelStyle -> {
          GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"}, LegendLayout -> 
        "Column"]]], {0.65, 0.75}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7846516285963163`*^9, 3.78465171402264*^9}, 
   3.784651749251747*^9, {3.784651786246234*^9, 3.7846518268611*^9}, {
   3.78509348032797*^9, 3.7850935172068987`*^9}, 3.785093554986166*^9, 
   3.785093642466354*^9, {3.78509371400965*^9, 3.785093756129712*^9}, {
   3.7850937909923*^9, 3.785093825147148*^9}, 3.7850939357903223`*^9, {
   3.7850940448657722`*^9, 3.78509411805732*^9}, {3.785094178856522*^9, 
   3.785094187048686*^9}, {3.785094260494157*^9, 3.78509436504746*^9}, 
   3.785094396105328*^9, 3.785094774574554*^9, {3.785094818321308*^9, 
   3.7850948350986423`*^9}, {3.8090943943024263`*^9, 3.8090944859050083`*^9}, 
   3.809095606615909*^9, {3.809096197299502*^9, 3.809096314066339*^9}, 
   3.809097726426379*^9, {3.809097849599559*^9, 3.809097884709887*^9}, 
   3.809280236488471*^9, 
   3.809280298089819*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
F/YfO4uPgaGqRRj60QMODx4jITkJzx/cwo4tm7Gdps7uoSsyc7GiIPiKFQJf
Zm4ecnKy6cpBekoiPJ47YngnKwH1loPmIjUHneROxfk/FskjFq5XPW60TLB8
XA+R3mHIZHgEhMlj1BOovX/1IEqTiaExLAdbIrmOPH5mn39OIYFoYoruLUhO
aOnh4L33ut/wknajl2oU3LFhbXd+L0oZ65KuXRkvg+JVnpUQE4Y379wRm5gm
y1YdpH91hxXV0WLIYt7VEWnxUaFUzgPxyemaXYVXZMjbu0Ij1TUqhrr162uj
bt261GpNq6qqK79m04F45R+v6awQ5KsH6pUxw8AZyzWS4WGCjFhf/NJTEnwG
ZuXQd+AQ/LHgd/Ts1FCwBw3Rf8k2yTWpjOyT8xkYynKnfK1+iErN0ygc4cu7
u4Lx65qURKMmTbXRuHFjGnaTJk1Qv051mRuSsrB0P3LyoNDjzs5pElMkLcpE
JnlauA9amLMpb4z+Qydg5pxlCEvJUjaKbTaOFUL+oL1XYdLoINr3Cfp2bYe2
bdrQr5YtW1K/Wlu3QbfuA7F5z2lEJqV3lYtG+rjD6clz5hcySYyQkRyNM/s3
o1ObVrCsUA5mJUqgvGUVdOg2FJfuvBBlFSaQlx6NeaO6oW3bdth68o6SHOnn
im6duQfWaNmihQ5atGjBnWjdBt179cWuE5eRlp2n2JoupzaiDfXvopOPOnrW
Le3PrkGTejVR0qwEKtVtgtdfEpTROx1ZDWuynK+5+H87eoZqXm4ucnPZAyN9
qxs6VGKQ3EeQGRMZEYYvgYEIi4g2KnB7Tm6uuiZEWl6uWqUufyuYzcvj1UiF
8/KIm0r1pibE4ktQEMIio9ijVrKIonKPJTb7f87/3eVBe7jaYs+ubSRzduDK
7ftIzoSmhTwveZlJuHf9EnZt3yLs+ks37RGflqts6rPt5vboBnbt2EYCZRdu
2D9iV0NjueaUGJIpp49h29at2H/kOJ56+KmxArEhXjh55AA2ES88dPw0fIOj
NI0LoOHF43vYR/x0G0nCi9Sr+LQcNczA/zWOHtxHt27B0dPnERSRoGkg0z0n
LRGON27A5a1iqeog4K2b8NLSRXfztzHu2NkjMSM7HyiZCbh34wx1dTN27t0P
p+fuDKPachVZSXGUfQMv3isj0Ed8eBAunzmBbdu2Yt+Bw3jg+jpfWdBDbnoM
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
6IpWrVqhW8++2H3qGse4aBrJZTJTwnFg9WJ07dQBrVpbo1e/wbh4x4XdpPnK
UnYqrhzdip5dO1GZ1jTP/XH0ir0oky9a07H8t18wnrhsTr4TkJntC/tLGN2v
N6xbtaTbibDDfsP9F4p/k2jg4YwZ44ahjXUrtOvQGTMXr0VgVKKy14vsRMyb
OBS/bTqtevOy4r9g+fThGDZ0KP0aMmQIff/888/YelIwaDVw6KPbfUwZNQjW
rVuhfaeumLtyC0Lik5Wqn14/jM59h+FdaIrqek6NDcG25TPQqX1btGjZCr36
D8clO9cCp+P0kZ4cif0blqBLx/YitKP/0DG47fxG3v/toXSc1PGcXAEbTWs5
LTc3B7lykJsSgJGXx7ENUrlmclp2dhakMIj8ctk5ymFq5Kv81K/snFx5lX1f
rpGcllMgTYmryMnOpnZyC7WRS+VkoMt2gI4UNyGnlSiivroF780r3AbTICs7
u1AbIsZD7rPUxr8dK6HEFPGc16tXD9WqVaM5r1KlCqVVr15dpNWqVUvT/ps0
LtdOTqtatSpHLaFmzZpqOU7jcjVq1FDTqB5RjvLUe6keUa5OnTpqOSXNysqK
ppHStDBixAitwh1u1Eg6Bdm1a1fq8FAB39atpe3ncuXKUWVSWrNmzURar169
qFEpbfDgwSKNO6KUGzBA0tOoYTWtcmUpSJzKy/fqomdPaWvL0NCQiaZUSd0Q
yW3atKE+U5oWVq1a9U2flb58/PhRVWvt7OxE2rBhw6hdKe3ChQsiLSwsTE0r
Xrw45syZI361k9MyMzOho6OD7du3q+VmzpwJc3PzQuWCg4NFfRxappTz8vIS
affv35eDYr7r5ps3b9RuXr9+XSWFUsXJkydF2ufPn9Wm0tLSWLBgxowZarm4
uDjRzY0bN6pp08joMDMzQ0ZGhnyvLpmVPqK+2rVrc5iRUuWrV69E8u3bt5We
Wst3sP6/uH93tOw1CqFJ0P1/4ACSMaq2JQyrtERAfN7fDSApKYmBg5CQELUT
CQkJIi0rK0sdAAdo+fr6IiIiQi3HTIY7FxMTo6aFh4fj06dPXL4QoLg+f39/
tVx6erpIS05OLqr34xpUhWmNNggsuveC19z+t27z9vbWLBRp7Kcj7nb3LnD+
PHD2LCmjT6Uqrf+tKteuXUt0PHuWPQSxsbGQP5q5SjM0blSqJDFHvgYM+E+a
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
WTx8+gqRccky7sikSY/CutV/wvbJK7DKNb1Zze/29NPDPImf6KFhpzGF+Yn0
9PJtlx+pZOHtkqmtm2LAkhPfHcJ/9OgRVSnt0RZ8qFcVhVQEgxRacndkiyh9
7FiJVCLsS7bRWaFkQ46PK/GHg8GV48Ps3RY2OimjzHj5kCF7uJlEhoX5DTFy
uJENExaXqqmkkCItFM34VTnUl0mzF6FTzYooXr1VIVLkZUaiS52yQr745MuX
tRP4gYvmuP0sqAApUvBznSroPH3Pd6Rwd3dXH3eZN3063GQjzp4U+czAQGnY
i2WewEdtWPF6WcABwEb+GXnY/CAO4QBwcMDzMWPEiTTSx3W/GXF2OFo1aIJT
d9/JI9YRj0zzcrmHIV1ayidBDVGqjtjjQf4nD7tnDxBrcO2pB8qbT6N9H8Oq
tDHK1u+MqJQcXNyyEIMHD0LfPn3IHO5GdqU+zEtXxa+L1iElD0W5gqsr806W
cLahoZhzZrXBu3ZJBFght8Xapddff+EpGewc2M8f9vmelpcIG/L8Ybnju3Wr
vF8oTTkxkUwkxMchIcYPTWo3xP5LTwmDiUhJz6ikdCAjHht/HSV0UvNabcSE
K260iPdPULWkEbRKWGDFliO0nI+jXa0yQn4vPXxXNLF5cnvw26omzpyHuXNm
oqZ5cVRs3AVb9h3mB18X6QdXHrELXsbt2kn8ga4INitSxLl6rJbXs+LE4OBj
PkPpRPoay17+sGbuUKeOpvCgfR/ZoLplOVSubAVdHW2YlyqD8uWrYeQfhyrL
SOYnsS8b1wclaMCkKenKYHv10AZdWtQGu1T19PVQvGxl/Ln9qHhsOn9igl6i
YYUyWHhAUmrG1LdCj7lHi9qwslLIS9iN1EibNDF8tMPTU5rf9fylLTx7OtIE
ktX5iWa/8GBS4iPxnCzaZ09sUa9adSzZcgIvnrvC2y+0itxsZko8vD5+Qnp2
nmoYZqUl4ZOPt3jbd3h0vPJKE5dr21C8RHncf/0R45vURtdf9xX5uJBqygTx
7iBxpScy2J4PGKD6ZLZ+s8QQjYbV6+Gk7QfZmSbtVq+d0B/VGnZF+8oV0WvG
gb9pjsoTz4qWFwIb0yQKJGJt+3Y5J2L/zl147RMmexOJT8d/Qc+a0tuQB/x+
uKhmVPHNorp0aeFB9qfr/eTJKszklpTnqng5X0dJYy10+21/kT1XJd3cuUih
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
rhTqnIqmhfJHN9HNRAdDx2hY1sKOcM4oS/yF9KJEdygvRVp6JtHfhQzOuuTQ
SkNUxCVcv30XNY2t9Hp1SxAtTd32qOqxcvr76OHoSJ4qTUYsQ4/ujtgfzq0v
Q2FUZEnPnvkhNu0PJOdrPb4a2qvVqOqLH6CnbQe4en6IyiZxVKf8VzC2dofe
EEd177Q/5Ho9cPVRhRjafyV4P+ytjdDNyQUWBDe9M2sxVYdbwiZ6D6zDZ3V9
pVYASXp0Sqz7xI/VfDdi32XCemXvMBBGV/cC44c5s/5HjPVFPwcbFjqjPjo0
vsKkwfaQW/dEUp5CYOvbKYQtWSdEJRZoCSaie3/6Q1/PEdezuBu4xspcDLMn
SPDzH/Gqpg73og7DQlcPm07eaoUK7wt2Z37RO/CzU5qThdULZ7GLbeaE1NNT
dR4bIHDtXNY8f12AaLd4EHsM1oa66DZ8AkrrmzXY66DGXnZUEIxlFrhwJ4//
ZCPmernirUlrJEGrOnuCSKGSKfXubURERCMl4znfTxMiTxIlLywaNUqoTO2k
PWzXGpgS6UVNiHSWBblSnfcAw3rZgd6nTJixAN9+uxB2ZKdo6RhjX/gd4WKn
5RASg3fD0rIv7hUoxIe/a+mHGDCSBaVKWo/UhyHK6mYlAjbMgVybm+UOJg44
eokaU2sxobcda5vw6S+oUDbzElKG/f9aABdPX2SXKkXHktzMBMyf7gsHezvY
2nVB/6HeCAiNlL+G/bvBe9CViPqsV00iq/u+nwlHj7Eof42BTor9lw8uw86A
IATPSfh+2ReQkxl2GjEF5Y2NiI/4E2PdejLhezQ6VWSfhnCTMw3KpmYRgVeU
l6GEtQm+BgZ4/igNOS8rkHkhoNXUm5j2QeLzWrWpn4SBXsxl8I15v3KSaGxa
5vjz72dsuj9060qmqjOiU7nozdzkcHQy1MKCrSG8JDDFkTUzYN3VBfNmfgC5
cS/c4Hl6ei2IaIOmOJsgrMRGfDq0B96a+BPdHW/K0kWqtOrZIzaTZbvCwZ84
W+u6Y1zwUHNZNvrZG2LO+hM8SyaoePEEPy+bgw5UPTPtK7LUWJWHYa6m8Prg
OxSXvEJ80F4yjR3wa1hcu5tM4Ofu+UPMGWvplkAW0JQWdQQGZKUOn8Ri7VCU
dgmdDbTxzx2n+YAcIlO2roDM0AnXsl6JJ+3f4Tvh2rkzerr2hb1lR/h+tBbl
da1O2texocjPhKcjzVYgw6LVoQRY58CzuwW09U2w8LtvMXooOUl1LBEe91hk
g4ZrXb8ZR46/BlGMleQ/QXTkJdxOuk9jM6TMU+rkuaPGEGmxJzBySH8s3cWq
6yB01yoxVZiWjiG+WruXzo4UqlDvTjB5NivrUaMQbn6akXwziuXBj467J+ly
od6HVDDM/8v/hWss5nxNby6vXqX3/1xqbh5B0nfsftN+aLoDLebeQ/thqgP4
crX/UT/nzwN9+9Iv2g/5LmNX1f9xP9RhiSpktbW0Hy6Jq1plrvb6ecP57cZ+
cIDiSeo9JCSnoU4pIsHch4k4HRKEwKCTiI2/yzwUpZCgdJcK/F//HtDrMlCj
SiA5E08c2IguFtrs47q6Okxfee+jL1BY2dAeblL1rqECC1pAxpVgmJGtoO/o
joDwGCQn38ZcX3fW1cerDzAo256+/xoSKuzVhLU0XJgcr/supYp+x6+y4eFg
CcMug5BZVPc/Emmuzccwp46wch2G3GoRQO3+5wRQb4SQ2Iz/dRi1eakEGMnh
5jNf/ao47AgHFjYFx/yvFOjtuR0DPIvUXecFOLJkd2s4kp6e/l8BntFzpADP
EgnAM3z4cLLYxo0bR9qy+WLm9B3sO688c3Fq5LRtaiQYWAg9kAYyFY9vobup
BJBZx2GufQKQ0UdtSSHiySaqqON8EV/kP8WNmzdZOJuMD2e7x/nNiC83sczL
65GMyK6iAFMnjcOPW/ahtLJGGqG8zICrnQFchk1EhQqhhOxextjdGyaUITBG
csgeaOs4IDabk99n/LlsATJdGTpaWTIHQ1MTE4z3WyXlQe7v70+o0igOGUvz
3ibn9S8xybsf+9wgTy/0tLOCWUv00VQBvyFdoWvpjIScGnVLyOKJA8ivtohJ
KhKYb6lfvnqchEEOHeDQaxTiU+7j2dMnyMrKQm5BsZQ+1HIdChiksug5tq38
EvrSGCSEJZDVwicr94h3Dncv7oeFvg6cvKbglRIqAKjiUBxj+pUA9LQyhMfb
U5BdXCOV61Jqd0QHbIOVrjazlallLlYUZcNnUA/2UR/fjzB//icsTZGOngWO
RqXqSjAiKCbZdyIwyNkGnft7IfZhUXuKSXf+/8c2L8PA0VPwqEwFBF48S8Py
udPR29WF5SMdMeZ9hETelEtQF9IKFj+9h2F9HWDafxTuF1a0p5UJ1Jl9oqqa
OlCJeryilks4JiwWKtQepycg83kxMs4HwIAnLbBTkHkLzqZ68FtxUKs9uoP4
p/7Hupkws7HHzEnjITfpLSq8T26ewzjvqUjNVUGy797tRSDZQo3sun37cv6g
ZH9L9G+KmrJ8bF+zBCbkPdomfcT+Sx7GohPBN1MWb0N+cQnSboXCuaMckxb7
q6/phIQE6lHPwh3Vu+eCzo0QuW8NOpj1FLcKhQon/NejO0FuDj16w8HOEv94
fzqyivhw8Aj1z3NmsaR7KahUKMX1U1r4DFev3EBi8gOa2oy9IrmPsd+5B6Kl
pf1vn7sfUQ==\
\>"],ExpressionUUID->"a3cd8986-771f-4865-ac54-78559dd2724b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<Tumor01.pdf\>\""}], 
   ",", "plotTrajectory", ",", "\"\<PDF\>\""}], "]"}]], "Input",
 CellChangeTimes->{
  3.8090943686169853`*^9},ExpressionUUID->"99efed72-039c-4d2a-ba13-\
5851f612cec2"],

Cell[BoxData["\<\"/Users/gregorykimmel/Dropbox/_Projects/01_CART/_Kimmel et \
al/_gitRepo/hybridModelRuns/Tumor01.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.8090978948592587`*^9},ExpressionUUID->"323fadaa-f69b-4b53-a252-\
7f0c0d795301"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "\[IndentingNewLine]", 
   RowBox[{
   "\"\<trajectory_41_2019-06-25.dat\>\"", " ", "has", " ", "stochastic", " ",
     "region", " ", "to", " ", "eventual", " ", "relapse", " ", "and", " ", 
    "growth", "\[IndentingNewLine]", "\"\<trajectory_21_2019-06-25.dat\>\"", 
    " ", "has", " ", "stochastic", " ", "region", " ", "to", " ", "eventual", 
    " ", 
    RowBox[{"cure", ".", "\[IndentingNewLine]", "You"}], " ", "can", " ", 
    "check", " ", "from", " ", "1", " ", "to", " ", "100", " ", "to", " ", 
    "see", " ", "if", " ", "you", " ", "find", " ", "one", " ", "you", " ", 
    "like", " ", "better"}], "\[IndentingNewLine]", " ", "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7707328747704887`*^9, 3.770732909932353*^9}, {
   3.770733048897592*^9, 3.770733190407092*^9}, {3.770733240326041*^9, 
   3.770733246490193*^9}, {3.783352633314204*^9, 3.783352647761829*^9}, {
   3.783352828650344*^9, 3.78335289187575*^9}, {3.783352923930839*^9, 
   3.783352993531146*^9}, {3.784651535927726*^9, 3.7846515924363117`*^9}, 
   3.784651626570919*^9},ExpressionUUID->"686bd98b-5249-429b-a073-\
707edcfab6a6"],

Cell[BoxData[
 GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1: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
L9vIgk9wtjKpymHu/xXuxCGPycdL3oN7WBtV+U8ogLMkglSbFcF/KkdEc5TA
bbmHNG8qY+pBlVCEmwomP9+d/6N/DJPfFdNhEqrgcP9h5aNqmPup/LiWMb6b
Mi7Zrw5+fvykWw0Cu56e+vhEA3NdeNj6+nGwk7QTrZMmeGSzcFX3BNidc45I
XAtsYGuidlQbrB1N8WwFY8FIM5lBHfDmWav5el1MfkiZ9D/TA8spec7GnARv
tP0Q9dQHx5j9fWhuAPa2rZZWMgSL3A3d4DACPyy4PEdkjKlnd99RzWL8XbbS
9rMJ5nqx32ClKZhQ8VhUuhmmv0yqdlHm4AuNRU4ep8B3ajtTzU9jxlPUgadi
AZZynkzmsQQ712lbkVuBV6px+ksYDwUNXho8Aw5SD3zbZA0md9bWfGkD1vMO
WU06C/ZdNx0MsQWn1OHPO9mB89NaZI3tMeslsfelogN4sMLlFM85cINBrQSl
I6Z/haQqqxhbnIkOHD8PDpnz/t1+AZNP4sR3yp0w/dsNupDpDP56gcrztgtm
PkPX8/1cwQGpfqyObmBe0ZYGw4uY/C9lfajkjtmfFmuy+T3AvytHpo9eAtOt
1tvsYtzdk0Yy6wkuv1X6o/8yZnxRaLvFCzMfRtd1Srwx/b1T8iHDB7MfM9GE
x18Bb/0YuRTsi6lXjKfuuV0F06+Uzln6gePHlcO1/cEzXkIn5QLA2+ff6PMF
YupJunwUbRD4OEPfKkEwpt6RDmQuYSzfeD1iMgR8uIk6oycUHJrb9K8pDCym
OnS99Bpmfwx5rJcdDp5LOK5//zpYooT2ZvQNTH56mO74R4CXTx4rdIvE9J+d
8bFNFGZ/HOZrNIwGMz/J40U3MftV7VSjdAxYJpM1jT8Ws58+x4tS2rdNHE6U
KIrogCvuil0SuA12XRsQ6ce4Y15SoDYOLDETxZ0RD+7xe1MRdQe80KV7yDMB
PCGYQG11FzzzjydFMxG8a6sUKHUPTPpkPIUjCewWff/z4WSwl70w9S7GzsLR
ivP3Mc+nmSpNpIDjqjL2eh+AqfxeBr9/CE52eJhR+whs5KdoX/QYjEc2/Don
FUwdxBuTmgZ+WzE0lvgELKPf8zomHXzhVMPitQxw7HH+TP9M8J8dlYrLWeAY
k6+Srk/BAavmh849A9/eilO3zgbjB7R0meeAL5s/qTTMBdP8olrRyQOTGFhE
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
oB1M4JXV/Bnj14PpXYUd4CnK7LnATrAScR6dVhf4LVOOCds7cJh5WsUaxooq
91k63oOT6dIfp30AM+XWibh1g/MeHxiV7wGHOIc/oPsIfnjF0GER45thSRdf
fwKvvtNSSeoFr9MU6tv1gbNoavylP4Mpoh+XkfeDHfADd6cxzhJ1sKweAHc8
jB6IGQQnPT9oc2UIbLb7i1B8GFxNEFRPMgL+LNEUNY5xBe+884tRcD2isosc
A4+T2fmYfwE/ESVKExkHe4sfHySeAG/kNPF+wdiKnie5YhL8isuTOnIKc//f
eltsPo3J/3/KxqJfwbZ8rKwkM+BHPz13xjHuO+L46+Uspv9M+f9Fz4Hp27+w
W82DGRWLLCW/gaVPsufafIP5HNdjHp/nVhbAdxRO1NxaBKc7nQuQ+w6uSDaW
xlvCrG+oRLMbMZYaUfcO/wFu8GnNUV/GrBdWpCapfoKTa50E+35i8hfHm0ek
F61+gRmIJzT/YOwhdvndi1Vwp1WnmudvzHzwocRbbA0cY+V17C/GK3joaOMf
zPVPnmOKWsfMP721RJc3wGxlaaknN8GH83mfLGMs0nOH5PVfzPz63OdB3Bb4
zUqPyJVtsHoI6xuRHTDRMUkOol1w7tio6gjGDFfdmEv/gdPGc2PD8cT37Kgm
HW2CD+7zE1ue/s//tz88rkW7glV8DoIlI1YoSQnAuYcOX+3CmCKctSaaEHxg
0K5D6xDYzINFn5YIPDPpfHEc4yIWa5snxODDISmWvofBQ2NnyJRIwMe1P52n
JQWrXTrWMYcx49rpiNoj4CMRsSZ3j4Kd3uiesiYDWzT+/SBJDp58unaenAJc
n2FqNYuxBHUBV8MxcJey+fUUSnDkiXkTVyrw25NaZSrU4NvBZN5sNOBWsvn0
bYyv7TayD9CC1Tuu/yujA58/MssbSw8O6QvOtD8OrqS+aaLAgKnvTpMBKyOY
dSgtYRvjhJgvhENMYLuuxrKXzOCfgmOJiSfAVCbUBa4smP6xuPddgxX8NKfr
Cu9JcLu2MSExG2Y8v1L1z2D8y/fPp2Z2zHFRjq0sDnD2rUnNG5zgKou4TvNT
YLa4fDcZLnBJW6UsEzd4tNdaYgvjgVorg2Ee8PtR38c1vOBlai/yh3yY+nWI
FPjxgzN30q8angZHWWVrSp4Bm5qcNaUXAP/hsU7cwPjmR7afg4JgSvFb3jVC
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
h2uWazp6RLEoHEzPTS76P/8HrG4/cQ==
     "], {{{}, 
       {RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0, 0], Opacity[0.2], EdgeForm[
        None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl2kMMIMq2QNG2bdu2bdu2bdu2bdu2bdu2+/dfL3ewclKjSqWyZydho/aV
2gUKECBAQOKH+W/+7xyYns69yURGMpCedKQlDalJRUpSkJxkJCUJiUlEQhKE
+e+OeMQlDrGJRUxiEJ1oRCUKkYlERCIQnnCEJQyhCUVIQhCcYAQlCIEJ9L93
EYB/oQME+D/+8off/OInP/jON77yhc984iMfeM873vKG17ziJS94zjOe8oTH
POIhD7jPPe5yh9vc4iY3uM41rnKFy1ziIhc4zznOcobTnOIkJzjOMY5yhMMc
4iAH2M8+9rKH3exiJzvYzja2soXNbGIjG1jPOtayhtWsYiUrWM4ylrKExSxi
IQuYzzzmMofZzGImM5jONKYyhclMYiITGM84xjKG0YxiJCMYzjCGMoTBDGIg
A+hPP/rSh970oic96E43utKFznSiIx1oTzva0obWtKIlLWhOM5rShMY0oiEN
qE896lKH2tSiJjWoTjWqUoXKVKIiFShPOcpShtKUoiQlKE4xilKEwhSiIAXI
Tz7ykofc5CInOchONrKShcxkIiMZSE860pKG1KQiJSlITjKSkoTEJCIhCYhP
POISh9jEIiYxiE40ohKFyEQiIhEITzjCEobQhCIkIQhOMIIShMAEIiAB+BdK
//zlD7/5xU9+8J1vfOULn/nERz7wnne85Q2vecVLXvCcZzzlCY95xEMecJ97
3OUOt7nFTW5wnWtc5QqXucRFLnCec5zlDKc5xUlOcJxjHOUIhznEQQ6wn33s
ZQ+72cVOdrCdbWxlC5vZxEY2sJ51rGUNq1nFSlawnGUsZQmLWcRCFjCfecxl
DrOZxUxmMJ1pTGUKk5nERCYwnnGMZQyjGcVIRjCcYQxlCIMZxEAG0J9+9KUP
velFT3rQnW50pQud6URHOtCedrSlDa1pRUta0JxmNKUJjWlEQxpQn3rUpQ61
qUVNalCdalSlCpWpREUqUJ5ylKUMpSlFSUpQnGIUpQiFKURBCpCffOQlD7nJ
RU5ykJ1sZCULmclERjKQnnSkJQ2pSUVKUpCcZCQlCYlJREISEJ94xCUOsYlF
TGIQnWhEJQqRiUREIhCecIQlDKEJRUhCEJxgBCUIgQlEQALwL6T++csffvOL
n/zgO9/4yhc+84mPfOA973jLG17zipe84DnPeMoTHvOIhzzgPve4yx1uc4ub
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

          "]]]}, {}, {}}, {{}, {}, 
       {RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
        0.003666666666666667], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwl28MSIIqSQMF+bdu2bdu2bdu2bdu2bdu2bffkjVlkRP3AqVVVgobtKrb9
X4AAAWKFDhCgJzH/m4lNHOISj/gkICGJSEwSkpKM5KQgJalITRrSko70ZCAj
mchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGKUozilKAkpShNGcpSjvJUoCKV
qEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b2tKO9nSgI53o
TBe60o3u9KAnvehNH/rSj/4MYCCDGMwQhjKM4YxgJKMYzRjGMo7xTGAik5jM
FKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwW
trKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc4CSnOM0ZznKO81zgIpe4zBWu
co3r3OAmt7jNHe5yj/s84CGPeMwTnvKM57zgJa94zRve8o73fOAjn/jMF77y
je/84Ce/+M0f/vKPACL9HwEJRGCCEJRgBCcEIQlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOa0JRmNKcFLWlFa9rw33JtR3s60JFOdKYLXelG
d3rQk170pg996Ud/BjCQQQxmCEMZxnBGMJJRjGYMYxnHeCYwkUlMZgpTmcZ0
ZjCTWcxmDnOZx3wWsJBFLGYJS1nGclawklWsZg1rWcd6NrCRTWxmC1vZxnZ2
sJNd7GYPe9nHfg5wkEMc5ghHOcZxTnCSU5zmDGc5x3kucJFLXOYKV7nGdW5w
k1vc5g53ucd9HvCQRzzmCU95xnNe8JJXvOYNb3nHez7wkU985gtf+cZ3fvCT
X/zmD3/5R4CA+icggQhMEIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAm
sYhNHOISj/gkICGJSEwSkpKM5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5
yE0e8pKP/BSgIIUoTBGKUozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWo
TR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b2tKO9nSgI53oTBe60o3u9KAnvehN
H/rSj/4MYCCDGMwQhjKM4YxgJKMYzRjGMo7xTGAik5jMFKYyjenMYCazmM0c
5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN7exgJ7vYzR72
so/9HOAghzjMEY5yjOOc4CSnOM0ZznKO81zgIpe4zBWuco3r3OAmt7jNHe5y
j/s84CGPeMwTnvKM57zgJa94zRve8o73fOAjn/jMF77yje/84Ce/+M0f/vKP
AIH0T0ACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4xCUe
8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzkJR/5
KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSlHvVp
QEMa0ZgmNKUZzWlBS1rRmja0pR3t6UBHOtGZLnSlG93pQU960Zs+9KUf/RnA
QAYxmCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBC
FrGYJSxlGctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEO
cZgjHOUYxznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7x
mCc85RnPecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/85R8BAuufgAQi
MEEISjCCE4KQhCI0YQhLOMITgYhEIjJRiEo0ohODmMQiNnGISzzik4CEJCIx
SUhKMpKTgpSkIjVpSEs60pOBjGQiM1nISjayk4Oc5CI3echLPvJTgIIUojBF
KEoxilOCkpSiNGUoSznKU4GKVKIyVahKNapTg5rUojZ1qEs96tOAhjSiMU1o
SjOa04KWtKI1bWhLO9rTgY50ojNd6Eo3utODnvSiN33oSz/6M4CBDGIwQxjK
MIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFLWMoy
lrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+9nOAgxziMEc4yjGO
c4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u84CHPOIxT3jKM57z
gpe84jVveMs73vOBj3ziM1/4yje+84Of/OI3f/jLPwIE0T8BCURgghCUYAQn
BCEJRWjCEJZwhCcCEYlEZKIQlWhEJwYxiUVs4hCXeMQnAQlJRGKSkJRkJCcF
KUlFatKQlnSkJwMZyURmspCVbGQnBznJRW7ykJd85KcABSlEYYpQlGIUpwQl
KUVpylCWcpSnAhWpRGWqUJVqVKcGNalFbepQl3rUpwENaURjmtCUZjSnBS1p
RWva0JZ2tKcDHelEZ7rQlW50pwc96UVv+tCXfvRnAAMZxGCGMJRhDGcEIxnF
aMYwlnGMZwITmcRkpjCVaUxnBjOZxWzmMJd5zGcBC1nEYpawlGUsZwUrWcVq
1rCWdaxnAxvZxGa2sJVtbGcHO9nFbvawl33s5wAHOcRhjnCUYxznBCc5xWnO
cJZznOcCF7nEZa5wlWtc5wY3ucVt7nCXe9znAQ95xGOe8JRnPOcFL3nFa97w
lne85wMf+cRnvvCVb3znBz/5xW/+8Jd/BAiqfwISiMAEISjBCE4IQhKK0IQh
LOEITwQiEonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt
6UhPBjKSicxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzl
KE8FKlKJylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1o
Twc60onOdKEr3ehOD3rSi970oS/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjP
BCYyiclMYSrTmM4MZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8G
NrKJzWxhK9vYzg52sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUu
conLXOEq17jODW5yi9vc4S73uM8DHvKIxzzhKc94zgte8orXvOEt73jPBz7y
ic984Svf+M4PfvKL3/zhL/8IEEz/BCQQgQlCUIIRnBCEJBShCUNYwhGeCEQk
EpGJQlSiEZ0YxCQWsYlDXOIRnwQkJBGJSUJSkpGcFKQkFalJQ1rSkZ4MZCQT
mclCVrKRnRzkJBe5yUNe8pGfAhSkEIUpQlGKUZwSlKQUpSlDWcpRngpUpBKV
qUJVqlGdGtSkFrWpQ13qUZ8GNKQRjWlCU5rRnBa0pBWtaUNb2tGeDnSkE53p
Qle60Z0e9KQXvelDX/rRnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nC
VKYxnRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJW
trGdHexkF7vZw172sZ8DHOQQhznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wlWu
cZ0b3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nCV77x
nR/85Be/+cNf/hEguP4JSCACE4SgBCM4IQhJKEIThrCEIzwRiEgkIhOFqEQj
OjGISSxiE4e4xCM+CUhIIhKThKQkIzkpSEkqUpOGtKQjPRnISCYyk4WsZCM7
OchJLnKTh7zkIz8FKEghClOEohSjOCUoSSlKU4aylKM8FahIJSpThapUozo1
qEktalOHutSjPg1oSCMa04SmNKM5LWhJK1rThra0oz0d6EgnOtOFrnSjOz3o
SS9604e+9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxjPBOYyCQmM4WpTGM6M5jJ
LGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjazha1sYzs72Mku
drOHvexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFq1zjOje4yS1u
c4e73OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJL37z
h7/8I0AI/ROQQAQmCEEJRnBCEJJQhCYMYQlHeCIQkUhEJgpRiUZ0YhCTWMQm
DnGJR3wSkJBEJCYJSUlGclKQklSkJg1pSUd6MpCRTGQmC1nJRnZykJNc5CYP
eclHfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kqUJFKVKYKValGdWpQk1rUpg51
qUd9GtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCTXvSmD33p
R38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZzGYOc5nH
fBawkEUsZglLWcZyVrCSVaxmDWtZx3o2sJFNbGYLW9nGdnawk13sZg972cd+
DnCQQxzmCEc5xnFOcJJTnOYMZznHeS5wkUtc5gpXucZ1bnCTW9zmDne5x30e
8JBHPOYJT3nGc17wkle85g1vecd7PvCRT3zmC1/5xnd+8JNf/OYPf/lHgJD6
JyCBCEwQghKM4IQgJKEITRjCEo7wRCAikYhMFKISjejEICaxiE0c4hKP+CQg
IYlITBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN7OQgJ7nITR7yko/8FKAg
hShMEYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q1KAmtahNHepSj/o0oCGN
aEwTmtKM5rSgJa1oTRva0o72dKAjnehMF7rSje70oCe96E0f+tKP/gxgIIMY
zBCGMozhjGAkoxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jM
EpayjOWsYCWrWM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvayj/0c4CCHOMwR
jnKM45zgJKc4zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94zBOe
8oznvOAlr3jNG97yjvd84COf+MwXvvKN7/zgJ7/4zR/+8o8AofRPQAIRmCAE
JRjBCUFIQhGaMIQlHOGJQEQiEZkoRCUa0YlBTGIRmzjEJR7xSUBCEpGYJCQl
GclJQUpSkZo0pCUd6clARjKRmSxkJRvZyUFOcpGbPOQlH/kpQEEKUZgiFKUY
xSlBSUpRmjKUpRzlqUBFKlGZKlSlGtWpQU1qUZs61KUe9WlAQxrRmCY0pRnN
aUFLWtGaNrSlHe3pQEc60ZkudKUb3elBT3rRmz70pR/9GcBABjGYIQxlGMMZ
wUhGMZoxjGUc45nARCYxmSlMZRrTmcFMZjGbOcxlHvNZwEIWsZglLGUZy1nB
SlaxmjWsZR3r2cBGNrGZLWxlG9vZwU52sZs97GUf+znAQQ5xmCMc5RjHOcFJ
TnGaM5zlHOe5wEUucZkrXOUa17nBTW5xmzvc5R73ecBDHvGYJzzlGc95wUte
8Zo3vOUd7/nARz7xmS985Rvf+cFPfvGbP/zlHwFC65+ABCIwQQhKMIITgpCE
IjRhCEs4whOBiEQiMlGISjSiE+O/+//Q//8LEJs4xCUe8UlAQhKRmCQkJRnJ
SUFKUpGaNKQlHenJQEZ68X/CTEVc
         "]]}}, 
      {RGBColor[
        NCache[
         Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
       0.003666666666666667], AbsoluteThickness[1.6]}, {
       {RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
        0.003666666666666667], AbsoluteThickness[1.6]}, {}}, {
       {RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[
        0.003666666666666667], AbsoluteThickness[1.6]}, {}}}], {{}, {}}}, {{},
     GraphicsComplexBox[CompressedData["
1:eJzt2Xk0VI//+HFjLVv23WCMZcxiHWbGMi8qSiqRRLbKVpayFKkQhZJd9Q4p
UYRUKpGKLNkie5tKllIIZa/4zqdz3p97Tvf8zu+c73/fc9x/5jzOfc1y79w7
9855Ku05YOPBzsbG1s7Bxvafx3+XVlXhsBguBrD9P5Z/179o5z0DWkeYdKFc
82yWO77UmbJ/Smfu8PV+281yqHG1cdJyLnOAY2hOhpsBE0pqaVVut5md86GO
h1necNk+qUOmnKmZKRf1keVnjP2ExIJq5rvqJRknHgbweU4U+U/UM7+c2RP7
keU0XOO02psWZlmZ5ZLfKgboZG3dFk7sYB5if3HuF8vX5OTmVxV3M8WZ6rfi
VjPgPXOZ19fzFZP77kiAAC8DBMQ6Yo239zG5gup2xLAsYilLWWvQz4xNW+r4
xvI6zHTnR/sB5jTmcJoZHwPqjl+N8Ds9xNxScdX1OMu4sFL+W02fmFWh24Qy
WSYosOHzJb4wA9pmz1xg2VM8/2uR/yiTkFlc4c+yTHhtK619nGlVOxgtx/Lh
WW3Gstwkc1jboCmL9X795TFtbnZTTJVOGfdR1ufdOWOaXZ38nSl1zBnLyfKA
VKKTk/UsMzW44mA/JwOW9wYUnkibYxJNzryZZWdAn59CW8vLeSav25aWp2wM
uFW+0YFDfpE59o9Am9ESHXyv3JVa2POT+fnmLc+9P+mwMWAjb8qNX8zG+tEZ
rXk6eH/SUSid/M2s51/7+so0HTi8lAq30paZnJaGNiWTdLhRyoujARvc1K9z
3z5GhyunnzUmDrGBl1zrcsJnOlRXFQ7ST2Pg5tXbj+0G6DAz1txiSWGHzs1N
mOt9dLged+Pz2y52IDGo5aG9dOiMJu7lD+OAs+/HPRpe0EFPnLDAqcQJUj76
A2ca6cAI+3x0tpET1Cqc11VW0+Hwqa2OcoFccN67LmdrOR1kX2zKfCLHDThe
pzrjW3SAcMF83SZuWD0/2HvkGh3klLS9hkN4oHa/94uZDDrwhidiHAirYHf/
jYQrSXRIm6boa75fBTh8r6VHNB08yLsLDC+sBndHjm2Ew3R4K4uZOmXHC2Ie
7t3NXnSoeqkgvEuGD7ZQ4lywO+mwnNjsp/KZD0K5TK9PmtOhcJh3xucRP3xu
/7Esp0cHa9/RL3IXBKBlYaNNtwIdZr+3vG8NEIR6hwTHVF46ZB0p7gq3WgMp
7nvTnKZpoBRpPnRBVAgyDNLN6e9oEFxb5jIZKQRetmXumvU0aOBWe73hmxDY
mic6mhfTQMbygm3OLmHgyzo+fCqVBn4JPG0LjSzz2YzMhNCguj1kg42+CJze
WGya7UQDUbGRmsJcETAVEboWAzTwtN9pzCEsCj23IkLKlGlQkdH4YFe4KHyw
2nZbj5sG/O9pOvdGReFcWtkTnhEDcFW6UczvIAZs44xgapMBlLpLq3k8E4Ou
WqvpmhsGwFVwOuexrjicnaosuHfaAHaOLshK5IiD4LtphuA+Ayii7D/vLygB
eOG8lE4LA1gKeCPUcFQCivx2dXKoGkDAunEvofcSkL98WgjPYwBDEmxVDiAJ
FuelCS8+64P9FxGJ3KuSYGbrZ8DVqA/NlSp+Y5xSEFFjPVGfrw/GibQ6qpcU
XL2y7ZpQrD7cdtskG9EkBV2cL+yHPPRBWdclsJEoDTL5CeXMdfpwniugSThR
GthT8vSVcPqw+lW04q5JaShfn7EqdpkKxwrPh+TZyMCCQqL+gT4qrKpk17hX
KAPtzb5pKY+okN7i31fLLgsCVOvnm7KooNj3JrHLURb8qSMmWUepUDxmbjpY
KguCD96YnXCkAu136Y/vvHKwtuIHZYFGhToBhevse+Xg1DtpF3ZJKlhj43eK
VMrBM2uMXua0HvRR5nhxovLgJX9RqaZDD7yZex9r+8gDh7XmjUMleiC06Aht
FfKgWj22NjlRD8rv2dTuX4UFzpt2r6389cDtgKU5jz0Wcs3l4gs368EqDbOm
3GtYCCXREgtIenB7iG4F01hYn3aQZM6nBzsva7/oM1MAw+dP6qO+6AKbI8Hm
SIoCOL4+0+HcoAsFYko94v0KYMZW86E3j2UvfpKDpCLEvWy8OH5CF36ti/PL
N1EEmufG2hwXXdj/UyCvZ7ciBKUy4stMdOHVnbQ3HKcUwdGlwOgYVhfMvaWF
dQoUoamZOPT9tw7cw162cGtRBPyg/xWZdzqA68GHJ35ThPFdVld/VOpAcnzh
vUfCSnBgsZ8UnqEDS6Zao1/1lCDVLencw1Ad8J2/ryS9Uwnil2fX3tihA29K
DHdaHFWCcdyHO5Z6OrDB42nioWwl8AyS8LksrANlshb1uU+VoJh7g0DBN23A
dz7/2TGkBBNnn1l4tGhDapyNDtsqHNjhtrx9ma8N7D/Cw7LVcCDj4v4zL1Yb
Ap2LaowscDB5j0fOwEsbBhpe8r71xMFLuYXRRHNtsNHhtD0Sg4PRtAT8TRVt
qMnSypS8joNIy0OnUzm1QYfHefB+PQ7C1keOMAe14GrAaeL2YRyYSLpJlz3V
ApG++0HfOZXhkZvX75nLWhBlPlCZjFeG1VSLCLZwLfh+W5BTc50ypAc3p/bu
0oI9soZWrXuVYVVEkt4RuhZ0nvJK94lWBm+n6n1fJLTAbDKtb3WuMkRMpkVY
j2hCqWM1vqBGGRrjlP/xu6oJuPoxX/MB1us329mTnDQhVVP6/hAGDxmHxLiT
xDWBPWP97yglPBACgn9eaKNAIGfgeiVTPDTxy2VtjKXAgH92QpUbHoo7Chyu
Mylg87q5xzkSDz3K4qW358hQs3ZO/tdlPHxMltf0uUUGnRJlz4wqPDzffd3j
lScZrkpZl9A+4MHmktLMojwZRKKPzfYu4aFs30xMTzcJosYLTA5hVeCo+GDr
/ngSZKlJ3BtmqMDNlo8d6htJULY7mrDDXgXO/aAul3KToD1zMvtZkAr08KQ5
89UR4WuPs5hBsgrEF+xY0D1BBE6hltP5xSoQ3KY9SDEhAtaStizZpAJNjzs1
lxY1gHbyWnDcsAqYkpPnch9ogM0Tka/zGFVI9RPfgQvWYB1vEa77sKoQwL5m
/1EtDYjRGe9+zVCFwCuvtt8ZI8AVX0dLS3tVeOxIYjwrIMDD6w1VD4NY6w93
Mh+5E6C7X49KTFaFqQGbhHOKBPgmc7Uws1gVLBzyN23vU4dVdmsU+ZtUwZpz
Im/xgjrgko6dOzasCjn2ynVnbNXBqOkL7zhGDWhPWru516jDDg77SGesGoib
V7EHNKvBQeO6mVaGGrgPNB5pOaUGZ0K0fUzs1eD39kMeUqZqkHcnu78kSA06
TtVNOvxShSejfDsUktWA+9Ln9akPVOGVypGWpGI1eO2wnFAbqArfXT8BW5Ma
8De+mZwgqwJ/hm3ZwWE10LcqT5f+ogKq3dXEjxh1MDDnyTbLUwEQpORsw6oD
5wGipp+rCjhuyJSoYajDgXem3pkyrP0eteqsjr062Nd/8nzRg4fER4cwuUHq
wIz9vZ4vBQ8FswOHRZPVgU3wiPw2KzzUaFmPRRerQ8pHVfZcHjz07X+8e7pR
HYJdwrg4apVhNk/jpfuwOpRrO1KDwpVB6MMFqx4MAdIXv2XO0JVBQ5qrZj2W
AFmWQcyzMzhYZxtoUMYggJ45F45+BwcuCR+KVe0JsFvpiOmSLw5CG6xwF4II
YNdNvvBOHQepmIcXeJIJcDpuQPI163ei2FBNILSYAHvvJ9z9fkUJnh1Kjxpp
JEBZDtWO5KwE/bcw8zuHCdBFaB6IlVaCxS/+fk0YDejXYDPm6VUEMXzfAB2r
AW4tZGZxqiJQXDbuLGRoQECeelXoVkXY8E9Zq4y9Bnxrwyf48yvCnk7ltfFB
GoA5TPyMTVOAY/wp5T+TNOAEVdH/oYACnDdfIvsWa8DQFkfS3Tgs3I70ye1r
1GBt9/tUfk4sND98JbV5WANUKjZzN0fIw9D0+sTHGCJc2vTg/befcrBEuctB
wRJhS4eHV3ioHEjtUzySzSBC0s5774/OyIJObsI3QXsimL0cPPQ1UBas3i3u
jQgiguTuH9atkzLgKen9eiKJCDx+YTFqB2QgclvPFrdiItz2jlH4NS4NGfFm
de2NRLiYeERyi5803Ku/RTcdJoL4s7FdiuNS0LYsd+sOhgT6IWnPD/lJwQj9
DB6HJcHckpLhtm+SwB48dzGVQYI7Z6k+9w9IglyJ+xoOexLI4Jki16YkQH+k
42RQEAlGQg6+xAVLgDWOuTiYRAJGRKGt9pw47HcqPrC9mAREY3/hrjBxOHle
eriukQQR8u1neZfFILs9xpE6TIIrtb66b6LFoJx3+sU1DBm2pbu6r1stBp3r
dq+XwJKBx9bo4KYkURgLb3sYwyCDi+Lqi1PiosBdYag1t4MMuoWGIvRLIvAq
Vtru5h4ySNrdr7zj8/83xu/hhhmWyfIS0l670c5fu0nE350MvsHzZRh7tDNq
1vo7eZBhcdPwqhNWaHNJnsMSPZH5vy1y9+ZuCV9k/m/7HDjWuiOA5Tye8CFT
tO9MxHvsDyTD8KPfkUQDtK9POtozg8iQWZUfYkdCe/8OW6NelgN7f9TsVkL7
Xt5rr5hgMhz2zn+yVQJtQ5vJhqljyPzfvvTI/bracWT+b0eYzMbkRJOh2knl
KZYPbaHCB/FBJ1nXJZK2bNuyMMr5pnZL7LFkmD9TIuk8jbbknhzftyzvCXD+
2TyCNs+c9TV6PBm6mamcku/QZr+9X3dbAhk2Pv6yHzrQPv/OgngpiQz8ufMu
5vVoxxYfz+hOJsNLj9nV6hVo6/puSuNOI8PJoT0JQ8VoK/8zWiDNstel6+xH
r6A9Ls/9lDMLseLL185WuWQQ4LgZ9jUN7X693122eWSwiAz9rR2LNlbJZGlH
PhkO3bl12joMbWEJ/k1cJWQgbVEWW++Htj5blXn5HTKY6FjFCrqhfWPV/d7K
MjKIj1TXFNmgrYXV6k6uJIMrz9UM2fVoV1OFvbc+IoNC0a9eJwO0DU9Yz0aw
/EUTp+tPQLv+RI1DL8tm9tNOW2TRptxVw+54gsz/7RLX+aLgJ8j83+ayXCRy
VJPheS9++ic/2mmy5vbcz8igbOp1+tCSEMp7a4RcKxvI8Fgm/VLFBNouLbsm
TRrJYNRWeeVZP9oxqk1cXixrCatPZXSgbaQjLsZoJsMNZcs3ejVoa2FECbUs
hxLS01JL0U4YrBBzbWWdv0WGzNKraLsuKefktJEBKzU4kpKKdkf1Bn/SCzJ8
61M7qRmFduQJqq9QBxmEfEVG4wLQjqM5vNvzmgxJOh59mW5oD13nKjAbQEzv
tTO0HCTDMULDgsdWtLdGjQYkjLCuN+bP6oeM0a6v2h91kWWnjJs54iS0p9be
lnb9RgZbX42WGWm0j0tzthWxPLv00CGKB+1vLUH8/hNkEBWtCTn4ZQ3Kp+3x
ogEslxrhvNVr0d72qcN18zxin82aiqLLZLC+UVKokoV2r8UPpjoHBXgw25bd
gtE+E3AezHgo8EC2+EHnJrTrH90pmFpNAVdHnZJAHNrlQ0stTSKI5YrjXKvF
KHC80tqINi+Icm0XMIrFKVA1mawp04r2cvf3UldZCgSbJT8WzEFbReEdlopH
LMq4E99MpMDNptzDfMFoE+TSTVJ1KWC1/Zc+lznav4+96vWiUkBmTExiUgJt
g/xnDAVDCugbU7ZXfRJAeePhfZs8TShgX5y43uM+2nzvU9iesiwZqGPYFYX2
fRVcdIgpBfoF4rwXtqCdeu9XapgZBUpNa+ufSaP93L1ILduCAo0NjG/qg/wo
n59NUHi1iQICihqLfEVom/JViV7fjji51ip2jQsF2n+ssXUMQNuv3Pv+G0/E
+qlqby19KIARrDjxi4r22K0qc19fCrwr75l+Nc+HcnhNxcFhfwqENJY/6apA
u5yZsDUwkAKexJQNbaFo3+lurz8bRIGCXr6F61S0H2tZL+OPIfN/+3fJnF5f
ODL/twsF9qbpR1CAtNTaQpvkRflS7I/qX7GI5WwO8/akILYfi6QJnKeAtuX5
XscCtA+aDjWf/YcC2Sc5yj84o00v5Or6kEWBPpnJr+lCaIeN6e/uz6XA2oTx
OdPq1SjzcJtK5RQjLsUMhlTcpMBqcuqxfF+087aQjuaUsL6/ex2/j4ujbVZx
PNPtAeKinveFXE8RV02JOjg2U+B1vXFI8MNVKFfWrPUW70L8XIh3oZzl2pID
6ZRdaEekavfwvaHAtcGgo2ZzPCjv1SrIrBtA/MFatcpwDLGWnPS16nEKmN7l
5NZPRBtD08d1TFIgK8WHcVQB7egQ/eyYBcSqG0JsDmI0ITli8alPITfKE0RL
DQK7JvAwFpfMKGh7iGwn9PEiNol2eiAipgn0DZvpEoVcKItf6VavlUMcmzQX
vaSC2HhNl88XHcT2BYM/NHQ1obbypUSzHNpvIgUxLw0R65VLluSaacKBs9pE
zlOcKMfsm7tJtdSES9ldjyQ+cqA8kOsQ9d4G8dpWKeUAO9bzDSIeDFLQHrn5
y0vKBTFN+MApES/ES+NH9Hr9NMHoz/81dpRl3x6TDTuMeFdWa6BTBOLqHX5+
jBOaQP1z/4tBmfrPt+K3pxHn2plsLUpFPCFYUjaTjXh0oVaEN0cTcv/c77Ch
nHLQmD3/BuLlodXbd5YiZt9omXPoCeLS+KI9c02aUP/nernM/NvS1pKvEzsR
R4pFb1V9i3iZuO+X+GfEDVt0g5VnNCHqz+/3L5T9FvIsbec0ofXP+b+AsrBF
QNPQMuJdzVi8IafWf40Pz1TD8yK2n6jo7BXQglt/jt9ZlCVIHgbyIoh7vIWy
9kog/nQw7kapjBbwcf5n/06hPFPY7j2HRcw5LKVupIzYPDOOJkxAHLausVpX
C7HEe86DvTTEG+S+/vPLDPGJpntmBVsQ675u5mnbhTh+zUYLh/2IS5c2fSeF
IW6IfHxRJR4xrw1b2q5zWjBh9J/t+4Sy30ll75SLiNvLzI0bLiFO77GEbbmI
ndLqv47fQKw6G+FedQfxG3b5yqcPERf13uWdqkM8PPoUD+2IdxpOyWf1IfZd
bHzGHNaC6t/LrMXC+G9fTtp82fcL4t56c43+McQ65+vz8tp+MHcbiVYO8DDg
nfj99KuCM0yRibqpKO7/e/10a+XgRqvN2v/t7vdXY7eWt88w/+3t/27/v+tX
eutKb13prSu9daW3rvTWld660ltXeutKb13prSu9daW3rvTWld660ltXeutK
b13prSu9daW3rvTWld660ltXeutKb13prSu99X/bW0cPcHWojmtBKHP8sLOn
cfXf7o+Kb7WZQvzOBVtQPY34VgBvbvACYucHl+wwy4g/1m1WSuPS/q8bjD6O
4gQQfw2Tcboljvhjzrw+RQHxDbV0hRQC4s/nFy7X6yHOfnntUBkg/re3/uv/
AURavps=
     "], {{{}, 
       {RGBColor[1, 0, 0], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1FOUHgYQBtD906ZKUzPe2LZtbuxkY+3Gtm3btm3btp0iaNMGd88+3PPN
PM3TN8Gh4SFhUYKCggKcD0RmxP6f4QmPecRDHnCfe9zlDre5xU1ucJ1rXOUK
l7nERS4EIm+c4yxnOM0pTnKC4xzjKEc4zCEOcoD97GMve9jNLnayg+1sYytb
2MwmNrKB9axjLWtYzSpWsoLlLGMpS1jMIhaygPnMYy5zmM0sZjKD6UxjKlOY
zCQmMoHxjGMsYxjNKEYyguEMYyhDGMwgBjKA/vSjL33oTS960oPudKMrXehM
JzrSgfa0oy1taE0rWhJOGC1oTjOa0oTGNKIhDahPPUKpSx1qU4ua1KA61ahK
FSpTiYpUoDwhlKMsZShNKUpSguIUoyhFKEwhClKA/OQjL3nITS5ykoPsZCMr
WchMJjKSgfSkIy1pSE0qUpKC5CQjKUlITCISkoD4BBOPuMQhNrGISQx+5zd+
5Rd+5id+5Ae+5zu+5Rui8zXR+Iov+YLP+YyofMonRCEQiCzwB/Ged/wf0WHe
8i//8IbXvOIlf/MXf/IHL3jOM57yhMc84iEPuM897nKH29ziJje4zjWucoXL
XOIiFyJ+DOc4yxlOc4qTnOA4xzjKEQ5ziIMcYD/72MsedrOLnexgO9vYyhY2
s4mNbGA961jLGlazipWsYDnLWMoSFrOIhSxgPvOYyxxmM4uZzGA605jKFCYz
iYlMYDzjGMsYRjOKkYxgOMMYyhAGM4iBDKA//ehLH3rTi570oDvd6EoXOtOJ
jnSgPe1oSxta04qWhBNGC5rTjKY0oTGNaEgD6lOPUOpSh9rUoiY1qE41qlKF
ylSiIhUoTwjlKEsZSlOKkpSgOMUoShEKU4iCFCA/+chLHnKTi5zkIDvZyEoW
MpOJjGQgPelISxpSk4qUpCA5yUhKEhKTiIQkID7BxCMucYhNLGISg7e6+RFx
3fAA
          "]]]}, {}, {}}, {{}, {}, 
       {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], 
        AbsoluteThickness[1.6], Dashing[{0, Small}], LineBox[CompressedData["
1:eJwl1WV7EAQUBeANERBUQinJ0d3d3Tm6YXSObhjd3d3d3d3d3THaACUUVHx5
/PCe5/6Bc25QSGhwh8CAgIAr4iM/uROQkEQkJglJCSIZyUlBSlKRmjSkJR3p
yUBGMpGZLGQlG9nJQU5ykZs85CUf+SlAQQpRmCIUpRjFKUFJSlGaMpSlHOWp
QEUqUZkqVCWYalSnBjWpRW3qUJd61KcBDWlEY5oQQlOa0ZwWtKQVrWlDW9rR
ng6E0pFOdKYLXelGd3rQk170pg996Ud/whjAQAYxmCEMZRjDGcFIRjGaMYxl
HOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGYJSxlGctZwUpWsZo1rGUd
69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgjHOUYxznBSU5xmjOc5Rzn
ucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7xmHCe8JRnPOcFL3nFz/zCr/zG
a97wO3/wlne85wN/8hcf+cTf/MO/fCZANwOJwFdE5GsiEZkofENUovEt3/E9
0YlBTGLxAz8SmzjEJR7xv/SfBCQkEYlJQlKCSEZyUpCSVKQmDWlJR3oykJFM
ZCYLWclGdnKQk1zkJg95yUd+ClCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQkUpU
pgpVCaYa1alBTWpRmzrUpR71aUBDGtGYJoTQlGY0pwUtaUVr2tCWdrTny7iG
0pFOdKYLXelGd3rQk170pg996Ud/whjAQAYxmCEMZRjDGcFIRjGaMYxlHOOZ
wEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGYJSxlGctZwUpWsZo1rGUd69nA
RjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgjHOUYxznBSU5xmjOc5RznucBF
LnE58P9/d5VrXOcGN7nFbe5wl3vc5wEPecRjwnnCU57xnBe85BWf+A96Yu/5

         "]]}}, 
      {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], 
       AbsoluteThickness[1.6], Dashing[{0, Small}]}, {
       {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], 
        AbsoluteThickness[1.6], Dashing[{0, Small}]}, {}}, {
       {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], 
        AbsoluteThickness[1.6], Dashing[{0, Small}]}, {}}}], {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*SuperscriptBox[\\(CD19\\), \\(+\\)]\\) tumor cells\"", 
      TraditionalForm], None}, {
     FormBox["\"Days post CAR infusion\"", TraditionalForm], None}},
  FrameStyle->Directive[
    Thickness[0.0025], 
    GrayLevel[0]],
  FrameTicks->{{{{0., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {9.210340371976184, 
       FormBox[
        TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {13.815510557964274`, 
       FormBox[
        TemplateBox[{"10", "6"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {18.420680743952367`, 
       FormBox[
        TemplateBox[{"10", "8"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {23.025850929940457`, 
       FormBox[
        TemplateBox[{"10", "10"}, "Superscript", SyntaxForm -> 
         SuperscriptBox], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.907755278982137, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {11.512925464970229`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {16.11809565095832, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {20.72326583694641, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {25.328436022934504`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {27.631021115928547`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {28.03648622403671, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {28.324168296488494`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, {}}, {All, None}},
  GridLines->NCache[{{}, {
      Log[100]}}, {{}, {4.605170185988092}}],
  GridLinesStyle->Directive[
    Dashing[{Small, Small}], 
    GrayLevel[0], 
    Thickness[0.002]],
  ImageSize->500,
  LabelStyle->{
    GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"},
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{0., 210.}, {0, 
      Log[200000000000]}}, {{0., 210.}, {0, 26.021583203494448`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, 
    Charting`ScaledTicks[{Log, Exp}]}]], "Output",
 CellChangeTimes->{{3.770732890029153*^9, 3.770732940699375*^9}, {
   3.770732989344425*^9, 3.770733054083425*^9}, {3.770733099429995*^9, 
   3.770733104753635*^9}, {3.770733147599535*^9, 3.770733201597439*^9}, {
   3.770733250242275*^9, 3.7707332570781517`*^9}, {3.783352649837665*^9, 
   3.78335266286065*^9}, {3.783352806698365*^9, 3.783352892572549*^9}, {
   3.7833529267177877`*^9, 3.783352996766053*^9}, {3.7833531419035177`*^9, 
   3.783353161466607*^9}, 3.783375931421639*^9, 3.7837766240236464`*^9, 
   3.784651505607307*^9, {3.784651559654745*^9, 
   3.784651592884575*^9}},ExpressionUUID->"1bab1646-280f-4bb5-9ab6-\
6f3f6254cf66"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<tumorTrajectories.pdf\>\""}], ",", "plotTrajectory", ",", 
   "\"\<PDF\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.78335299729189*^9, 
  3.783353016544037*^9}},ExpressionUUID->"7e4131c8-4ac2-45f9-a45c-\
5bc095c90713"],

Cell[BoxData["\<\"/Users/gregorykimmel/Dropbox/_Projects/01_CART/code/\
hybridModelRuns/tumorTrajectories.pdf\"\>"], "Output",
 CellChangeTimes->{3.7833530174249763`*^9, 3.783353163928441*^9, 
  3.783375934886076*^9, 
  3.783776628799993*^9},ExpressionUUID->"f9936122-6a9f-447d-a0cd-\
18b9fbfc8a56"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"4", ",", " ", "10", ",", "16", ",", "18"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.783352878988761*^9, 3.783352886080991*^9}, {
  3.783352979884116*^9, 
  3.783352980630109*^9}},ExpressionUUID->"d6c0af66-5c9c-43f8-9494-\
bcfd4430f6f5"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Figure", " ", "2", 
   RowBox[{"b", ":", " ", 
    RowBox[{
    "Durable", " ", "response", " ", "800", " ", "days", " ", "from", " ", 
     "infusion", " ", "as", " ", "a", " ", "function", " ", "of", " ", "CAR", 
     " ", "memory", " ", "frequency"}]}]}], "Subsection"]], "Input",
 CellChangeTimes->{{3.7833533981291313`*^9, 3.7833533981309357`*^9}, {
  3.783354676045148*^9, 
  3.783354705804831*^9}},ExpressionUUID->"b617615e-8655-49c0-8066-\
de9378156ca6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"This", " ", "module", " ", "creates", " ", "a", " ", "K"}], "-", 
    
    RowBox[{
    "M", " ", "curve", " ", "using", " ", "the", " ", "given", " ", 
     "filename"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dir", "=", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<runData/\>\""}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"makeSurvivalCurve", "[", "filename_", "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"data", ",", "patients", ",", "time", ",", "ci", ",", "S"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"Import", "[", 
         RowBox[{
          RowBox[{"dir", "<>", "filename"}], ",", "\"\<Data\>\""}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"patients", " ", "=", " ", 
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"4", ";;"}], "]"}], "]"}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "The", " ", "first", " ", "3", " ", "lines", " ", "contain", " ", 
         "parameter", " ", "info"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"time", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "We", " ", "now", " ", "loop", " ", "over", " ", "all", " ", 
         "patients", " ", "and", " ", "look", " ", "to", " ", "see", " ", 
         "when", " ", "progression", " ", "occurs", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
            "we", " ", "add", " ", "large", " ", "number", " ", "to", " ", 
             "cure", " ", "so", " ", "it", " ", "will", " ", "never", " ", 
             "show", " ", "progression", " ", "in", " ", "the", " ", "K"}], 
            "-", 
            RowBox[{"M", " ", "curve"}]}], ")"}], "."}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"n", "=", "1"}], ",", 
         RowBox[{"n", "\[LessEqual]", " ", 
          RowBox[{"Length", "[", "patients", "]"}]}], ",", 
         RowBox[{"n", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"patients", "[", 
             RowBox[{"[", 
              RowBox[{"n", ",", "2"}], "]"}], "]"}], "\[Equal]", 
            "\"\<cure\>\""}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"time", ",", 
             RowBox[{
              RowBox[{"patients", "[", 
               RowBox[{"[", 
                RowBox[{"n", ",", "1"}], "]"}], "]"}], "+", "10000"}]}], 
            "]"}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"time", ",", 
             RowBox[{"patients", "[", 
              RowBox[{"[", 
               RowBox[{"n", ",", "1"}], "]"}], "]"}]}], "]"}]}], "]"}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"ci", "=", 
        RowBox[{
         RowBox[{"0", "&"}], "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "time", "]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"S", "=", 
        RowBox[{"SurvivalModelFit", "[", 
         RowBox[{"EventData", "[", 
          RowBox[{"time", ",", "ci"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"time", ",", "ci", ",", "patients", ",", "S"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nStart", "=", "21"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nEnd", "=", "31"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nFiles", " ", "=", " ", 
     RowBox[{"nEnd", "-", "nStart", "+", "1"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"date", "=", "\"\<2019-11-20\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"FileExistsQ", "[", 
         RowBox[{"dir", "<>", "\"\<outputData_\>\"", "<>", 
          RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<_\>\"", "<>", 
          "date", "<>", "\"\<.txt\>\""}], "]"}], ",", 
        RowBox[{"nFiles", "=", 
         RowBox[{"n", "-", "nStart", "+", "1"}]}], ",", 
        RowBox[{"Break", "[", "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "nStart", ",", "100"}], "}"}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"memFracSurvivalCurves", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"makeSurvivalCurve", "[", 
         RowBox[{"\"\<outputData_\>\"", "<>", 
          RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<_\>\"", "<>", 
          "date", "<>", "\"\<.txt\>\""}], "]"}], "\[LeftDoubleBracket]", "4", 
        "\[RightDoubleBracket]"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"nStart", ",", "nEnd"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"memFracPFSrB065", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "-", "1"}], ")"}], " ", "0.1"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"memFracSurvivalCurves", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "[", "800", "]"}], ")"}]}], "}"}],
        "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "nFiles"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"nStart", "=", "12"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nEnd", "=", "22"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nFiles", " ", "=", " ", 
     RowBox[{"nEnd", "-", "nStart", "+", "1"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"date", "=", "\"\<2019-11-21\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"FileExistsQ", "[", 
         RowBox[{"dir", "<>", "\"\<outputData_\>\"", "<>", 
          RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<_\>\"", "<>", 
          "date", "<>", "\"\<.txt\>\""}], "]"}], ",", 
        RowBox[{"nFiles", "=", 
         RowBox[{"n", "-", "nStart", "+", "1"}]}], ",", 
        RowBox[{"Break", "[", "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "nStart", ",", "100"}], "}"}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"memFracSurvivalCurves", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"makeSurvivalCurve", "[", 
         RowBox[{"\"\<outputData_\>\"", "<>", 
          RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<_\>\"", "<>", 
          "date", "<>", "\"\<.txt\>\""}], "]"}], "\[LeftDoubleBracket]", "4", 
        "\[RightDoubleBracket]"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"nStart", ",", "nEnd"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"memFracPFSrB165", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "-", "1"}], ")"}], " ", "0.1"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"memFracSurvivalCurves", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "[", "800", "]"}], ")"}]}], "}"}],
        "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "nFiles"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"rBlegend", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\"\<\!\(\*SubscriptBox[\(r\), \(B\)]\) = \>\"", "<>", 
        RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\</day\>\""}], ")"}], 
      "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"0.065", ",", "0.165"}], "}"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "This", " ", "function", " ", "makes", " ", "a", " ", "survival", " ", 
     "curve", " ", "as", " ", "a", " ", "function", " ", "of", " ", "the", 
     " ", "memory", " ", "fraction"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"L1", "[", 
      RowBox[{"SurvivalCurve_", ",", "c_", ",", "i_"}], "]"}], ":=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"SurvivalCurve", ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.035"}], ",", "1.035"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.075"}], ",", "1.075"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"GridLines", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "}"}], ",", 
            RowBox[{"{", "1.0", "}"}]}], "}"}]}], ","}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"c", ",", 
          RowBox[{"PointSize", "\[Rule]", "0.025"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"SwatchLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"rBlegend", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "}"}], ",", 
            RowBox[{"LegendMarkerSize", "\[Rule]", "10"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}]}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"0.2", ",", "0.75"}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "}"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"AspectRatio", "\[Rule]", "0.325"}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"ImageSize", "\[Rule]", "500"}], "\[IndentingNewLine]", ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.0035", "]"}], ",", "Black"}], "]"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FontSize", "\[Rule]", "18"}], ",", "Black", ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "}"}]}], 
       "\[IndentingNewLine]", ",", " ", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Fraction of CAR memory cells at infusion\>\"", ",", 
          "\"\<Probability of CR\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "0", ",", "0.2", ",", "0.4", ",", "0.6", ",", "0.8", ",", "1.0"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0.5", ",", "1.0", ",", 
            RowBox[{"{", 
             RowBox[{"0.25", ",", "\"\<\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.75", ",", "\"\<\>\""}], "}"}]}], "}"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.783353850787696*^9, 3.7833538674460297`*^9}, {
  3.7850948968940487`*^9, 3.785094972227029*^9}, {3.785095087441709*^9, 
  3.785095099432735*^9}, {3.785095147637389*^9, 3.785095174707906*^9}, {
  3.78509542158926*^9, 3.785095435481319*^9}, {3.785097339886797*^9, 
  3.785097492063142*^9}, {3.785098263191317*^9, 
  3.7850982964118147`*^9}},ExpressionUUID->"69cae7c3-bc73-4dcd-8611-\
98f9c1284a95"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(r\\), \\(B\\)]\\) = 0.065/day\"\>", 
   ",", "\<\"\\!\\(\\*SubscriptBox[\\(r\\), \\(B\\)]\\) = 0.165/day\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.785094978392378*^9, {3.785095088857418*^9, 3.785095101395503*^9}, {
   3.785095165748528*^9, 3.785095176246501*^9}, 3.785095438037696*^9, {
   3.7850973418484383`*^9, 3.78509736768745*^9}, 3.785097406735827*^9, {
   3.785097449058779*^9, 3.7850974942544117`*^9}, {3.785098265301694*^9, 
   3.785098298092239*^9}},ExpressionUUID->"3501ee1f-80e0-41ff-afc0-\
d17203c59c26"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CARMemPFS", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"L1", "[", 
      RowBox[{"memFracPFSrB065", ",", 
       RowBox[{
        RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", "0.6", "]"}],
        ",", "1"}], "]"}], ",", 
     RowBox[{"L1", "[", 
      RowBox[{"memFracPFSrB165", ",", 
       RowBox[{"Opacity", "[", 
        RowBox[{"0.85", ",", 
         RowBox[{
          RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", "0.3", 
          "]"}]}], "]"}], ",", "2"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fig2mem", "=", 
  RowBox[{"Show", "[", "CARMemPFS", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<CARmem_Prob01.pdf\>\""}], ",", "fig2mem", ",", "\"\<PDF\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.783353891546816*^9, 3.7833539014482937`*^9}, {
  3.783353939298684*^9, 3.7833539687281227`*^9}, {3.783354016133679*^9, 
  3.7833540500147057`*^9}, {3.783354599833543*^9, 3.7833546629068937`*^9}, {
  3.785094989020434*^9, 3.785094989337688*^9}, {3.7850950576614*^9, 
  3.7850950710139008`*^9}, {3.7850954648098087`*^9, 
  3.7850954649664707`*^9}},ExpressionUUID->"4dcbabbc-f426-4c51-b43c-\
f70ca55acaaa"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {
       {RGBColor[0.6660832, 0.7430418, 0.32293540000000004`], PointSize[
        0.025], AbsoluteThickness[1.6], 
        PointBox[{{0., 0.}, {0.1, 0.16599999999999948`}, {0.2, 
         0.2499999999999994}, {0.30000000000000004`, 0.33799999999999947`}, {
         0.4, 0.43199999999999955`}, {0.5, 0.49199999999999955`}, {
         0.6000000000000001, 0.5439999999999996}, {0.7000000000000001, 
         0.5639999999999996}, {0.8, 0.6279999999999997}, {0.9, 
         0.6379999999999997}, {1., 0.6689999999999997}}]}, {
        {RGBColor[0.6660832, 0.7430418, 0.32293540000000004`], PointSize[
         0.025], AbsoluteThickness[1.6]}, {}}, {
        {RGBColor[0.6660832, 0.7430418, 0.32293540000000004`], PointSize[
         0.025], AbsoluteThickness[1.6]}, {}}}, {{}, {}}}, {{}, {
       {RGBColor[0.2979596, 0.5657928, 0.7522386000000001], PointSize[0.025], 
        AbsoluteThickness[1.6], Opacity[0.85], 
        PointBox[{{0., 0.}, {0.1, 0.14399999999999946`}, {0.2, 
         0.2049999999999995}, {0.30000000000000004`, 0.2809999999999994}, {
         0.4, 0.3849999999999995}, {0.5, 0.45199999999999957`}, {
         0.6000000000000001, 0.49499999999999955`}, {0.7000000000000001, 
         0.49699999999999955`}, {0.8, 0.5609999999999996}, {0.9, 
         0.6259999999999997}, {1., 0.6649999999999997}}]}, {
        {RGBColor[0.2979596, 0.5657928, 0.7522386000000001], PointSize[0.025],
          AbsoluteThickness[1.6], Opacity[0.85]}, {}}, {
        {RGBColor[0.2979596, 0.5657928, 0.7522386000000001], PointSize[0.025],
          AbsoluteThickness[1.6], Opacity[0.85]}, {}}}, {{}, {}}}}, InsetBox[
     TagBox[GridBox[{
        {
         FormBox[
          
          TemplateBox[{
           "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(B\\)]\\) = 0.065/day\""},
           "SwatchLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6660832, 0.7430418, 0.32293540000000004`], 
                    PointSize -> 0.025], 
                    DiskBox[{5, 5}, {5, 5}]}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.148] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"}, 
             Background -> Automatic, StripOnInput -> False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"SwatchLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6660832, 0.7430418, 0.32293540000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4440554666666667, 0.4953612, 0.2152902666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.6660832`", ",", "0.7430418`", ",", 
                    "0.32293540000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6660832, 0.7430418, 0.32293540000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6660832, 0.7430418, 0.32293540000000004`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"PointSize", "\[Rule]", "0.025`"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "\"Bubble\""}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}],
                 ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", "10"}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          
          TemplateBox[{
           "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(B\\)]\\) = 0.165/day\""},
           "SwatchLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2979596, 0.5657928, 0.7522386000000001], 
                    Opacity[0.85], PointSize -> 0.025], 
                    DiskBox[{5, 5}, {5, 5}]}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.148] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"}, 
             Background -> Automatic, StripOnInput -> False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"SwatchLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2979596, 0.5657928, 0.7522386000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.19863973333333335`, 0.3771952, 0.5014924000000001], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2979596`", ",", "0.5657928`", ",", 
                    "0.7522386000000001`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2979596, 0.5657928, 0.7522386000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> A\
utomatic, Method -> "Preemptive"], 
                    RGBColor[0.2979596, 0.5657928, 0.7522386000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"Opacity", "[", "0.85`", "]"}], ",", 
                    RowBox[{"PointSize", "\[Rule]", "0.025`"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "\"Bubble\""}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}],
                 ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", "10"}]}], "]"}]& )],
          TraditionalForm]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], Scaled[{0.2, 0.75}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->0.325,
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, False}, {True, False}},
   FrameLabel->{{
      FormBox["\"Probability of CR\"", TraditionalForm], None}, {
      FormBox[
      "\"Fraction of CAR memory cells at infusion\"", TraditionalForm], None}},
   FrameStyle->Directive[
     Thickness[0.0035], 
     GrayLevel[0]],
   FrameTicks->{{{{0, 
        FormBox["0", TraditionalForm]}, {0.5, 
        FormBox["0.5`", TraditionalForm]}, {1., 
        FormBox["1.`", TraditionalForm]}, {0.25, 
        FormBox["\"\"", TraditionalForm]}, {0.75, 
        FormBox["\"\"", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {0.5, 
        FormBox["0.5`", TraditionalForm]}, {1., 
        FormBox["1.`", TraditionalForm]}, {0.25, 
        FormBox["\"\"", TraditionalForm]}, {0.75, 
        FormBox["\"\"", TraditionalForm]}}}, {{{0, 
        FormBox["0", TraditionalForm]}, {0.2, 
        FormBox["0.2`", TraditionalForm]}, {0.4, 
        FormBox["0.4`", TraditionalForm]}, {0.6, 
        FormBox["0.6`", TraditionalForm]}, {0.8, 
        FormBox["0.8`", TraditionalForm]}, {1., 
        FormBox["1.`", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {0.2, 
        FormBox["0.2`", TraditionalForm]}, {0.4, 
        FormBox["0.4`", TraditionalForm]}, {0.6, 
        FormBox["0.6`", TraditionalForm]}, {0.8, 
        FormBox["0.8`", TraditionalForm]}, {1., 
        FormBox["1.`", TraditionalForm]}}}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->500,
   LabelStyle->{
     GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"},
   Method->{
    "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{-0.035, 1.035}, {-0.075, 1.075}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {{{
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[0.6660832, 0.7430418, 0.32293540000000004`], PointSize -> 
           0.025], 
          
          Point[{{0., 0.}, {0.1, 0.16599999999999948`}, {0.2, 
           0.2499999999999994}, {0.30000000000000004`, 
           0.33799999999999947`}, {0.4, 0.43199999999999955`}, {0.5, 
           0.49199999999999955`}, {0.6000000000000001, 0.5439999999999996}, {
           0.7000000000000001, 0.5639999999999996}, {0.8, 
           0.6279999999999997}, {0.9, 0.6379999999999997}, {1., 
           0.6689999999999997}}]}}, {{
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[0.6660832, 0.7430418, 0.32293540000000004`], PointSize -> 
           0.025]}, {}}, {{
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[0.6660832, 0.7430418, 0.32293540000000004`], PointSize -> 
           0.025]}, {}}}, {{}, {}}}, {{}, {{{
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[0.2979596, 0.5657928, 0.7522386000000001], 
           Opacity[0.85], PointSize -> 0.025], 
          
          Point[{{0., 0.}, {0.1, 0.14399999999999946`}, {0.2, 
           0.2049999999999995}, {0.30000000000000004`, 0.2809999999999994}, {
           0.4, 0.3849999999999995}, {0.5, 0.45199999999999957`}, {
           0.6000000000000001, 0.49499999999999955`}, {0.7000000000000001, 
           0.49699999999999955`}, {0.8, 0.5609999999999996}, {0.9, 
           0.6259999999999997}, {1., 0.6649999999999997}}]}}, {{
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[0.2979596, 0.5657928, 0.7522386000000001], 
           Opacity[0.85], PointSize -> 0.025]}, {}}, {{
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[0.2979596, 0.5657928, 0.7522386000000001], 
           Opacity[0.85], PointSize -> 0.025]}, {}}}, {{}, {}}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      0.325, Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{True, False}, {True, False}}, 
      FrameLabel -> {{"Probability of CR", None}, {
        "Fraction of CAR memory cells at infusion", None}}, FrameStyle -> 
      Directive[
        Thickness[0.0035], 
        GrayLevel[0]], 
      FrameTicks -> {{{0, 0.5, 1., {0.25, ""}, {0.75, ""}}, {
         0, 0.5, 1., {0.25, ""}, {0.75, ""}}}, {{0, 0.2, 0.4, 0.6, 0.8, 1.}, {
         0, 0.2, 0.4, 0.6, 0.8, 1.}}}, GridLines -> {None, None}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 500, LabelStyle -> {
        GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"}, 
      Method -> {
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{-0.035, 1.035}, {-0.075, 1.075}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       SwatchLegend[{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0.2979596, 0.5657928, 0.7522386000000001], 
          Opacity[0.85], PointSize -> 0.025]}, {
        "\!\(\*SubscriptBox[\(r\), \(B\)]\) = 0.165/day"}, LegendMarkers -> 
        "Bubble", LabelStyle -> {
          GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"}, LegendLayout -> 
        "Column", LegendMarkerSize -> 10]]], {0.2, 0.75}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.7850949961270733`*^9, {3.78509505801297*^9, 3.7850950713016577`*^9}, 
   3.785095104553124*^9, {3.785095168061854*^9, 3.785095178500987*^9}, {
   3.785095442369179*^9, 3.785095465900949*^9}, {3.785097343656571*^9, 
   3.78509737098512*^9}, 3.785097408475173*^9, {3.785097451427286*^9, 
   3.7850974961768093`*^9}, 
   3.785098300863051*^9},ExpressionUUID->"4248321d-3d08-4536-98cf-\
0220b0196335"],

Cell[BoxData["\<\"/Users/altrock/Dropbox/Projects_Dropbox/CART/code/\
hybridModelRuns/CARmem_Prob01.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.7850949961270733`*^9, {3.78509505801297*^9, 3.7850950713016577`*^9}, 
   3.785095104553124*^9, {3.785095168061854*^9, 3.785095178500987*^9}, {
   3.785095442369179*^9, 3.785095465900949*^9}, {3.785097343656571*^9, 
   3.78509737098512*^9}, 3.785097408475173*^9, {3.785097451427286*^9, 
   3.7850974961768093`*^9}, 
   3.785098301110421*^9},ExpressionUUID->"c72a7867-940a-4420-97f0-\
f525961f637f"]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{"Figure", " ", "2", 
   RowBox[{"c", ":", " ", 
    RowBox[{
    "Durable", " ", "response", " ", "800", " ", "days", " ", "from", " ", 
     "infusion", " ", "as", " ", "a", " ", "function", " ", "of", " ", 
     "wildtype"}]}]}], "Subsection"]], "Input",
 CellChangeTimes->{{3.7833533981291313`*^9, 3.7833533981309357`*^9}, {
  3.783354676045148*^9, 3.783354705804831*^9}, {3.783374674729336*^9, 
  3.783374703172228*^9}},ExpressionUUID->"0e2a973a-9a9d-4f3d-92a9-\
b98ca135b75a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"This", " ", "module", " ", "creates", " ", "a", " ", "K"}], "-", 
    
    RowBox[{
    "M", " ", "curve", " ", "using", " ", "the", " ", "given", " ", 
     "filename"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dir", "=", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<runData/\>\""}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"makeSurvivalCurve", "[", "filename_", "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"data", ",", "patients", ",", "time", ",", "ci", ",", "S"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"Import", "[", 
         RowBox[{
          RowBox[{"dir", "<>", "filename"}], ",", "\"\<Data\>\""}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"patients", " ", "=", " ", 
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"4", ";;"}], "]"}], "]"}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "The", " ", "first", " ", "3", " ", "lines", " ", "contain", " ", 
         "parameter", " ", "info"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"time", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "We", " ", "now", " ", "loop", " ", "over", " ", "all", " ", 
         "patients", " ", "and", " ", "look", " ", "to", " ", "see", " ", 
         "when", " ", "progression", " ", "occurs", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
            "we", " ", "add", " ", "large", " ", "number", " ", "to", " ", 
             "cure", " ", "so", " ", "it", " ", "will", " ", "never", " ", 
             "show", " ", "progression", " ", "in", " ", "the", " ", "K"}], 
            "-", 
            RowBox[{"M", " ", "curve"}]}], ")"}], "."}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"n", "=", "1"}], ",", 
         RowBox[{"n", "\[LessEqual]", " ", 
          RowBox[{"Length", "[", "patients", "]"}]}], ",", 
         RowBox[{"n", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"patients", "[", 
             RowBox[{"[", 
              RowBox[{"n", ",", "2"}], "]"}], "]"}], "\[Equal]", 
            "\"\<cure\>\""}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"time", ",", 
             RowBox[{
              RowBox[{"patients", "[", 
               RowBox[{"[", 
                RowBox[{"n", ",", "1"}], "]"}], "]"}], "+", "10000"}]}], 
            "]"}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"time", ",", 
             RowBox[{"patients", "[", 
              RowBox[{"[", 
               RowBox[{"n", ",", "1"}], "]"}], "]"}]}], "]"}]}], "]"}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"ci", "=", 
        RowBox[{
         RowBox[{"0", "&"}], "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "time", "]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"S", "=", 
        RowBox[{"SurvivalModelFit", "[", 
         RowBox[{"EventData", "[", 
          RowBox[{"time", ",", "ci"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"time", ",", "ci", ",", "patients", ",", "S"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"rB", " ", "=", " ", "0.065"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nStart", "=", "13"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nEnd", "=", "20"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nFiles", " ", "=", " ", 
     RowBox[{"nEnd", "-", "nStart", "+", "1"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"date", "=", "\"\<2019-11-20\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"FileExistsQ", "[", 
         RowBox[{"dir", "<>", "\"\<outputData_\>\"", "<>", 
          RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<_\>\"", "<>", 
          "date", "<>", "\"\<.txt\>\""}], "]"}], ",", 
        RowBox[{"nFiles", "=", 
         RowBox[{"n", "-", "nStart", "+", "1"}]}], ",", 
        RowBox[{"Break", "[", "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "nStart", ",", "100"}], "}"}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WTsurvivalCurves", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"makeSurvivalCurve", "[", 
         RowBox[{"\"\<outputData_\>\"", "<>", 
          RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<_\>\"", "<>", 
          "date", "<>", "\"\<.txt\>\""}], "]"}], "\[LeftDoubleBracket]", "4", 
        "\[RightDoubleBracket]"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"nStart", ",", "nEnd"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WTPFSrB065", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"6", "#"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"WTsurvivalCurves", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "[", "800", "]"}], ")"}]}], "}"}],
        "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "nFiles"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{"(*", " ", 
    RowBox[{"rB", " ", "=", " ", "0.165"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nStart", "=", "34"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nEnd", "=", "38"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nFiles", " ", "=", " ", 
     RowBox[{"nEnd", "-", "nStart", "+", "1"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"date", "=", "\"\<2019-11-21\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"FileExistsQ", "[", 
         RowBox[{"dir", "<>", "\"\<outputData_\>\"", "<>", 
          RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<_\>\"", "<>", 
          "date", "<>", "\"\<.txt\>\""}], "]"}], ",", 
        RowBox[{"nFiles", "=", 
         RowBox[{"n", "-", "nStart", "+", "1"}]}], ",", 
        RowBox[{"Break", "[", "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "nStart", ",", "100"}], "}"}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WTsurvivalCurves", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"makeSurvivalCurve", "[", 
         RowBox[{"\"\<outputData_\>\"", "<>", 
          RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<_\>\"", "<>", 
          "date", "<>", "\"\<.txt\>\""}], "]"}], "\[LeftDoubleBracket]", "4", 
        "\[RightDoubleBracket]"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"nStart", ",", "nEnd"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WTPFSrB165", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"6", "#"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"WTsurvivalCurves", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "[", "800", "]"}], ")"}]}], "}"}],
        "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "nFiles"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{"rBlegend", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\"\<\!\(\*SubscriptBox[\(r\), \(B\)]\) = \>\"", "<>", 
        RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\</day\>\""}], ")"}], 
      "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"0.065", ",", "0.165"}], "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "This", " ", "function", " ", "makes", " ", "a", " ", "survival", " ", 
     "curve", " ", "as", " ", "a", " ", "function", " ", "of", " ", "the", 
     " ", "memory", " ", "fraction"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"L2", "[", 
      RowBox[{"SurvivalCurve_", ",", "c_", ",", "i_"}], "]"}], ":=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"SurvivalCurve", ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"4", ",", "32.0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.075"}], ",", "1.075"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"c", ",", 
          RowBox[{"PointSize", "\[Rule]", "0.025"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"SwatchLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"rBlegend", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "}"}], ",", 
            RowBox[{"LegendMarkerSize", "\[Rule]", "10"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}]}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"0.8", ",", "0.75"}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "}"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"AspectRatio", "\[Rule]", "0.325"}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"ImageSize", "\[Rule]", "500"}], "\[IndentingNewLine]", ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.0035", "]"}], ",", "Black"}], "]"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FontSize", "\[Rule]", "18"}], ",", "Black", ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "}"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Normal T cells/\[Micro]L at infusion\>\"", ",", 
          "\"\<Probability of CR\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"6", ",", "12", ",", "18", ",", "24", ",", "30"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0.5", ",", "1.0", ",", 
            RowBox[{"{", 
             RowBox[{"0.25", ",", "\"\<\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.75", ",", "\"\<\>\""}], "}"}]}], "}"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.783353698925889*^9, 3.7833536994142723`*^9}, {
   3.783354236018262*^9, 3.7833542362231627`*^9}, {3.783375163451123*^9, 
   3.7833751684099913`*^9}, {3.7833753169423656`*^9, 
   3.7833753337236567`*^9}, {3.7833755291304407`*^9, 3.783375529500412*^9}, {
   3.7850952882977657`*^9, 3.785095293470729*^9}, {3.785095324320757*^9, 
   3.7850953971294937`*^9}, 3.7850966173014717`*^9, {3.785097509501294*^9, 
   3.785097533631987*^9}, {3.7850975642679987`*^9, 3.785097593539274*^9}, {
   3.785098310676024*^9, 
   3.785098319653656*^9}},ExpressionUUID->"9bb11b80-4072-4ad4-b40c-\
5e2fcc1e5869"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(r\\), \\(B\\)]\\) = 0.065/day\"\>", 
   ",", "\<\"\\!\\(\\*SubscriptBox[\\(r\\), \\(B\\)]\\) = 0.165/day\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.785095300309393*^9, {3.78509533635395*^9, 3.785095398464003*^9}, 
   3.785096620374733*^9, {3.785097513935049*^9, 3.785097535423287*^9}, 
   3.785097565737879*^9, 3.785097595751938*^9, {3.78509831271974*^9, 
   3.7850983257264957`*^9}},ExpressionUUID->"29f2a05d-349d-4769-a9c0-\
4dd7854a11e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"WTPFS", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"L2", "[", 
      RowBox[{"WTPFSrB065", ",", 
       RowBox[{
        RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", "0.15", 
        "]"}], ",", "1"}], "]"}], ",", 
     RowBox[{"L2", "[", 
      RowBox[{"WTPFSrB165", ",", 
       RowBox[{"Opacity", "[", 
        RowBox[{"0.5", ",", 
         RowBox[{
          RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", "0.95", 
          "]"}]}], "]"}], ",", "2"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fig2WT", "=", 
  RowBox[{"Show", "[", "WTPFS", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<WTcell_Prob01.pdf\>\""}], ",", "fig2WT", ",", "\"\<PDF\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.783353891546816*^9, 3.7833539014482937`*^9}, {
   3.783353939298684*^9, 3.7833539687281227`*^9}, {3.783354016133679*^9, 
   3.7833540500147057`*^9}, {3.783354599833543*^9, 3.7833546629068937`*^9}, {
   3.783374792048052*^9, 3.7833748012359343`*^9}, {3.7833748322562647`*^9, 
   3.783374841968238*^9}, {3.783375367590562*^9, 3.783375384476379*^9}, 
   3.783375458537961*^9, {3.783375566135367*^9, 3.783375566289991*^9}, {
   3.783375673357445*^9, 3.783375689692556*^9}, {3.7850952570535793`*^9, 
   3.785095257357541*^9}, {3.785095478827669*^9, 
   3.785095479052074*^9}},ExpressionUUID->"e57fd82e-1646-4033-937f-\
7191efbbab85"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {
       {RGBColor[0.2480688, 0.2797284, 0.7879248], PointSize[0.025], 
        AbsoluteThickness[1.6], 
        PointBox[{{6., 0.48499999999999954`}, {12., 0.15899999999999948`}, {
         18., 0.046999999999999834`}, {24., 0.010999999999999966`}, {30., 
         0.007999999999999974}, {36., 0.}, {42., 0.}, {48., 0.}}]}, {
        {RGBColor[0.2480688, 0.2797284, 0.7879248], PointSize[0.025], 
         AbsoluteThickness[1.6]}, {}}, {
        {RGBColor[0.2480688, 0.2797284, 0.7879248], PointSize[0.025], 
         AbsoluteThickness[1.6]}, {}}}, {{}, {}}}, {{}, {
       {RGBColor[0.8739574, 0.2607876000000001, 0.15481040000000004`], 
        PointSize[0.025], AbsoluteThickness[1.6], Opacity[0.5], 
        PointBox[{{6., 0.40699999999999953`}, {12., 0.09799999999999963}, {
         18., 0.020999999999999935`}, {24., 0.011999999999999964`}, {30., 
         0.002999999999999991}}]}, {
        {RGBColor[0.8739574, 0.2607876000000001, 0.15481040000000004`], 
         PointSize[0.025], AbsoluteThickness[1.6], Opacity[0.5]}, {}}, {
        {RGBColor[0.8739574, 0.2607876000000001, 0.15481040000000004`], 
         PointSize[0.025], AbsoluteThickness[1.6], Opacity[
         0.5]}, {}}}, {{}, {}}}}, InsetBox[
     TagBox[GridBox[{
        {
         FormBox[
          
          TemplateBox[{
           "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(B\\)]\\) = 0.065/day\""},
           "SwatchLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2480688, 0.2797284, 0.7879248], PointSize -> 
                    0.025], 
                    DiskBox[{5, 5}, {5, 5}]}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.148] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"}, 
             Background -> Automatic, StripOnInput -> False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"SwatchLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2480688, 0.2797284, 0.7879248], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.1653792, 0.1864856, 0.5252832000000001], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.2480688`", ",", "0.2797284`", ",", 
                    "0.7879248`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2480688, 0.2797284, 0.7879248]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2480688, 0.2797284, 0.7879248], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"PointSize", "\[Rule]", "0.025`"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "\"Bubble\""}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}],
                 ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", "10"}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          
          TemplateBox[{
           "\"\\!\\(\\*SubscriptBox[\\(r\\), \\(B\\)]\\) = 0.165/day\""},
           "SwatchLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8739574, 0.2607876000000001, 0.15481040000000004`], 
                    Opacity[0.5], PointSize -> 0.025], 
                    DiskBox[{5, 5}, {5, 5}]}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.148] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"}, 
             Background -> Automatic, StripOnInput -> False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"SwatchLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8739574, 0.2607876000000001, 0.15481040000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5826382666666667, 0.17385840000000008`, 
                    0.10320693333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.8739574`", ",", "0.2607876000000001`", ",", 
                    "0.15481040000000004`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8739574, 0.2607876000000001, 
                    0.15481040000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8739574, 0.2607876000000001, 0.15481040000000004`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"PointSize", "\[Rule]", "0.025`"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "\"Bubble\""}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}],
                 ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", "10"}]}], "]"}]& )],
          TraditionalForm]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], Scaled[{0.8, 0.75}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->0.325,
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{4., 0},
   DisplayFunction->Identity,
   Frame->{{True, False}, {True, False}},
   FrameLabel->{{
      FormBox["\"Probability of CR\"", TraditionalForm], None}, {
      FormBox["\"Normal T cells/\[Micro]L at infusion\"", TraditionalForm], 
      None}},
   FrameStyle->Directive[
     Thickness[0.0035], 
     GrayLevel[0]],
   FrameTicks->{{{{0, 
        FormBox["0", TraditionalForm]}, {0.5, 
        FormBox["0.5`", TraditionalForm]}, {1., 
        FormBox["1.`", TraditionalForm]}, {0.25, 
        FormBox["\"\"", TraditionalForm]}, {0.75, 
        FormBox["\"\"", TraditionalForm]}}, {{0, 
        FormBox["0", TraditionalForm]}, {0.5, 
        FormBox["0.5`", TraditionalForm]}, {1., 
        FormBox["1.`", TraditionalForm]}, {0.25, 
        FormBox["\"\"", TraditionalForm]}, {0.75, 
        FormBox["\"\"", TraditionalForm]}}}, {{{6, 
        FormBox["6", TraditionalForm]}, {12, 
        FormBox["12", TraditionalForm]}, {18, 
        FormBox["18", TraditionalForm]}, {24, 
        FormBox["24", TraditionalForm]}, {30, 
        FormBox["30", TraditionalForm]}}, {{6, 
        FormBox["6", TraditionalForm]}, {12, 
        FormBox["12", TraditionalForm]}, {18, 
        FormBox["18", TraditionalForm]}, {24, 
        FormBox["24", TraditionalForm]}, {30, 
        FormBox["30", TraditionalForm]}}}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->500,
   LabelStyle->{
     GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"},
   Method->{
    "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{4, 32.}, {-0.075, 1.075}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {{{
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[0.2480688, 0.2797284, 0.7879248], PointSize -> 0.025], 
          
          Point[{{6., 0.48499999999999954`}, {12., 0.15899999999999948`}, {
           18., 0.046999999999999834`}, {24., 0.010999999999999966`}, {30., 
           0.007999999999999974}, {36., 0.}, {42., 0.}, {48., 0.}}]}}, {{
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[0.2480688, 0.2797284, 0.7879248], PointSize -> 
           0.025]}, {}}, {{
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[0.2480688, 0.2797284, 0.7879248], PointSize -> 
           0.025]}, {}}}, {{}, {}}}, {{}, {{{
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[0.8739574, 0.2607876000000001, 0.15481040000000004`], 
           Opacity[0.5], PointSize -> 0.025], 
          
          Point[{{6., 0.40699999999999953`}, {12., 0.09799999999999963}, {18.,
            0.020999999999999935`}, {24., 0.011999999999999964`}, {30., 
           0.002999999999999991}}]}}, {{
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[0.8739574, 0.2607876000000001, 0.15481040000000004`], 
           Opacity[0.5], PointSize -> 0.025]}, {}}, {{
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[0.8739574, 0.2607876000000001, 0.15481040000000004`], 
           Opacity[0.5], PointSize -> 0.025]}, {}}}, {{}, {}}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      0.325, Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {4., 0}, DisplayFunction :> Identity, 
      Frame -> {{True, False}, {True, False}}, 
      FrameLabel -> {{"Probability of CR", None}, {
        "Normal T cells/\[Micro]L at infusion", None}}, FrameStyle -> 
      Directive[
        Thickness[0.0035], 
        GrayLevel[0]], 
      FrameTicks -> {{{0, 0.5, 1., {0.25, ""}, {0.75, ""}}, {
         0, 0.5, 1., {0.25, ""}, {0.75, ""}}}, {{6, 12, 18, 24, 30}, {6, 12, 
        18, 24, 30}}}, GridLines -> {None, None}, GridLinesStyle -> 
      Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 500, LabelStyle -> {
        GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"}, 
      Method -> {
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{4, 32.}, {-0.075, 1.075}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       SwatchLegend[{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0.8739574, 0.2607876000000001, 0.15481040000000004`], 
          Opacity[0.5], PointSize -> 0.025]}, {
        "\!\(\*SubscriptBox[\(r\), \(B\)]\) = 0.165/day"}, LegendMarkers -> 
        "Bubble", LabelStyle -> {
          GrayLevel[0], FontSize -> 18, FontFamily -> "Arial"}, LegendLayout -> 
        "Column", LegendMarkerSize -> 10]]], {0.8, 0.75}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.783353944769589*^9, 3.7833539709564323`*^9}, {
   3.7833540182969713`*^9, 3.783354052025071*^9}, {3.78335460759015*^9, 
   3.783354625072393*^9}, 3.783354665332943*^9, 3.7833748051100397`*^9, {
   3.783374838840711*^9, 3.783374844291888*^9}, 3.783375429483176*^9, {
   3.7833754605164003`*^9, 3.7833754730825157`*^9}, {3.783375517294829*^9, 
   3.783375536309256*^9}, 3.78337556815829*^9, {3.783375681275887*^9, 
   3.783375692228498*^9}, 3.783375759109743*^9, 3.785095304151293*^9, {
   3.785095340118754*^9, 3.78509540031973*^9}, 3.7850954795097218`*^9, 
   3.7850966233859663`*^9, {3.785097518907159*^9, 3.7850975379982243`*^9}, 
   3.785097568131793*^9, 3.785097598321533*^9, {3.785098314988162*^9, 
   3.7850983291578608`*^9}},ExpressionUUID->"01cdcc36-3192-4edd-9ae8-\
6cb215057a1e"],

Cell[BoxData["\<\"/Users/altrock/Dropbox/Projects_Dropbox/CART/code/\
hybridModelRuns/WTcell_Prob01.pdf\"\>"], "Output",
 CellChangeTimes->{{3.783353944769589*^9, 3.7833539709564323`*^9}, {
   3.7833540182969713`*^9, 3.783354052025071*^9}, {3.78335460759015*^9, 
   3.783354625072393*^9}, 3.783354665332943*^9, 3.7833748051100397`*^9, {
   3.783374838840711*^9, 3.783374844291888*^9}, 3.783375429483176*^9, {
   3.7833754605164003`*^9, 3.7833754730825157`*^9}, {3.783375517294829*^9, 
   3.783375536309256*^9}, 3.78337556815829*^9, {3.783375681275887*^9, 
   3.783375692228498*^9}, 3.783375759109743*^9, 3.785095304151293*^9, {
   3.785095340118754*^9, 3.78509540031973*^9}, 3.7850954795097218`*^9, 
   3.7850966233859663`*^9, {3.785097518907159*^9, 3.7850975379982243`*^9}, 
   3.785097568131793*^9, 3.785097598321533*^9, {3.785098314988162*^9, 
   3.7850983294230757`*^9}},ExpressionUUID->"9b3ffd87-65ad-419e-987a-\
e0703df38341"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1048, 801},
WindowMargins->{{Automatic, 134}, {Automatic, 0}},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 27, \
2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 226, 4, 44, "Subsection", "ExpressionUUID" -> \
"cdd230be-83a0-4628-96c3-2736b3d72280"],
Cell[809, 28, 8012, 210, 591, "Input", "ExpressionUUID" -> \
"83073cb3-8c2c-450d-8f01-acb0cbdec9d1"],
Cell[CellGroupData[{
Cell[8846, 242, 1151, 26, 96, "Input", "ExpressionUUID" -> \
"1947d655-e9af-4670-88e0-e5285acf4423"],
Cell[10000, 270, 110144, 1924, 301, 72270, 1304, "CachedBoxData", "BoxData", \
"Output", "ExpressionUUID" -> "a3cd8986-771f-4865-ac54-78559dd2724b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120181, 2199, 307, 8, 32, "Input", "ExpressionUUID" -> \
"99efed72-039c-4d2a-ba13-5851f612cec2"],
Cell[120491, 2209, 238, 4, 32, "Output", "ExpressionUUID" -> \
"323fadaa-f69b-4b53-a252-7f0c0d795301"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120766, 2218, 1178, 20, 138, "Input", "ExpressionUUID" -> \
"686bd98b-5249-429b-a073-707edcfab6a6"],
Cell[121947, 2240, 97883, 1647, 336, "Output", "ExpressionUUID" -> \
"1bab1646-280f-4bb5-9ab6-6f3f6254cf66"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219867, 3892, 343, 9, 32, "Input", "ExpressionUUID" -> \
"7e4131c8-4ac2-45f9-a45c-5bc095c90713"],
Cell[220213, 3903, 299, 5, 32, "Output", "ExpressionUUID" -> \
"f9936122-6a9f-447d-a0cd-18b9fbfc8a56"]
}, Open  ]],
Cell[220527, 3911, 287, 6, 32, "Input", "ExpressionUUID" -> \
"d6c0af66-5c9c-43f8-9494-bcfd4430f6f5"],
Cell[220817, 3919, 498, 11, 40, "Input", "ExpressionUUID" -> \
"b617615e-8655-49c0-8066-de9378156ca6"],
Cell[CellGroupData[{
Cell[221340, 3934, 12253, 315, 1020, "Input", "ExpressionUUID" -> \
"69cae7c3-bc73-4dcd-8611-98f9c1284a95"],
Cell[233596, 4251, 597, 11, 32, "Output", "ExpressionUUID" -> \
"3501ee1f-80e0-41ff-afc0-d17203c59c26"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234230, 4267, 1299, 32, 96, "Input", "ExpressionUUID" -> \
"4dcbabbc-f426-4c51-b43c-f70ca55acaaa"],
Cell[235532, 4301, 23896, 488, 213, "Output", "ExpressionUUID" -> \
"4248321d-3d08-4536-98cf-0220b0196335"],
Cell[259431, 4791, 542, 9, 32, "Output", "ExpressionUUID" -> \
"c72a7867-940a-4420-97f0-f525961f637f"]
}, Open  ]],
Cell[259988, 4803, 516, 11, 40, "Input", "ExpressionUUID" -> \
"0e2a973a-9a9d-4f3d-92a9-b98ca135b75a"],
Cell[CellGroupData[{
Cell[260529, 4818, 12087, 309, 978, "Input", "ExpressionUUID" -> \
"9bb11b80-4072-4ad4-b40c-5e2fcc1e5869"],
Cell[272619, 5129, 520, 10, 32, "Output", "ExpressionUUID" -> \
"29f2a05d-349d-4769-a9c0-4dd7854a11e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273176, 5144, 1506, 35, 75, "Input", "ExpressionUUID" -> \
"e57fd82e-1646-4033-937f-7191efbbab85"],
Cell[274685, 5181, 23395, 480, 213, "Output", "ExpressionUUID" -> \
"01cdcc36-3192-4edd-9ae8-6cb215057a1e"],
Cell[298083, 5663, 932, 13, 32, "Output", "ExpressionUUID" -> \
"9b3ffd87-65ad-419e-987a-e0703df38341"]
}, Open  ]]
}, Open  ]]
}
]
*)

